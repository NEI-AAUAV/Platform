version: "3.9"

services:
  db_pg:
    image: postgres:15-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      # - ./api-nei/app/db/setup.sql:/docker-entrypoint-initdb.d/setup-nei.sql:ro
      # - ./api-rally/app/db/setup.sql:/docker-entrypoint-initdb.d/setup-rally.sql:ro
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
    restart: unless-stopped

  # db_mongo:
  #   image: mongo:4.4.19-rc0-focal
  #   ports:
  #     - 27017:27017
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: mongo
  #     MONGO_INITDB_ROOT_PASSWORD: mongo
  #   volumes:
  #     - mongo_data:/data/db
  #   healthcheck:
  #     test: echo 'db.stats().ok' | mongo localhost:27017/test --quiet
  #     interval: 10s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 40s
  #   networks:
  #     - backend
  #   restart: unless-stopped

  api_nei:
    build:
      context: api-nei
    ports:
      - 8000:8000
    environment:
      POSTGRES_SERVER: db_pg
      JWT_SECRET_KEY_PATH: /jwt.key
      JWT_PUBLIC_KEY_PATH: /jwt.key.pub
    volumes:
      - ./api-nei:/api_nei
      - ./dev-keys/jwt.key:/jwt.key:ro
      - ./dev-keys/jwt.key.pub:/jwt.key.pub:ro
    depends_on:
      db_pg:
        condition: service_healthy
    networks:
      - backend
    restart: unless-stopped

  api_tacaua:
    build:
      context: api-tacaua
    ports:
      - 8001:8001
    environment:
      API_NEI_SERVER: api_nei
      POSTGRES_SERVER: db_pg
      PUBLIC_KEY: /jwt.key.pub
    volumes:
      - ./api-tacaua:/api_tacaua
      - ./dev-keys/jwt.key.pub:/jwt.key.pub:ro
    depends_on:
      db_pg:
        condition: service_healthy
    networks:
      - backend
    restart: unless-stopped

  # api_family:
  #   build:
  #     context: api-family
  #   ports:
  #     - 8002:8002
  #   environment:
  #     MONGO_SERVER: db_mongo
  #     PUBLIC_KEY: /jwt.key.pub
  #   volumes:
  #     - ./api-family:/api_family
  #     - ./dev-keys/jwt.key.pub:/jwt.key.pub:ro
  #   depends_on:
  #     db_mongo:
  #       condition: service_healthy
  #   networks:
  #     - backend
  #   restart: unless-stopped

  web_nei:
    build:
      context: web-nei
    ports:
      - 3000:3000
    volumes:
      - nei_modules:/web_nei/node_modules
      - ./web-nei:/web_nei
    networks:
      - frontend
    restart: unless-stopped

  proxy:
    image: nginx:1.20-alpine
    ports:
      - 80:80
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./proxy/nei.web.ua.pt/default.conf:/etc/nginx/conf.d/default.conf
      - ./proxy/locations.conf:/etc/nginx/conf.d/locations.conf:ro
    depends_on:
      - web_nei
      - api_nei
      - api_tacaua
      # - api_family
    networks:
      - backend
      - frontend
    restart: unless-stopped

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  pg_data:
    driver: local
  mongo_data:
    driver: local
  nei_modules:
    driver: local
