name: Deploy

on:
  workflow_dispatch:
    inputs:
      extension:
        description: 'Deploy with extension'
        required: false
        type: choice
        options: 
        - ''
        - gala
        - rally
      copy_compose:
        description: 'Copy compose files to server'
        required: false
        type: boolean

jobs:
  copy:
    runs-on: self-hosted
    if: ${{ github.event.inputs.copy_compose == 'true' }}
    steps:
    - uses: actions/checkout@v3
    - name: Setup variables
      id: variables
      run: |
        export TAG=${GITHUB_SHA::7}
        echo "sources=compose.prod.yml" >> $GITHUB_OUTPUT
        echo "targets=~/deploys/${TAG}/" >> $GITHUB_OUTPUT
        if [[ -n "${{ github.event.inputs.extension }}" ]]; then
          mv extensions/${{ github.event.inputs.extension }}/compose.override.prod.yml compose.${{ github.event.inputs.extension }}.prod.yml
          echo "sources=compose.prod.yml,compose.${{ github.event.inputs.extension }}.prod.yml" >> $GITHUB_OUTPUT
        fi
    - name: Copy compose files
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        source: "${{ steps.variables.outputs.sources }}"
        target: "${{ steps.variables.outputs.targets }}"
        timeout: 100s

  build:
    runs-on: ubuntu-latest
    env:
      PRODUCTION: true
    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: neiaauav
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get compose files
      id: compose-files
      run: |
        echo "COMPOSE_FILE=$(make ${{ github.event.inputs.extension }} files)" >> "$GITHUB_OUTPUT"

    - name: Build and push
      uses: docker/bake-action@v3
      with:
        push: true
        files: ${{ steps.compose-files.outputs.COMPOSE_FILE }}
        set: |
          *.cache-to=type=gha,scope=cached-stage,mode=max
          *.cache-from=type=gha,scope=cached-stage

    # - name: Push docker images with tag
    #   run: |
    #     export TAG=${GITHUB_SHA::7}
    #     make ${{ github.event.inputs.extension }} build
    #     make ${{ github.event.inputs.extension }} push FLAGS="--ignore-push-failures"
  
  deploy:
    needs: build
    runs-on: self-hosted
    env:
      PRODUCTION: true
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
      EMAIL_SENDER_ADDRESS: ${{ secrets.EMAIL_SENDER_ADDRESS }}
      EMAIL_SMTP_HOST: ${{ secrets.EMAIL_SMTP_HOST }}
      EMAIL_SMTP_PASSWORD: ${{ secrets.EMAIL_SMTP_PASSWORD }}
      EMAIL_SMTP_USER: ${{ secrets.EMAIL_SMTP_USER }}
      IDP_SECRET_KEY: ${{ secrets.IDP_SECRET_KEY }}
      RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
    steps:
    - uses: actions/checkout@v3    
    - name: Deploy with docker-compose
      run: |
        make ${{ github.event.inputs.extension }} pull
        make ${{ github.event.inputs.extension }} up FLAGS="-d --remove-orphans"
        docker container prune -f
        docker image prune -af
        docker builder prune
