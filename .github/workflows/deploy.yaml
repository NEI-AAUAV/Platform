name: Push and Deploy

on:
  workflow_dispatch:
    inputs:
      extension:
        description: 'Deploy with extension'
        required: false
        type: choice
        options: 
        - gala
        - rally
      copy_docker_compose:
        description: 'Copy docker-compose files to server'
        required: true
        default: 'true'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PRODUCTION: true
      COMPOSE_PROFILES: ${{ github.event.inputs.profiles }}
    steps:
    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u neiaauav -p $DOCKER_PASSWORD
    - name: Build docker images
      run: |
        make build
    - name: Push docker images
      run: |
        make push FLAGS="--push-extensions"
    - name: Push docker images with tag
      run: |
        export TAG=${GITHUB_SHA::7}
        make build
        make push FLAGS="--push-extensions"
        echo "::set-output name=tag::${TAG}"
  
  deploy:
    needs: build
    runs-on: self-hosted
    timeout-minutes: 5
    env:
      PRODUCTION: true
      COMPOSE_PROFILES: ${{ github.event.inputs.profiles }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      EMAIL_SENDER_ADDRESS: ${{ secrets.EMAIL_SENDER_ADDRESS }}
      EMAIL_SMTP_HOST: ${{ secrets.EMAIL_SMTP_HOST }}
      EMAIL_SMTP_PASSWORD: ${{ secrets.EMAIL_SMTP_PASSWORD }}
      EMAIL_SMTP_USER: ${{ secrets.EMAIL_SMTP_USER }}
      IDP_SECRET_KEY: ${{ secrets.IDP_SECRET_KEY }}
      RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
    steps:
    - uses: actions/checkout@v3
    - if: github.event.inputs.copy_docker_compose == 'true'
      name: Copy docker-compose file
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        source: >
          "compose.prod.yml${{ github.event.inputs.extension ? 
          ',extensions/' + github.event.inputs.extension + '/compose.override.prod.yml' : '' }}"
        target: "~/deploys/${{ needs.build.outputs.tag }}/"
    - name: Deploy with docker-compose
      run: |
        docker stop $(docker ps -aq) || true
        docker rm $(docker ps -aq) || true
        docker image prune -af
        docker builder prune
        make pull
        make up FLAGS="-d --remove-orphans --force-recreate"
