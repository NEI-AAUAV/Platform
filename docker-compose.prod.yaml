version: "3.9"

services:
  db_pg:
    image: postgres:15-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgres_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes: 
      - ./api-nei/app/db/setup.sql:/docker-entrypoint-initdb.d/nei-0001.sql
      - ./api-rallytascas/app/db/setup.sql:/docker-entrypoint-initdb.d/rallytascas-0001.sql
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
    restart: always
  db_mongo:
    image: mongo:4.4.19-rc0-focal
    ports:
      - 27017:27017
    environment:
      MONGO_DB: mongo_test
      MONGO_USERNAME: mongo
      MONGO_PASSWORD: ${MONGO_PASSWORD:-mongo}
    volumes:
      - mongo_data:/data/db
    networks:
      - backend
    restart: always
  api_nei:
    image: neiaauav/api-nei:${TAG:-latest}
    build:
      context: api-nei
      dockerfile: Dockerfile.prod
    ports:
      - 8000:8000
    environment:
      ENV: production
      RECAPTCHA_ENABLED: "True"
      EMAIL_ENABLED: "True"
      POSTGRES_SERVER: db_pg
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes: 
      - /api-nei/static:/api_nei/static
      - /api-nei/dev-keys:/api_nei/dev-keys
    depends_on:
      db_pg:
        condition: service_healthy
    networks:
      - backend
    restart: always
  api_tacaua:
    image: neiaauav/api-tacaua:${TAG:-latest}
    build:
      context: api-tacaua
      dockerfile: Dockerfile.prod
    ports:
      - 8001:8001
    environment:
      ENV: production
      POSTGRES_SERVER: db_pg
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes: 
      - /api-tacaua/static:/api_tacaua/static
    depends_on:
      db_pg:
        condition: service_healthy
    networks:
      - backend
    restart: always
    profiles:
      - disabled
  api_rallytascas:
    image: neiaauav/api-rallytascas:${TAG:-latest}
    build:
      context: api-rallytascas
      dockerfile: Dockerfile.prod
    ports:
      - 8003:8003
    environment:
      ENV: production
      POSTGRES_SERVER: db_pg
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      SECRET_KEY: ${SECRET_KEY}
    volumes: 
      - /api-rallytascas/static:/api_rallytascas/static
    depends_on:
      db_pg:
        condition: service_healthy
    networks:
      - backend
    restart: always
    profiles:
      - disabled
  web_nei:
    image: neiaauav/web-nei:${TAG:-latest}
    build:
      context: web-nei
      dockerfile: Dockerfile.prod
    ports:
      - 3000:3000
    networks:
      - frontend
    restart: always
  proxy:
    image: neiaauav/proxy:${TAG:-latest}
    build:
      context: proxy/nei.web.ua.pt
      dockerfile: Dockerfile.prod
    ports:
      - 80:80
      - 443:443
    volumes:
      - /proxy/nei.web.ua.pt/nginx.conf:/etc/nginx/nginx.conf
      - /proxy/nei.web.ua.pt/default.prod.conf:/etc/nginx/conf.d/default.conf
      - /proxy/nei.web.ua.pt/locations.conf:/etc/nginx/conf.d/locations.conf
    depends_on:
      - web_nei
      - api_nei
    networks:
      - backend
      - frontend
    restart: always

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  pg_data:
    driver: local
  mongo_data:
    driver: local
