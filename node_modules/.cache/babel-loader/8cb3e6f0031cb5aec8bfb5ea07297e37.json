{"ast":null,"code":"var _jsxFileName = \"/home/joao/Documents/Website/src/Pages/Calendar/NEICalendar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Calendar as ReactCalendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport NEIAgenda from \"./NEIAgenda\";\nimport { eventStyleGetter, tooltipAcessor, zeroPad, dayString, months, categories as categoriesTypes } from \"./helpers\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('moment/locale/pt.js'); // COMPONENT\n\n\nconst NEICalendar = ({\n  style,\n  className,\n  selection,\n  setInitialCategories\n}) => {\n  _s();\n\n  // State\n  const [events, setEvents] = useState([]);\n  const [calendarSince, setCalendarSince] = useState(null);\n  const [calendarTo, setCalendarTo] = useState(null); // On render, initialize calendarSince and calendarTo based on current moment\n  // Also initialize categories\n\n  useEffect(() => {\n    timespanChanged(new Date());\n    setInitialCategories(Object.entries(categoriesTypes).map(([key, val]) => {\n      return {\n        'filter': key,\n        'color': val['color'],\n        'hover': val['hover']\n      };\n    }));\n  }, []); // Get events from API on render (and every time selection or time span changes)\n\n  useEffect(() => {\n    if (calendarSince != null && calendarTo != null) {\n      const tmin = `${calendarSince.getFullYear()}-${calendarSince.getMonth() + 1}-${calendarSince.getDate()}T00%3A00%3A00%2B01%3A00`;\n      const tmax = `${calendarTo.getFullYear()}-${calendarTo.getMonth() + 1}-${calendarTo.getDate()}T00%3A00%3A00%2B01%3A00`;\n      fetch(`https://www.googleapis.com/calendar/v3/calendars/7m2mlm7k1huomjeaa45gbhog0k%40group.calendar.google.com/events?key=AIzaSyDnT8fO6ARjx3OxMJCimhenNDLTkGuOmjE&timeMin=${tmin}&timeMax=${tmax}&singleEvents=true&maxResults=9999`).then(res => res.json()).then(json => {\n        let apiEvents = [];\n        json['items'].forEach(e => {\n          // Check that event matches selection\n          let matchAny = false;\n          let matchSelected = false;\n          Object.entries(categoriesTypes).forEach(([key, c]) => {\n            c['filters'].forEach(f => {\n              if (e['summary'].toLowerCase().indexOf(f.toLowerCase()) >= 0) {\n                matchAny = true;\n                matchSelected = selection.indexOf(key) >= 0;\n              }\n            });\n          }); // It must match any filter, if not, is considered NEI event (default) and to be showed NEI must be in selection\n\n          if (matchSelected == false && (matchAny && selection.indexOf('NEI') >= 0 || selection.indexOf('NEI') < 0)) {\n            return;\n          } // If so, compute object to add to events list\n\n\n          const start = 'date' in e['start'] ? e['start']['date'] : e['start']['dateTime'];\n          let end = 'date' in e['end'] ? e['end']['date'] : e['end']['dateTime'];\n\n          if ('date' in e['end']) {\n            let endDate = new Date(end);\n            endDate = endDate.setDate(endDate.getDate() - 1);\n            end = endDate;\n          }\n\n          apiEvents.push({\n            'id': e['id'],\n            'title': e['summary'],\n            'start': new Date(start),\n            'end': new Date(end),\n            'allDay': 'date' in e['start']\n          });\n        });\n        setEvents(apiEvents);\n      });\n    }\n  }, [selection, calendarSince, calendarTo]); // On navigate, update next and prev moments and recall API\n\n  const timespanChanged = date => {\n    let next = new Date(date);\n    let prev = new Date(date);\n\n    if (date.getMonth() == 11) {\n      next.setMonth(0);\n      next.setYear(date.getFullYear() + 1);\n      prev.setMonth(date.getMonth() - 1);\n    } else if (date.getMonth() == 0) {\n      next.setMonth(date.getMonth() + 1);\n      prev.setMonth(11);\n      prev.setYear(date.getFullYear() - 1);\n    } else {\n      next.setMonth(date.getMonth() + 1);\n      prev.setMonth(date.getMonth() - 1);\n    }\n\n    setCalendarSince(prev);\n    setCalendarTo(next);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ReactCalendar, {\n    popup: true,\n    className: \"col-12 vh-100 \" + className,\n    events: events,\n    views: ['month', 'agenda'],\n    step: 60,\n    showMultiDayTimes: true,\n    defaultDate: new Date(),\n    eventPropGetter: eventStyleGetter,\n    localizer: momentLocalizer(moment),\n    onNavigate: date => timespanChanged(date),\n    tooltipAccessor: event => tooltipAcessor(event),\n    components: {\n      agenda: {\n        event: NEIAgenda\n      }\n    },\n    messages: {\n      next: \"Próximo\",\n      previous: \"Anterior\",\n      today: \"Hoje\",\n      month: \"Mês\",\n      week: \"Semana\",\n      day: \"Dia\",\n      allDay: \"Todo o dia\"\n    },\n    style: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NEICalendar, \"uPNYt5Qn7b92Vka3hW4XBJbGzOw=\");\n\n_c = NEICalendar;\nexport default NEICalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NEICalendar\");","map":{"version":3,"sources":["/home/joao/Documents/Website/src/Pages/Calendar/NEICalendar/index.js"],"names":["React","useState","useEffect","Calendar","ReactCalendar","momentLocalizer","moment","NEIAgenda","eventStyleGetter","tooltipAcessor","zeroPad","dayString","months","categories","categoriesTypes","require","NEICalendar","style","className","selection","setInitialCategories","events","setEvents","calendarSince","setCalendarSince","calendarTo","setCalendarTo","timespanChanged","Date","Object","entries","map","key","val","tmin","getFullYear","getMonth","getDate","tmax","fetch","then","res","json","apiEvents","forEach","e","matchAny","matchSelected","c","f","toLowerCase","indexOf","start","end","endDate","setDate","push","date","next","prev","setMonth","setYear","event","agenda","previous","today","month","week","day","allDay"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {\n    Calendar as ReactCalendar,\n    momentLocalizer\n} from 'react-big-calendar';\nimport moment from 'moment';\nimport NEIAgenda from \"./NEIAgenda\";\nimport {eventStyleGetter, tooltipAcessor, zeroPad, dayString, months, categories as categoriesTypes} from \"./helpers\";\nimport \"./index.css\";\n\nrequire('moment/locale/pt.js');\n\n// COMPONENT\nconst NEICalendar = ({style, className, selection, setInitialCategories}) => {\n    \n    // State\n    const [events, setEvents] = useState([]);\n    const [calendarSince, setCalendarSince] = useState(null);\n    const [calendarTo, setCalendarTo] = useState(null);\n\n    // On render, initialize calendarSince and calendarTo based on current moment\n    // Also initialize categories\n    useEffect(() => {\n        timespanChanged(new Date());\n        setInitialCategories(Object.entries(categoriesTypes).map(([key, val]) => {\n            return {\n                'filter': key,\n                'color': val['color'],\n                'hover': val['hover']\n            }\n        }));\n    }, []);\n\n    // Get events from API on render (and every time selection or time span changes)\n    useEffect(() => {\n        if(calendarSince!=null && calendarTo!=null) {\n            const tmin = `${calendarSince.getFullYear()}-${calendarSince.getMonth()+1}-${calendarSince.getDate()}T00%3A00%3A00%2B01%3A00`;\n            const tmax = `${calendarTo.getFullYear()}-${calendarTo.getMonth()+1}-${calendarTo.getDate()}T00%3A00%3A00%2B01%3A00`;\n            fetch(`https://www.googleapis.com/calendar/v3/calendars/7m2mlm7k1huomjeaa45gbhog0k%40group.calendar.google.com/events?key=AIzaSyDnT8fO6ARjx3OxMJCimhenNDLTkGuOmjE&timeMin=${tmin}&timeMax=${tmax}&singleEvents=true&maxResults=9999`)\n                .then(res => res.json())\n                .then(json => {\n                    let apiEvents = [];\n                    json['items'].forEach(e => {\n                        // Check that event matches selection\n                        let matchAny = false;\n                        let matchSelected = false;\n                        Object.entries(categoriesTypes).forEach(([key, c]) => {\n                            c['filters'].forEach(f => {\n                                if(e['summary'].toLowerCase().indexOf(f.toLowerCase())>=0) {\n                                    matchAny=true;\n                                    matchSelected = selection.indexOf(key)>=0;\n                                }\n                            });\n                        });\n                        // It must match any filter, if not, is considered NEI event (default) and to be showed NEI must be in selection\n                        if(matchSelected==false && (matchAny && selection.indexOf('NEI')>=0 || selection.indexOf('NEI')<0)) {\n                            return;\n                        }\n                        // If so, compute object to add to events list\n                        const start = 'date' in e['start'] ? e['start']['date'] : e['start']['dateTime'];\n                        let end = 'date' in e['end'] ? e['end']['date'] : e['end']['dateTime'];\n                        if ('date' in e['end']) {\n                            let endDate = new Date(end);\n                            endDate = endDate.setDate(endDate.getDate()-1);\n                            end = endDate;\n                        }\n                        apiEvents.push({\n                            'id': e['id'],\n                            'title': e['summary'],\n                            'start': new Date(start),\n                            'end': new Date(end),\n                            'allDay': 'date' in e['start']\n                        });\n                    });\n                    setEvents(apiEvents);\n                });\n        }\n    }, [selection, calendarSince, calendarTo]);\n\n    // On navigate, update next and prev moments and recall API\n    const timespanChanged = (date) => {\n        let next = new Date(date);\n        let prev = new Date(date);\n\n        if (date.getMonth()==11) {\n            next.setMonth(0);\n            next.setYear(date.getFullYear()+1);\n            prev.setMonth(date.getMonth()-1);\n        } else if (date.getMonth()==0) {\n            next.setMonth(date.getMonth()+1);\n            prev.setMonth(11);\n            prev.setYear(date.getFullYear()-1);\n        } else {\n            next.setMonth(date.getMonth()+1);\n            prev.setMonth(date.getMonth()-1);\n        }\n\n        setCalendarSince(prev);\n        setCalendarTo(next);\n    }\n\n    return (\n        <ReactCalendar\n            popup\n            className={\"col-12 vh-100 \" + className}\n            events={events}\n            views={['month', 'agenda']}\n            step={60}\n            showMultiDayTimes\n            defaultDate={new Date()}\n            eventPropGetter={eventStyleGetter}\n            localizer={momentLocalizer(moment)}\n            onNavigate={(date) => timespanChanged(date)}\n            tooltipAccessor={(event) => tooltipAcessor(event)}\n            components={{\n                agenda: {\n                    event: NEIAgenda\n                }\n            }}\n            messages={{\n                next: \"Próximo\",\n                previous: \"Anterior\",\n                today: \"Hoje\",\n                month: \"Mês\",\n                week: \"Semana\",\n                day: \"Dia\",\n                allDay: \"Todo o dia\"\n            }}\n            style={style}\n        />\n    );\n}\n\nexport default NEICalendar;"]},"metadata":{},"sourceType":"module"}