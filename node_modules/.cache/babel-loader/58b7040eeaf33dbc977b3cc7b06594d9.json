{"ast":null,"code":"var _jsxFileName = \"/home/joao/Documents/Website/src/Pages/RGM/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Row, Spinner } from \"react-bootstrap\";\nimport Document from \"../../Components/Document\";\nimport Tabs from \"../../Components/Tabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validCategories = {\n  'PAO': {\n    'singular': 'Plano de Atividades e Orçamento',\n    'plural': 'Planos de Atividades e Orçamento'\n  },\n  'RAC': {\n    'singular': 'Relatório de Atividades e Contas',\n    'plural': 'Relatórios de Atividades e Contas'\n  },\n  'ATAS': {\n    'singular': 'Ata da RGM',\n    'plural': 'Atas da RGM'\n  }\n}; // Animation\n\nconst animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\nconst animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n/**\n * This component renders RGM page for a given document category\n * The category is passed on the URL (/rgm/<category>) and the valid options are summed up on variable validCategories\n */\n\nconst RGM = () => {\n  _s();\n\n  // Document category is passed as parameter in URL\n  let {\n    id\n  } = useParams(); // Component state\n\n  const [title, setTitle] = useState(\"\");\n  const [docs, setDocs] = useState([]);\n  const [tab, setTab] = useState(0);\n  const [loading, setLoading] = useState(true); // On component render...\n\n  useEffect(() => {\n    setLoading(true); // Validate document category\n\n    if (Object.keys(validCategories).findIndex(item => id.toLowerCase() === item.toLowerCase()) < 0) {\n      window.location.href = \"/404\";\n    }\n\n    id = id.toUpperCase();\n    setTitle(validCategories[id]['plural']); // Fetch API if valid\n\n    fetch(process.env.REACT_APP_API + \"/rgm/?category=\" + id).then(res => res.json()).then(json => {\n      if ('data' in json) {\n        setDocs(json['data']); // Set tab to maximum year\n\n        json['data'].forEach(doc => setTab(oldTab => oldTab < doc['mandato'] ? doc['mandato'] : oldTab));\n      } else {\n        window.location.href = \"/404\";\n      }\n\n      setLoading(false);\n    }).catch(error => {\n      window.location.href = \"/404\";\n    });\n  }, []);\n\n  const changeTab = t => {\n    // Change tab and simulate loading from API\n    setLoading(true);\n    setTab(t);\n    setTimeout(function () {\n      setLoading(false);\n    }, 300);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column flex-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mb-5\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), // Only show tabs to ATAS category\n    id.toUpperCase() == \"ATAS\" && /*#__PURE__*/_jsxDEV(Tabs, {\n      tabs: [...new Set(docs.map(doc => doc.mandato))],\n      _default: tab,\n      onChange: changeTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"grow\",\n      variant: \"primary\",\n      className: \"mx-auto mb-3\",\n      title: \"A carregar...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), !loading && /*#__PURE__*/_jsxDEV(Row, {\n      children: // On ATAS category, show only those which mandato match tab\n      docs.filter(doc => id.toUpperCase() != \"ATAS\" || doc.mandato == tab).map((doc, index, arr) => /*#__PURE__*/_jsxDEV(Document, {\n        name: id.toUpperCase() != \"ATAS\" ? id.toUpperCase() + ' ' + doc.mandato : \"ATA\" + ' ' + (arr.length - index) + ' ',\n        description: validCategories[id.toUpperCase()]['singular'] + ' de ' + doc.mandato,\n        link: process.env.REACT_APP_STATIC + doc.file,\n        blank: true,\n        className: \"col-lg-6 col-xl-3 slideUpFade\",\n        style: {\n          animationDelay: animationBase + animationIncrement * index + \"s\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RGM, \"wJUt0xPROfILR8opqqcg7cOBFec=\", false, function () {\n  return [useParams];\n});\n\n_c = RGM;\nexport default RGM;\n\nvar _c;\n\n$RefreshReg$(_c, \"RGM\");","map":{"version":3,"sources":["/home/joao/Documents/Website/src/Pages/RGM/index.js"],"names":["React","useState","useEffect","useParams","Row","Spinner","Document","Tabs","validCategories","animationBase","parseFloat","process","env","REACT_APP_ANIMATION_BASE","animationIncrement","REACT_APP_ANIMATION_INCREMENT","RGM","id","title","setTitle","docs","setDocs","tab","setTab","loading","setLoading","Object","keys","findIndex","item","toLowerCase","window","location","href","toUpperCase","fetch","REACT_APP_API","then","res","json","forEach","doc","oldTab","catch","error","changeTab","t","setTimeout","Set","map","mandato","filter","index","arr","length","REACT_APP_STATIC","file","animationDelay"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n    Row, Spinner\n} from \"react-bootstrap\";\nimport Document from \"../../Components/Document\";\nimport Tabs from \"../../Components/Tabs\";\n\nconst validCategories = {\n    'PAO': {\n        'singular': 'Plano de Atividades e Orçamento',\n        'plural': 'Planos de Atividades e Orçamento'\n    },\n    'RAC': {\n        'singular': 'Relatório de Atividades e Contas',\n        'plural': 'Relatórios de Atividades e Contas'\n    },\n    'ATAS': {\n        'singular': 'Ata da RGM',\n        'plural': 'Atas da RGM'\n    }\n};\n\n// Animation\nconst animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\nconst animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n\n\n/**\n * This component renders RGM page for a given document category\n * The category is passed on the URL (/rgm/<category>) and the valid options are summed up on variable validCategories\n */\n\nconst RGM = () => {\n    // Document category is passed as parameter in URL\n    let { id } = useParams();\n\n    // Component state\n    const [title, setTitle] = useState(\"\");\n    const [docs, setDocs] = useState([]);\n    const [tab, setTab] = useState(0);\n    const [loading, setLoading] = useState(true);\n\n    // On component render...\n    useEffect(() => {\n        setLoading(true);\n\n        // Validate document category\n        if (Object.keys(validCategories).findIndex(item => id.toLowerCase() === item.toLowerCase()) < 0) {\n            window.location.href = \"/404\";\n        }\n        id = id.toUpperCase();\n        setTitle(validCategories[id]['plural']);\n        // Fetch API if valid\n        fetch(process.env.REACT_APP_API + \"/rgm/?category=\" + id)\n            .then(res => res.json())\n            .then(json => {\n                if ('data' in json) {\n                    setDocs(json['data']);\n                    // Set tab to maximum year\n                    json['data'].forEach(doc => setTab(oldTab => oldTab < doc['mandato'] ? doc['mandato'] : oldTab));\n                } else {\n                    window.location.href = \"/404\";\n                }\n                setLoading(false);\n            }).catch((error) => {\n                window.location.href = \"/404\";\n            });\n    }, []);\n\n    const changeTab = (t) => {\n        // Change tab and simulate loading from API\n        setLoading(true);\n        setTab(t);\n        setTimeout(function () {\n            setLoading(false);\n        }, 300);\n    }\n\n    return (\n        <div className=\"d-flex flex-column flex-wrap\">\n            <h2 className=\"text-center mb-5\">{title}</h2>\n            {\n                // Only show tabs to ATAS category\n                id.toUpperCase() == \"ATAS\" &&\n                <Tabs\n                    tabs={[...new Set(docs.map(doc => doc.mandato))]}\n                    _default={tab}\n                    onChange={changeTab}\n                >\n                </Tabs>\n            }\n            {\n                loading &&\n                <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n            }\n            {\n                !loading &&\n                <Row>\n                    {\n                        // On ATAS category, show only those which mandato match tab\n                        docs.filter(doc => id.toUpperCase() != \"ATAS\" || doc.mandato == tab).map(\n                            (doc, index, arr) =>\n                                <Document\n                                    name={\n                                        id.toUpperCase() != \"ATAS\"\n                                            ?\n                                            id.toUpperCase() + ' ' + doc.mandato\n                                            :\n                                            \"ATA\" + ' ' + (arr.length - index) + ' '\n                                    }\n                                    description={validCategories[id.toUpperCase()]['singular'] + ' de ' + doc.mandato}\n                                    link={process.env.REACT_APP_STATIC + doc.file}\n                                    blank={true}\n                                    className=\"col-lg-6 col-xl-3 slideUpFade\"\n                                    style={{\n                                        animationDelay: animationBase + animationIncrement * index + \"s\",\n                                    }}\n                                />\n                        )\n                    }\n                </Row>\n            }\n        </div>\n    );\n}\n\nexport default RGM;"]},"metadata":{},"sourceType":"module"}