{"ast":null,"code":"var _jsxFileName = \"/home/joao/Documents/Website/src/Components/Navbar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Navbar as BNavbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport data from \"./data\";\nimport logo from './logo.png';\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [transparent, setTransparent] = useState(true);\n  const [collapsed, setCollapsed] = useState(false); // On scrool, make bg white\n\n  useEffect(() => {\n    window.addEventListener('scroll', event => {\n      // Get scroll position\n      if (window.pageYOffset > 20) {\n        setTransparent(false);\n      } else {\n        setTransparent(true);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: transparent ? \"navbardiv col-12 p-0 position-fixed bg-transparent\" : \"navbardiv col-12 p-0 position-fixed bg-white\",\n    children: /*#__PURE__*/_jsxDEV(BNavbar, {\n      bg: \"transparent\",\n      expand: \"lg\",\n      className: \"px-0 col-11 col-sm-10 col-xxl-9 mx-auto\",\n      onToggle: col => setCollapsed(col),\n      children: [/*#__PURE__*/_jsxDEV(BNavbar.Brand, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          width: \"75\",\n          height: \"75\",\n          className: \"d-inline-block align-top mr-5\",\n          alt: \"NEI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BNavbar.Toggle, {\n        \"aria-controls\": \"basic-BNavbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: collapsed ? \"hamburguer open\" : \"hamburguer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BNavbar.Collapse, {\n        id: \"basic-BNavbar-nav\",\n        className: \"bg-white small font-weight-bold\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"mr-auto\",\n          children: data.filter(d => d).map(navEl => !navEl.dropdown ? /*#__PURE__*/_jsxDEV(Nav.Link, {\n            as: Link,\n            to: navEl.link,\n            className: window.location.pathname == navEl.link ? \"active\" : \"\",\n            target: navEl.external && \"_blank\",\n            rel: navEl.external && \"noreferrer\",\n            children: navEl.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(NavDropdown, {\n            title: navEl.name,\n            id: \"dropdown-\" + navEl.name.replace(\" \", \"\"),\n            children: navEl.dropdown.filter(d => d).map(dropdown => /*#__PURE__*/_jsxDEV(NavDropdown.Item, { ...(dropdown.external ? {\n                href: dropdown.link\n              } : {\n                as: Link,\n                to: dropdown.link\n              }),\n              target: dropdown.external && \"_blank\",\n              rel: dropdown.external && \"noreferrer\",\n              children: dropdown.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 57\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"rWxOdECmx4AtqIZR7RNuCEGg/0c=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/joao/Documents/Website/src/Components/Navbar/index.js"],"names":["React","useState","useEffect","Navbar","BNavbar","Nav","NavDropdown","Link","data","logo","transparent","setTransparent","collapsed","setCollapsed","window","addEventListener","event","pageYOffset","col","filter","d","map","navEl","dropdown","link","location","pathname","external","name","replace","href","as","to"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport {\n    Navbar as BNavbar,\n    Nav,\n    NavDropdown\n} from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nimport data from \"./data\";\nimport logo from './logo.png';\nimport \"./index.css\";\n\nconst Navbar = () => {\n\n    const [transparent, setTransparent] = useState(true);\n    const [collapsed, setCollapsed] = useState(false);\n\n    // On scrool, make bg white\n    useEffect(() => {\n        window.addEventListener('scroll', (event) => {\n            // Get scroll position\n            if (window.pageYOffset > 20) {\n                setTransparent(false);\n            } else {\n                setTransparent(true);\n            }\n        });\n    }, []);\n\n    return (\n        <div className={transparent ? \"navbardiv col-12 p-0 position-fixed bg-transparent\" : \"navbardiv col-12 p-0 position-fixed bg-white\"}>\n            <BNavbar\n                bg=\"transparent\"\n                expand=\"lg\"\n                className=\"px-0 col-11 col-sm-10 col-xxl-9 mx-auto\"\n                onToggle={(col) => setCollapsed(col)}\n            >\n                <BNavbar.Brand href=\"/\">\n                    <img\n                        src={logo}\n                        width=\"75\"\n                        height=\"75\"\n                        className=\"d-inline-block align-top mr-5\"\n                        alt=\"NEI\"\n                    />\n                </BNavbar.Brand>\n                <BNavbar.Toggle aria-controls=\"basic-BNavbar-nav\">\n                    <div\n                        className={collapsed ? \"hamburguer open\" : \"hamburguer\"}\n                    >\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </BNavbar.Toggle>\n                <BNavbar.Collapse id=\"basic-BNavbar-nav\" className=\"bg-white small font-weight-bold\">\n                    <Nav className=\"mr-auto\">\n                        {\n                            data.filter(d => d).map(\n                                navEl =>\n                                    !navEl.dropdown\n                                        ?\n                                        <Nav.Link\n                                            as={Link}\n                                            to={navEl.link}\n                                            className={\n                                                window.location.pathname == navEl.link ? \"active\" : \"\"\n                                            }\n                                            target={navEl.external && \"_blank\"}\n                                            rel={navEl.external && \"noreferrer\"}\n                                        >\n                                            {navEl.name}\n                                        </Nav.Link>\n                                        :\n                                        <NavDropdown title={navEl.name} id={\"dropdown-\" + navEl.name.replace(\" \", \"\")}>\n                                            {\n                                                navEl.dropdown.filter(d => d).map(\n                                                    dropdown =>\n                                                        <NavDropdown.Item\n                                                            {...(dropdown.external ? { href: dropdown.link } : { as: Link, to: dropdown.link })}\n                                                            target={dropdown.external && \"_blank\"}\n                                                            rel={dropdown.external && \"noreferrer\"}\n                                                        >{dropdown.name}\n                                                        </NavDropdown.Item>\n                                                )\n                                            }\n                                        </NavDropdown>\n                            )\n                        }\n                    </Nav>\n                </BNavbar.Collapse>\n            </BNavbar>\n        </div>\n    );\n\n}\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}