{"ast":null,"code":"var _jsxFileName = \"/home/joao/Documents/Website/src/Components/Filters/FilterButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\n/**\n * This component renders a filter button\n * \n * Parameters:\n * - filter                 obj         {filter: str, color: str, hover: str}\n *                                          filter: Filter name (required)\n *                                          color: Normal color (optional, if missing .primary will be applied)\n * - activeFilters          str[]       List of active filters\n * - setActiveFilters       function    Function to change active filters list\n * - btnClass               str         Class for button\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilterButton = ({\n  filter,\n  setActiveFilters,\n  activeFilters,\n  btnClass\n}) => {\n  _s();\n\n  const [style, setStyle] = useState({});\n  const [hover, setHover] = useState(false); // Change color on hover and activeFilters change\n\n  useEffect(() => {\n    // If filter does not have color, ignore (default .primary will be applied)\n    if (!('color' in filter)) {\n      return;\n    } // If active or hover, fill\n\n\n    if (hover || activeFilters.includes(filter['filter'])) {\n      setStyle({\n        backgroundColor: filter['color'],\n        borderColor: filter['color'],\n        color: '#fff'\n      });\n    } // Else, outline \n    else {\n        setStyle({\n          borderColor: filter['color'],\n          color: filter['color']\n        });\n      }\n  }, [activeFilters, hover]);\n  return filter && /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n    type: \"checkbox\",\n    value: activeFilters,\n    onChange: setActiveFilters,\n    className: \"mr-2\",\n    onMouseEnter: () => setHover(true),\n    onMouseLeave: () => setHover(false),\n    className: btnClass,\n    children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n      variant: \"outline-primary pill\",\n      className: \"rounded-pill\",\n      value: filter['filter'],\n      style: style,\n      children: filter['filter']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, filter['filter'], false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FilterButton, \"YULd/9FI4he/lqahMfS3xoxYYog=\");\n\n_c = FilterButton;\nexport default FilterButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterButton\");","map":{"version":3,"sources":["/home/joao/Documents/Website/src/Components/Filters/FilterButton.js"],"names":["React","useState","useEffect","ToggleButton","ToggleButtonGroup","FilterButton","filter","setActiveFilters","activeFilters","btnClass","style","setStyle","hover","setHover","includes","backgroundColor","borderColor","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,iBAAvB,QAAgD,iBAAhD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASC,EAAAA,gBAAT;AAA2BC,EAAAA,aAA3B;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AAAA;;AAE1E,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC,CAH0E,CAK1E;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAI,EAAE,WAAWI,MAAb,CAAJ,EAA0B;AACtB;AACH,KAJW,CAKZ;;;AACA,QAAIM,KAAK,IAAIJ,aAAa,CAACM,QAAd,CAAuBR,MAAM,CAAC,QAAD,CAA7B,CAAb,EAAuD;AACnDK,MAAAA,QAAQ,CAAC;AACLI,QAAAA,eAAe,EAAET,MAAM,CAAC,OAAD,CADlB;AAELU,QAAAA,WAAW,EAAEV,MAAM,CAAC,OAAD,CAFd;AAGLW,QAAAA,KAAK,EAAE;AAHF,OAAD,CAAR;AAKH,KAND,CAOA;AAPA,SAQK;AACDN,QAAAA,QAAQ,CAAC;AACLK,UAAAA,WAAW,EAAEV,MAAM,CAAC,OAAD,CADd;AAELW,UAAAA,KAAK,EAAEX,MAAM,CAAC,OAAD;AAFR,SAAD,CAAR;AAIH;AACJ,GApBQ,EAoBN,CAACE,aAAD,EAAgBI,KAAhB,CApBM,CAAT;AAsBA,SACIN,MAAM,iBACN,QAAC,iBAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAEE,aAFX;AAGI,IAAA,QAAQ,EAAED,gBAHd;AAII,IAAA,SAAS,EAAC,MAJd;AAMI,IAAA,YAAY,EAAE,MAAMM,QAAQ,CAAC,IAAD,CANhC;AAOI,IAAA,YAAY,EAAE,MAAMA,QAAQ,CAAC,KAAD,CAPhC;AAQI,IAAA,SAAS,EAAEJ,QARf;AAAA,2BAUI,QAAC,YAAD;AACI,MAAA,OAAO,EAAC,sBADZ;AAEI,MAAA,SAAS,EAAC,cAFd;AAGI,MAAA,KAAK,EAAEH,MAAM,CAAC,QAAD,CAHjB;AAII,MAAA,KAAK,EAAEI,KAJX;AAAA,gBAMKJ,MAAM,CAAC,QAAD;AANX;AAAA;AAAA;AAAA;AAAA;AAVJ,KAKSA,MAAM,CAAC,QAAD,CALf;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsBH,CAlDD;;GAAMD,Y;;KAAAA,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\n\n/**\n * This component renders a filter button\n * \n * Parameters:\n * - filter                 obj         {filter: str, color: str, hover: str}\n *                                          filter: Filter name (required)\n *                                          color: Normal color (optional, if missing .primary will be applied)\n * - activeFilters          str[]       List of active filters\n * - setActiveFilters       function    Function to change active filters list\n * - btnClass               str         Class for button\n */\nconst FilterButton = ({filter, setActiveFilters, activeFilters, btnClass}) => {\n\n    const [style, setStyle] = useState({});\n    const [hover, setHover] = useState(false);\n\n    // Change color on hover and activeFilters change\n    useEffect(() => {\n        // If filter does not have color, ignore (default .primary will be applied)\n        if (!('color' in filter)) {\n            return;\n        }\n        // If active or hover, fill\n        if (hover || activeFilters.includes(filter['filter'])) {\n            setStyle({\n                backgroundColor: filter['color'],\n                borderColor: filter['color'],\n                color: '#fff'\n            });\n        }\n        // Else, outline \n        else {\n            setStyle({\n                borderColor: filter['color'],\n                color: filter['color']\n            });\n        }\n    }, [activeFilters, hover]);\n\n    return (\n        filter &&\n        <ToggleButtonGroup \n            type=\"checkbox\" \n            value={activeFilters} \n            onChange={setActiveFilters} \n            className=\"mr-2\" \n            key={filter['filter']}\n            onMouseEnter={() => setHover(true)}\n            onMouseLeave={() => setHover(false)}\n            className={btnClass}\n        >\n            <ToggleButton \n                variant=\"outline-primary pill\" \n                className=\"rounded-pill\" \n                value={filter['filter']}\n                style={style}\n            >\n                {filter['filter']}\n            </ToggleButton>\n        </ToggleButtonGroup>\n    );\n}\n\nexport default FilterButton;"]},"metadata":{},"sourceType":"module"}