{"ast":null,"code":"var _jsxFileName = \"/home/joao/Documents/Website/src/Pages/Videos/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Typist from 'react-typist';\nimport Filters from '../../Components/Filters';\nimport Document from '../../Components/Document';\nimport PageNav from '../../Components/PageNav';\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Row, Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Videos = () => {\n  _s();\n\n  // Animation\n  const animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\n  const animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT); // Filters\n\n  const [categories, setCategories] = useState([]);\n  const [filters, setFilters] = useState([]);\n  const [selection, setSelection] = useState([]);\n  const [loadingCategories, setLoadingCategories] = useState(true); // Get categories from API\n\n  useEffect(() => {\n    fetch(process.env.REACT_APP_API + \"/videos/categories/\").then(response => response.json()).then(response => {\n      if ('data' in response) {\n        setCategories(response['data']);\n        var cats = [];\n        var catsObjs = [];\n        response['data'].forEach(c => {\n          cats.push(c.name);\n          catsObjs.push({\n            filter: c.name,\n            color: c.color\n          });\n        });\n        setSelection(cats);\n        setFilters(catsObjs);\n        setLoadingCategories(false);\n      }\n    });\n  }, []); // Videos\n\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true); // Pagination\n\n  const [pages, setPages] = useState(1);\n  const [selPage, setSelPage] = useState(1); // When categories selected change, update videos list (get from API)\n\n  useEffect(() => {\n    setLoading(true);\n\n    if (selection.length) {\n      // Compute url with categories ids selected\n      let url = process.env.REACT_APP_API + \"/videos/?\";\n      selection.forEach(s => {\n        const candidates = categories.filter(c => c.name == s);\n\n        if (candidates.length > 0) {\n          url += 'category[]= ' + candidates[0].id + '&';\n        }\n      });\n      url += 'page=' + selPage; // Get data from API\n\n      fetch(url).then(response => response.json()).then(response => {\n        if ('data' in response) {\n          setVideos(response['data']);\n          setPages(response['page']['pagesNumber']);\n          setSelPage(response['page']['currentPage']);\n        } else {\n          setLoading(false);\n          setPages(1);\n          setSelPage(1);\n        }\n\n        setLoading(false);\n      }).catch(error => {\n        console.error(\"Erro getting videos from API!\", error);\n        setLoading(false);\n        setPages(1);\n        setSelPage(1);\n      });\n    } else {\n      setLoading(false);\n      setVideos([]);\n      setPages(1);\n      setSelPage(1);\n    }\n  }, [selection, selPage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(Typist, {\n        children: \"V\\xEDdeos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), !loadingCategories && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 d-flex flex-row flex-wrap my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2 col-12 col-md-4 d-flex\",\n        style: {\n          animationDelay: animationBase + animationIncrement * 0 + \"s\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"slideUpFade col-12 text-primary mb-3 my-md-auto ml-auto pr-3 text-center text-md-right\",\n          children: \"Categorias\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Filters, {\n        filterList: filters,\n        activeFilters: selection,\n        setActiveFilters: setSelection,\n        className: \"slideUpFade mr-auto col-12 col-md-8 d-flex flex-row flex-wrap\",\n        btnClass: \"mx-auto mr-md-2 ml-md-0 mb-2\",\n        style: {\n          animationDelay: animationBase + animationIncrement * 1 + \"s\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [(loading || loadingCategories) && /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\",\n        variant: \"primary\",\n        className: \"mx-auto mb-3\",\n        title: \"A carregar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), !loading && videos.map(video => {\n        const candidates = categories.filter(c => c.id == video.tag);\n        let tag = [];\n\n        if (candidates.length > 0) {\n          tag = {\n            name: candidates[0].name,\n            color: candidates[0].color,\n            className: \"\"\n          };\n        }\n\n        return /*#__PURE__*/_jsxDEV(Document, {\n          name: video.title,\n          description: video.subtitle,\n          link: '/videos/' + video.id,\n          blank: false,\n          icon: faPlayCircle,\n          image: process.env.REACT_APP_STATIC + video.image,\n          className: \"col-lg-6 col-xl-4 slideUpFade p-2\",\n          tags: tag ? [tag] : []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: pages > 1 && /*#__PURE__*/_jsxDEV(PageNav, {\n        page: selPage,\n        total: pages,\n        handler: setSelPage,\n        className: \"mx-auto mt-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), // Error\n    !loading && !loadingCategories && videos.length == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center mt-3\",\n        children: \"Nenhum v\\xEDdeo encontrado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-center\",\n        children: \"Tenta definir filtros menos restritivos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Videos, \"sXiUzZJA3nGLfh3wYoTrNP4Wx9g=\");\n\n_c = Videos;\nexport default Videos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"sources":["/home/joao/Documents/Website/src/Pages/Videos/index.js"],"names":["React","useEffect","useState","Typist","Filters","Document","PageNav","faPlayCircle","Row","Spinner","Videos","animationBase","parseFloat","process","env","REACT_APP_ANIMATION_BASE","animationIncrement","REACT_APP_ANIMATION_INCREMENT","categories","setCategories","filters","setFilters","selection","setSelection","loadingCategories","setLoadingCategories","fetch","REACT_APP_API","then","response","json","cats","catsObjs","forEach","c","push","name","filter","color","videos","setVideos","loading","setLoading","pages","setPages","selPage","setSelPage","length","url","s","candidates","id","catch","error","console","animationDelay","map","video","tag","className","title","subtitle","REACT_APP_STATIC","image"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Typist from 'react-typist';\n\nimport Filters from '../../Components/Filters';\nimport Document from '../../Components/Document';\nimport PageNav from '../../Components/PageNav';\n\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport {\n    Row, Spinner\n} from \"react-bootstrap\";\n\nconst Videos = () => {\n\n    // Animation\n    const animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\n    const animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n\n    // Filters\n    const [categories, setCategories] = useState([]);\n    const [filters, setFilters] = useState([]);\n    const [selection, setSelection] = useState([]);\n    const [loadingCategories, setLoadingCategories] = useState(true);\n\n    // Get categories from API\n    useEffect(() => {\n        fetch(process.env.REACT_APP_API + \"/videos/categories/\")\n            .then(response => response.json())\n            .then((response) => {\n                if ('data' in response) {\n                    setCategories(response['data']);\n                    var cats = [];\n                    var catsObjs = [];\n                    response['data'].forEach(c => {\n                        cats.push(c.name);\n                        catsObjs.push({ filter: c.name, color: c.color });\n                    });\n                    setSelection(cats);\n                    setFilters(catsObjs);\n                    setLoadingCategories(false);\n                }\n            });\n    }, []);\n\n    // Videos\n    const [videos, setVideos] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    // Pagination\n    const [pages, setPages] = useState(1);\n    const [selPage, setSelPage] = useState(1);\n\n    // When categories selected change, update videos list (get from API)\n    useEffect(() => {\n        setLoading(true);\n        if (selection.length) {\n            // Compute url with categories ids selected\n            let url = process.env.REACT_APP_API + \"/videos/?\";\n            selection.forEach(s => {\n                const candidates = categories.filter(c => c.name == s);\n                if (candidates.length > 0) {\n                    url += 'category[]= ' + candidates[0].id + '&';\n                }\n            });\n            url += 'page=' + selPage;\n            // Get data from API\n            fetch(url)\n                .then(response => response.json())\n                .then((response) => {\n                    if ('data' in response) {\n                        setVideos(response['data']);\n                        setPages(response['page']['pagesNumber']);\n                        setSelPage(response['page']['currentPage']);\n                    } else {\n                        setLoading(false);\n                        setPages(1);\n                        setSelPage(1);\n                    }\n                    setLoading(false)\n                }).catch((error) => {\n                    console.error(\"Erro getting videos from API!\", error);\n                    setLoading(false);\n                    setPages(1);\n                    setSelPage(1);\n                });\n        } else {\n            setLoading(false);\n            setVideos([]);\n            setPages(1);\n            setSelPage(1);\n        }\n    }, [selection, selPage])\n\n    return (\n        <div>\n            <h2 className=\"text-center\">\n                <Typist>Vídeos</Typist>\n            </h2>\n\n            {\n                // Filter by category\n            }\n            {\n                !loadingCategories &&\n                <div className=\"col-12 d-flex flex-row flex-wrap my-5\">\n                    <div\n                        className=\"mb-2 col-12 col-md-4 d-flex\"\n                        style={{\n                            animationDelay: animationBase + animationIncrement * 0 + \"s\",\n                        }}\n                    >\n                        <p className=\"slideUpFade col-12 text-primary mb-3 my-md-auto ml-auto pr-3 text-center text-md-right\">Categorias</p>\n                    </div>\n                    <Filters\n                        filterList={filters}\n                        activeFilters={selection}\n                        setActiveFilters={setSelection}\n                        className=\"slideUpFade mr-auto col-12 col-md-8 d-flex flex-row flex-wrap\"\n                        btnClass=\"mx-auto mr-md-2 ml-md-0 mb-2\"\n                        style={{\n                            animationDelay: animationBase + animationIncrement * 1 + \"s\",\n                        }}\n                    />\n                </div>\n            }\n\n            {\n                // Videos list\n            }\n            <Row>\n\n                {\n                    (loading || loadingCategories) &&\n                    <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n                }\n\n                {\n                    !loading && videos.map(video => {\n\n                        const candidates = categories.filter(c => c.id == video.tag);\n                        let tag = [];\n                        if (candidates.length > 0) {\n                            tag = {\n                                name: candidates[0].name,\n                                color: candidates[0].color,\n                                className: \"\"\n                            }\n                        }\n\n                        return (<Document\n                            name={video.title}\n                            description={video.subtitle}\n                            link={'/videos/' + video.id}\n                            blank={false}\n                            icon={faPlayCircle}\n                            image={process.env.REACT_APP_STATIC + video.image}\n                            className=\"col-lg-6 col-xl-4 slideUpFade p-2\"\n                            tags={tag ? [tag] : []}\n                        />)\n                    })\n                }\n            </Row>\n\n            {\n                // Pagination\n            }\n            <Row>\n                {\n                    pages > 1 &&\n                    <PageNav\n                        page={selPage}\n                        total={pages}\n                        handler={setSelPage}\n                        className=\"mx-auto mt-3\"\n                    ></PageNav>\n                }\n            </Row>\n\n\n\n            {\n                // Error\n                !loading && !loadingCategories && videos.length == 0 &&\n                <div>\n                    <h3 className=\"text-center mt-3\">Nenhum vídeo encontrado</h3>\n                    <h4 className=\"text-center\">Tenta definir filtros menos restritivos</h4>\n                </div>\n            }\n\n\n\n        </div>\n    );\n}\n\nexport default Videos;"]},"metadata":{},"sourceType":"module"}