{"ast":null,"code":"var _jsxFileName = \"/home/dan1erusam4/.ssh/Website/src/Pages/Video/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport Typist from 'react-typist';\nimport { Row, Spinner } from \"react-bootstrap\";\nimport YoutubeEmbed from '../../Components/YoutubeEmbed';\nimport Alert from '../../Components/Alert';\nimport { faList } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Video = () => {\n  _s();\n\n  // get course from URL parameters\n  let {\n    id\n  } = useParams();\n  const [video, setVideo] = useState(null);\n  const [loading, setLoading] = useState(true); // On load, get video from API\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(process.env.REACT_APP_API + \"/videos/?video=\" + id).then(response => response.json()).then(response => {\n      console.log(\"GOT RESPONSE\", response);\n\n      if ('data' in response) {\n        setVideo(response['data']);\n      } else {\n        window.location.href = \"/404\";\n      }\n\n      setLoading(false);\n    }).catch(error => {\n      window.location.href = \"/404\";\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!loading && video && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"col-12 m-0 p-0 text-left small text-primary mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"\",\n          href: \"/videos\",\n          children: \"\\u276E Voltar aos v\\xEDdeos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-center w-100 text-secondary\",\n        children: video.subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-secondary w-100 text-center small\",\n        children: [\"Atualizado a \", new Date(video.created.replace(/-/g, \"/\")).toLocaleDateString('pt-PT', {\n          day: 'numeric',\n          month: 'long',\n          year: 'numeric'\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(YoutubeEmbed, {\n        embedId: video.ytId,\n        playlist: video.playlist === \"1\",\n        className: \"my-4 slideUpFade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), video.playlist == \"1\" && /*#__PURE__*/_jsxDEV(Alert, {\n        alert: {\n          type: 'info',\n          text: 'Este tópico é uma lista de reprodução. Para navegares entre os vídeos utiliza o ícone no canto superior direito do reprodutor.'\n        },\n        setAlert: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: loading && /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\",\n        variant: \"primary\",\n        className: \"mx-auto mb-3\",\n        title: \"A carregar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Video, \"uU2QYFSrfyO34fM7+aJEV3Ay2HQ=\", false, function () {\n  return [useParams];\n});\n\n_c = Video;\nexport default Video;\n\nvar _c;\n\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"sources":["/home/dan1erusam4/.ssh/Website/src/Pages/Video/index.js"],"names":["React","useState","useEffect","useParams","Typist","Row","Spinner","YoutubeEmbed","Alert","faList","Video","id","video","setVideo","loading","setLoading","fetch","process","env","REACT_APP_API","then","response","json","console","log","window","location","href","catch","error","title","subtitle","Date","created","replace","toLocaleDateString","day","month","year","ytId","playlist","type","text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router';\nimport Typist from 'react-typist';\nimport {\n    Row, Spinner\n} from \"react-bootstrap\";\nimport YoutubeEmbed from '../../Components/YoutubeEmbed';\nimport Alert from '../../Components/Alert';\nimport { faList } from '@fortawesome/free-solid-svg-icons';\n\n\nconst Video = () => {\n\n    // get course from URL parameters\n    let {id} = useParams();\n\n    const [video, setVideo] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    // On load, get video from API\n    useEffect(() => {\n        setLoading(true);\n\n        fetch(process.env.REACT_APP_API + \"/videos/?video=\" + id)\n            .then((response) => response.json())\n            .then((response) => {\n                console.log(\"GOT RESPONSE\", response);\n                if ('data' in response) {\n                    setVideo(response['data']);\n                } else {\n                    window.location.href = \"/404\";\n                }\n                setLoading(false);\n            }).catch((error) => {\n                window.location.href = \"/404\";\n            });\n    }, []);\n    \n    return (\n        <div>\n            {\n                !loading && video &&\n                <div className=\"d-flex flex-column\">\n                    <p className=\"col-12 m-0 p-0 text-left small text-primary mb-3\">\n                        <a className=\"\" href=\"/videos\">&#10094; Voltar aos vídeos</a>\n                    </p>\n\n                    <h2 className=\"text-center\">\n                        {video.title}\n                    </h2>\n                    <h4 className=\"text-center w-100 text-secondary\">\n                        {video.subtitle}\n                    </h4>\n                    <p className=\"text-secondary w-100 text-center small\">\n                        Atualizado a {new Date(video.created.replace(/-/g, \"/\")).toLocaleDateString('pt-PT', {day: 'numeric', month: 'long', year: 'numeric'})}\n                    </p>\n\n                    <YoutubeEmbed \n                        embedId={video.ytId} \n                        playlist={video.playlist===\"1\"}\n                        className=\"my-4 slideUpFade\"\n                    />\n\n                    {\n                        video.playlist==\"1\" &&\n                        <Alert \n                            alert={{\n                                type: 'info',\n                                text: 'Este tópico é uma lista de reprodução. Para navegares entre os vídeos utiliza o ícone no canto superior direito do reprodutor.' \n                            }}\n                            setAlert={null}\n                        />\n                    }\n\n                </div>\n            }\n\n            <Row>\n                {\n                    loading &&\n                    <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n                }\n            </Row>\n        </div>\n    );\n}\n\nexport default Video;"]},"metadata":{},"sourceType":"module"}