[{"/home/joao/Documents/Website/src/index.js":"1","/home/joao/Documents/Website/src/App.js":"2","/home/joao/Documents/Website/src/routes.js":"3","/home/joao/Documents/Website/src/Components/FloatingBtns/index.js":"4","/home/joao/Documents/Website/src/Layouts/CleanLayout/index.js":"5","/home/joao/Documents/Website/src/Layouts/MainLayout/index.js":"6","/home/joao/Documents/Website/src/Pages/Seniors/index.js":"7","/home/joao/Documents/Website/src/Pages/Error404/index.js":"8","/home/joao/Documents/Website/src/Pages/News/index.js":"9","/home/joao/Documents/Website/src/Pages/Homepage/index.js":"10","/home/joao/Documents/Website/src/Pages/Faina/index.js":"11","/home/joao/Documents/Website/src/Pages/History/index.js":"12","/home/joao/Documents/Website/src/Pages/Partners/index.js":"13","/home/joao/Documents/Website/src/Pages/Calendar/index.js":"14","/home/joao/Documents/Website/src/Pages/RGM/index.js":"15","/home/joao/Documents/Website/src/Pages/Merchandising/index.js":"16","/home/joao/Documents/Website/src/Pages/Videos/index.js":"17","/home/joao/Documents/Website/src/Pages/NewsArticle/index.js":"18","/home/joao/Documents/Website/src/Pages/Team/index.js":"19","/home/joao/Documents/Website/src/Pages/Apontamentos/index.js":"20","/home/joao/Documents/Website/src/Pages/Video/index.js":"21","/home/joao/Documents/Website/src/Pages/Internship/index.js":"22","/home/joao/Documents/Website/src/Pages/Forms/FeedbackForm/index.js":"23","/home/joao/Documents/Website/src/Pages/FainaTree/index.js":"24","/home/joao/Documents/Website/src/Components/Tabs/index.js":"25","/home/joao/Documents/Website/src/Components/TextList/index.js":"26","/home/joao/Documents/Website/src/Pages/Team/Components/Person.js":"27","/home/joao/Documents/Website/src/Layouts/backgroundconfig.js":"28","/home/joao/Documents/Website/src/Pages/Homepage/terminalconf.js":"29","/home/joao/Documents/Website/src/Pages/Apontamentos/filters.js":"30","/home/joao/Documents/Website/src/Components/Tabs/Tab/index.js":"31","/home/joao/Documents/Website/src/Components/Footer/index.js":"32","/home/joao/Documents/Website/src/Pages/News/NewsList/index.js":"33","/home/joao/Documents/Website/src/Components/PageNav/index.js":"34","/home/joao/Documents/Website/src/Components/Navbar/index.js":"35","/home/joao/Documents/Website/src/Pages/History/Timeline/index.js":"36","/home/joao/Documents/Website/src/Pages/Seniors/SeniorsCard/index.js":"37","/home/joao/Documents/Website/src/Components/Document/index.js":"38","/home/joao/Documents/Website/src/Components/ImageCard/index.js":"39","/home/joao/Documents/Website/src/Components/Filters/index.js":"40","/home/joao/Documents/Website/src/Pages/Calendar/NEICalendar/index.js":"41","/home/joao/Documents/Website/src/Components/Filters/FilterSelect/index.js":"42","/home/joao/Documents/Website/src/Pages/Apontamentos/GridView/index.js":"43","/home/joao/Documents/Website/src/Components/YoutubeEmbed/index.js":"44","/home/joao/Documents/Website/src/Pages/Apontamentos/Details/index.js":"45","/home/joao/Documents/Website/src/Pages/Apontamentos/ListView/index.js":"46","/home/joao/Documents/Website/src/Components/Alert/index.js":"47","/home/joao/Documents/Website/src/Pages/Internship/components/MediumInternshipCard/index.js":"48","/home/joao/Documents/Website/src/Pages/Internship/components/BigInternshipCard/index.js":"49","/home/joao/Documents/Website/src/Pages/Internship/components/MiniIntershipCard/index.js":"50","/home/joao/Documents/Website/src/Pages/Internship/components/SmallInternshipCard/index.js":"51","/home/joao/Documents/Website/src/Pages/Internship/components/InternshipCard/index.js":"52","/home/joao/Documents/Website/src/Components/Navbar/data.js":"53","/home/joao/Documents/Website/src/Pages/Calendar/NEICalendar/helpers.js":"54","/home/joao/Documents/Website/src/Components/Filters/FilterButton.js":"55","/home/joao/Documents/Website/src/Pages/Apontamentos/utils.js":"56","/home/joao/Documents/Website/src/Pages/Calendar/NEICalendar/NEIAgenda/index.js":"57","/home/joao/Documents/Website/src/Pages/History/TimelineItem/index.js":"58"},{"size":360,"mtime":1655305436696,"results":"59","hashOfConfig":"60"},{"size":2343,"mtime":1655305436692,"results":"61","hashOfConfig":"60"},{"size":1953,"mtime":1655305436696,"results":"62","hashOfConfig":"60"},{"size":266,"mtime":1655305436692,"results":"63","hashOfConfig":"60"},{"size":733,"mtime":1655305436692,"results":"64","hashOfConfig":"60"},{"size":915,"mtime":1655305436692,"results":"65","hashOfConfig":"60"},{"size":5891,"mtime":1655305436692,"results":"66","hashOfConfig":"60"},{"size":2695,"mtime":1655305436692,"results":"67","hashOfConfig":"60"},{"size":3535,"mtime":1655305436692,"results":"68","hashOfConfig":"60"},{"size":11253,"mtime":1655305436692,"results":"69","hashOfConfig":"60"},{"size":3357,"mtime":1655305436692,"results":"70","hashOfConfig":"60"},{"size":719,"mtime":1655305436692,"results":"71","hashOfConfig":"60"},{"size":2289,"mtime":1655305436692,"results":"72","hashOfConfig":"60"},{"size":2031,"mtime":1655305436692,"results":"73","hashOfConfig":"60"},{"size":4582,"mtime":1655305517157,"results":"74","hashOfConfig":"60"},{"size":3018,"mtime":1655305436692,"results":"75","hashOfConfig":"60"},{"size":6793,"mtime":1655305436696,"results":"76","hashOfConfig":"60"},{"size":2584,"mtime":1655305436692,"results":"77","hashOfConfig":"60"},{"size":3603,"mtime":1655305436696,"results":"78","hashOfConfig":"60"},{"size":25570,"mtime":1655305436692,"results":"79","hashOfConfig":"60"},{"size":2991,"mtime":1655305436696,"results":"80","hashOfConfig":"60"},{"size":10094,"mtime":1655305436692,"results":"81","hashOfConfig":"60"},{"size":4296,"mtime":1655305436692,"results":"82","hashOfConfig":"60"},{"size":22959,"mtime":1659355314861,"results":"83","hashOfConfig":"60"},{"size":1036,"mtime":1655305517157,"results":"84","hashOfConfig":"60"},{"size":598,"mtime":1655305436692,"results":"85","hashOfConfig":"60"},{"size":1157,"mtime":1655305436696,"results":"86","hashOfConfig":"60"},{"size":2653,"mtime":1655305436692,"results":"87","hashOfConfig":"60"},{"size":5738,"mtime":1655305436692,"results":"88","hashOfConfig":"60"},{"size":832,"mtime":1655305436692,"results":"89","hashOfConfig":"60"},{"size":723,"mtime":1655305436692,"results":"90","hashOfConfig":"60"},{"size":1189,"mtime":1655305436692,"results":"91","hashOfConfig":"60"},{"size":1365,"mtime":1655305436692,"results":"92","hashOfConfig":"60"},{"size":3642,"mtime":1655305436692,"results":"93","hashOfConfig":"60"},{"size":4137,"mtime":1655305517157,"results":"94","hashOfConfig":"60"},{"size":1232,"mtime":1655305436692,"results":"95","hashOfConfig":"60"},{"size":857,"mtime":1655305436692,"results":"96","hashOfConfig":"60"},{"size":3067,"mtime":1655305517157,"results":"97","hashOfConfig":"60"},{"size":1523,"mtime":1655305436692,"results":"98","hashOfConfig":"60"},{"size":2233,"mtime":1655305436692,"results":"99","hashOfConfig":"60"},{"size":5482,"mtime":1655305436692,"results":"100","hashOfConfig":"60"},{"size":1683,"mtime":1655305436692,"results":"101","hashOfConfig":"60"},{"size":2756,"mtime":1655305436692,"results":"102","hashOfConfig":"60"},{"size":1169,"mtime":1655305436692,"results":"103","hashOfConfig":"60"},{"size":12034,"mtime":1655305436692,"results":"104","hashOfConfig":"60"},{"size":10153,"mtime":1655305436692,"results":"105","hashOfConfig":"60"},{"size":1414,"mtime":1655305436692,"results":"106","hashOfConfig":"60"},{"size":1204,"mtime":1655305436692,"results":"107","hashOfConfig":"60"},{"size":1295,"mtime":1655305436692,"results":"108","hashOfConfig":"60"},{"size":1098,"mtime":1655305436692,"results":"109","hashOfConfig":"60"},{"size":1151,"mtime":1655305436692,"results":"110","hashOfConfig":"60"},{"size":1236,"mtime":1655305436692,"results":"111","hashOfConfig":"60"},{"size":2212,"mtime":1655305436692,"results":"112","hashOfConfig":"60"},{"size":3009,"mtime":1655305436692,"results":"113","hashOfConfig":"60"},{"size":2237,"mtime":1655305436692,"results":"114","hashOfConfig":"60"},{"size":781,"mtime":1655305436692,"results":"115","hashOfConfig":"60"},{"size":321,"mtime":1655305436692,"results":"116","hashOfConfig":"60"},{"size":1089,"mtime":1655305436692,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"13k3z2c",{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"120"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"144","usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"152","usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"161","usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":1,"source":"173","usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"120"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"120"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":"206","usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"225","usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"120"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"120"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"120"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"120"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"120"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"120"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"120"},"/home/joao/Documents/Website/src/index.js",[],["275","276"],"/home/joao/Documents/Website/src/App.js",["277"],"import React, { useState, useEffect } from \"react\";\n\nimport FloatingBtns from './Components/FloatingBtns';\nimport { useRoutes } from 'react-router-dom';\nimport routes from './routes';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faComment, faChevronUp, faFilePdf, faFolder, faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n\n// Register Fontawesome icons\n// https://fontawesome.com/v5.15/how-to-use/on-the-web/using-with/react (Using Icons via Global Use)\nlibrary.add(fab, faFilePdf, faFolder, faCloudDownloadAlt);\n\nconst App = () => {\n    const routing = useRoutes(routes);\n\n\n    // Back to top button\n    const [top, setTop] = useState(true);\n    useEffect(() => {\n        window.addEventListener('scroll', scrollHandler);\n    }, [document.documentElement.scrollTop, window.pageYOffset]);\n\n    const scrollHandler = () => {\n        var top = window.pageYOffset || document.documentElement.scrollTop;\n        if (top > 100) {\n            setTop(false);\n        } else {\n            setTop(true);\n        }\n    }\n\n    return (\n        <>\n            <FloatingBtns location=\"bottomRight\">\n                {\n                    !top &&\n                    <button\n                        className=\"btn bg-white btn-outline-primary btn-outline-primary-force rounded-circle mt-1 animation\"\n                        title=\"Voltar ao topo\"\n                        onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}\n                    >\n                        <FontAwesomeIcon icon={faChevronUp} />\n                    </button>\n                }\n                {\n                    window.location.href.indexOf(\"/forms/feedback\") < 0\n                    &&\n                    <button\n                        className=\"btn bg-white btn-outline-primary btn-outline-primary-force rounded-circle mt-1 animation\"\n                        title=\"Dá-nos o teu feedback!\"\n                        onClick={() => window.location.replace(\"/forms/feedback\")}\n                    >\n                        <FontAwesomeIcon icon={faComment} />\n                    </button>\n                }\n            </FloatingBtns>\n            {routing}\n        </>\n    );\n}\n\nexport default App;","/home/joao/Documents/Website/src/routes.js",[],"/home/joao/Documents/Website/src/Components/FloatingBtns/index.js",[],"/home/joao/Documents/Website/src/Layouts/CleanLayout/index.js",["278"],"import React from \"react\";\nimport { Outlet } from 'react-router-dom';\nimport Particles from \"react-tsparticles\";\n\nimport {\n    Col\n} from \"react-bootstrap\";\n\nimport Navbar from \"../../Components/Navbar\";\nimport Footer from \"../../Components/Footer\";\nimport config from \"../backgroundconfig\";\n\nconst CleanLayout = () => {\n\n    return (\n        <>\n            <Particles\n                id=\"tsparticles\"\n                options={config}\n                className=\"position-absolute\"\n            />\n            <div className=\"pt-10 mhvh-100 d-flex flex-column justify-content-between\">\n                <Navbar />\n                <Outlet />\n                <Footer />\n            </div>\n        </>\n    );\n}\n\nexport default CleanLayout;","/home/joao/Documents/Website/src/Layouts/MainLayout/index.js",[],"/home/joao/Documents/Website/src/Pages/Seniors/index.js",["279","280","281"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router';\nimport { Row, Spinner } from 'react-bootstrap';\nimport Image from 'react-bootstrap/Image';\nimport Tabs from \"../../Components/Tabs/index.js\";\nimport TextList from \"../../Components/TextList\";\nimport SeniorsCard from \"./SeniorsCard\";\nimport Typist from 'react-typist';\n\n\n// Animation\nconst animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\nconst animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n\n\nconst Seniors = () => {\n\n    // get course from URL parameters\n    let {id} = useParams();\n\n    let animKey = 0; // index for delaying animations\n\n    const [people, setPeople] = useState([]);\n    const [selectedYear, setSelectedYear] = useState();\n    const [anos, setAnos] = useState([]);\n    const [img, setImg] = useState(\"\");\n\n    const [namesOnly, setNamesOnly] = useState(false);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        // get list of courses to check if 'id' is valid\n        fetch(process.env.REACT_APP_API + \"/seniors/courses/\")\n            .then((response) => response.json())\n            .then((response) => {\n                let courses = response[\"data\"].map( el => el[\"course\"] );\n                if (!courses.includes(id)) {\n                    window.location.href = \"/404\";\n                }\n            }).catch((error) => {\n                window.location.href = \"/404\";\n            });\n\n\n        // pegar o número de anos\n        fetch(process.env.REACT_APP_API + \"/seniors/courses/years/?course=\" + id)\n            .then((response) => response.json())\n            .then((response) => {\n                var anos = response.data.map((curso) => curso.year).sort((a, b) => b - a);\n                if (anos.length > 0) {\n                    setSelectedYear(anos[0])\n                    setAnos(<Tabs tabs={anos} _default={anos[0]} onChange={setSelectedYear} />)\n                }\n                else\n                    setAnos(\"\");\n            }).catch((error) => {\n                window.location.href = \"/404\";\n            });\n\n    }, [])\n\n    useEffect(() => {\n        if (selectedYear == undefined) return;\n        setLoading(true);\n\n        fetch(process.env.REACT_APP_API + \"/seniors/?course=\" + id +\"&year=\" + selectedYear)\n            .then((response) => response.json())\n            .then((response) => {\n                setNamesOnly( response.data.students[0][\"quote\"] == null &&\n                              response.data.students[0][\"image\"] == null );\n                setPeople(response.data.students);\n                setImg(\n                    <Image\n                        src={process.env.REACT_APP_STATIC + response.data.image}\n                        rounded\n                        fluid\n                        className=\"slideUpFade\"\n                        style={{\n                            animationDelay: animationBase + animationIncrement * 0 + \"s\",\n                            \"marginBottom\": 50\n                        }}\n                    />\n                );\n                setLoading(false);\n            }).catch((error) => {\n                window.location.href = \"/404\";\n            });\n    }, [selectedYear])\n\n\n\n    return (\n        <div className=\"d-flex flex-column flex-wrap pb-5 mb-5\">\n            <h2 className=\"mb-5 text-center\"><Typist>{\"Finalistas de \" + id}</Typist></h2>\n\n            {anos}\n\n            {\n                loading\n                    ?\n                    <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n                    :\n                    <>\n                        {\n                            namesOnly &&\n                            <Row>\n                                {img}\n                            </Row>\n                        }\n                        \n\n                        <Row>\n                            {\n                                namesOnly ?\n                                    people.map(\n                                        (person, i) =>\n                                            <TextList\n                                                colSize={3}\n                                                text={person.name}\n                                                className=\"slideUpFade\"\n                                                style={{\n                                                    animationDelay: animationBase + animationIncrement * 0 + \"s\"\n                                                }}\n                                            />\n                                    )\n                                :\n                                    people.map(\n                                        (person, i) =>\n                                            <SeniorsCard\n                                                name={person.name}\n                                                quote={person.quote}\n                                                image={process.env.REACT_APP_STATIC + person.image}\n                                                colSizeXs=\"12\"\n                                                colSizeSm=\"6\"\n                                                colSizeLg=\"4\"\n                                                colSizeXl=\"3\"\n                                                className=\"slideUpFade\"\n                                                style={{\n                                                    animationDelay: animationBase + animationIncrement * animKey++ + \"s\"\n                                                }}\n                                            />\n                                    )\n                            }\n                            \n                        </Row>\n                    </>\n            }\n\n        </div>\n    )\n}\n\nexport default Seniors;","/home/joao/Documents/Website/src/Pages/Error404/index.js",["282"],"import React, {useState, useEffect} from \"react\";\n\nimport {\n    useParams\n} from \"react-router-dom\";\n\nimport {\n    Spinner\n} from \"react-bootstrap\";\n\nconst Error404 = () => {\n    let { id } = useParams();\n\n    const [loading, setLoading] = useState(true);\n    const [redirect, setRedirect] = useState(undefined);\n\n    // On component render...\n    useEffect(() => {\n        setLoading(true);\n\n        // Call /redirects API to check if it is an alias\n        // Fetch API if valid\n        fetch(process.env.REACT_APP_API + \"/redirects/?alias=\" + id)\n            .then(res => res.json())\n            .then(json => {\n                setLoading(false);\n                if ('data' in json && json['data'].length) {\n                    console.log('redirect', json['data'][0]['redirect']);\n                    setRedirect(json['data'][0]['redirect']);\n                }\n            }).catch((error) => {\n                setLoading(false);\n            });\n    }, []);\n\n    // On redirect set, redirect to page\n    useEffect(() => {\n        if (redirect) {\n            window.location.href = redirect;\n        }\n    }, [redirect])\n\n    return (\n        <div className=\"d-flex flex-column flex-wrap\">\n            {\n                loading \n                ? <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n                : redirect \n                    ? \n                        <div className=\"mx-auto text-center\">\n                            <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n                            <h1 className=\"word-break\">A redirecionar</h1>\n                            <p>para <a href={redirect}>{redirect}</a>.</p>\n                            <p className=\"small\">Se o redirecionamento não ocorrer nos próximos 5 segundos, clica <a href={redirect}>aqui</a>.</p>\n                        </div>\n                    :   \n                        <div>\n                            <h1 className=\"word-break\">Error 404</h1>\n                            <p>Ups! Parece que a página que procuras não existe. &#128517;</p>\n                            <p>Se foste redirecionado desde uma ligação no nosso site ou redes sociais, por favor entra em contacto conosco para podermos averiguar o que se passou.</p>\n                            <p>Entretanto, convidamos-te a conhecer o nosso site. Descobre apontamentos, os próximos eventos ou as últimas novidades de EI! &#128521;</p>\n                            <a href=\"/\"><button className=\"btn btn-primary\">Conhece o nosso site!</button></a>\n                        </div>\n            }\n        </div>\n    );\n}\n\nexport default Error404;","/home/joao/Documents/Website/src/Pages/News/index.js",["283","284","285","286"],"import React, { useState, useEffect } from \"react\";\nimport NewsList from \"./NewsList\";\nimport PageNav from \"../../Components/PageNav\";\nimport FilterSelect from \"../../Components/Filters/FilterSelect\";\nimport Typist from 'react-typist';\nimport {Spinner} from 'react-bootstrap';\n\nconst News = () => {\n\n    const [isLoading, setIsLoading] = useState(true);       // used to change message when no news are available\n    const [news, setNews] = useState([]);                   // list of news articles\n    const [newsTypes, setNewsTypes] = useState([]);         // list of all news categories\n    const [whitelist, setWhitelist] = useState([]);         // list of currently active categories\n    const [currPage, setCurrPage] = useState(1);            // current page\n    const [totalPages, setTotalPages] = useState(1);        // total number of pages\n\n    /** Get given news page from API */\n    const fetchPage = (p_num) => {\n        //console.log(\"currPage: \" + currPage + \", new_page: \" + p_num);\n\n        // check if there are no categories selected\n        if (whitelist.length == 0) {\n            setNews([]);\n            return;\n        }\n\n        // build string for api request\n        if (window.location.search)\n            var api = \"/news/\" + window.location.search + \"&\";\n        else\n            var api = \"/news/?\";\n            \n        if (whitelist != newsTypes) {\n            whitelist.forEach( v => {\n                api = api + \"category[]=\" + v + \"&\"; \n            });\n        }        \n\n        setIsLoading(true);\n        setNews([]);\n\n        fetch(process.env.REACT_APP_API + api + \"page=\" + p_num)\n            .then(response => response.json())\n            .then((response) => {\n                setIsLoading(false);\n                if('data' in response) {\n                    setCurrPage(p_num);\n                    setTotalPages(response[\"page\"].pagesNumber);\n                    setNews(response['data']);\n                }\n            });\n    };\n\n    // Get initial news page from API when component renders, and when selected filters change\n    useEffect( () => {fetchPage(1)}, [whitelist]);\n\n    // Get categories from API when component renders\n    useEffect(() => {\n        fetch(process.env.REACT_APP_API + \"/news/categories/\")\n            .then(response => response.json())\n            .then((response) => {\n                if('data' in response) {\n                    var cats = [];\n                    response['data'].forEach( c => cats.push(c.category) );\n                    setNewsTypes(cats);\n                    setWhitelist(cats);\n                }\n            });\n    }, []);\n\n    return (\n        <div className=\"d-flex flex-column flex-wrap\">\n            <h2 className=\"text-center\"><Typist>Notícias</Typist></h2>\n\n            <FilterSelect \n                accordion={true}\n                filterList={newsTypes.map(nt => {return {'filter': nt}})}\n                activeFilters={whitelist}\n                setActiveFilters={setWhitelist}\n                className=\"mb-3\"\n                btnClass=\"mr-2\"\n            >\n                <PageNav className=\"col-12 col-lg ml-auto p-0\" page={currPage} total={totalPages} handler={fetchPage}></PageNav>\n            </FilterSelect>\n\n            {\n                isLoading\n                ?\n                <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto\" title=\"A carregar...\" />\n                :\n                <NewsList news={news} loading={isLoading}></NewsList>\n            }\n\n        </div>\n    );\n}\n\nexport default News;","/home/joao/Documents/Website/src/Pages/Homepage/index.js",["287","288"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col, Spinner } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLightbulb, faFutbol } from \"@fortawesome/free-regular-svg-icons\";\nimport { faHistory, faUsers } from \"@fortawesome/free-solid-svg-icons\";\nimport NewsList from \"../News/NewsList\";\nimport \"./index.css\";\nimport { ReactTerminal } from \"react-terminal-component\";\nimport terminalstate from \"./terminalconf\";\n\nimport Typist from 'react-typist';\n\n// Animation\nconst animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\nconst animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n\nconst Homepage = () => {\n\n    const [news, setNews] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n\n    const [banner, setBanner] = useState(undefined);\n\n    useEffect(() => {\n        // Get first 3 news articles from API when page loads\n        fetch(process.env.REACT_APP_API + \"/news/?itemsPerPage=3\")\n            .then(response => response.json())\n            .then((response) => {\n                if('data' in response) {\n                    setNews(response['data']);\n                }\n                setIsLoading(false);\n            });\n\n        // Get partner banner\n        fetch(process.env.REACT_APP_API + \"/partners/banner/\")\n            .then(response => response.json())\n            .then((response) => {\n                if('data' in response && response.data.length) {\n                    setBanner(response['data'][0]);\n                }\n            });\n    }, []);\n\n    return (\n        <div className=\"py-5\">\n            <div className=\"section\" style={{\"minHeight\": \"calc(100vh - 7rem)\"}}>\n                <Col xs={11} sm={10} className=\"mx-auto col-xxl-9\">\n                    <Row>\n                        <Col md=\"12\" lg=\"7\" className=\"home-main-header\">\n                            <h1 className=\"d-none d-md-block\">\n                                <Typist>\n                                    Bem-vindo ao\n                                    <br /><br />\n                                    <b>Núcleo de Estudantes de Informática</b>\n                                    <br/>\n                                    da AAUAv\n                                </Typist>\n                            </h1>\n                            <h3 className=\"d-md-none\">\n                                <Typist>\n                                    Bem-vindo ao\n                                    <br /><br />\n                                    <b>Núcleo de Estudantes de Informática</b>\n                                    <br/>\n                                    da AAUAv\n                                </Typist>\n                            </h3>\n                        </Col>\n                        <Col \n                            className=\"px-xl-0 pt-xl-0 pt-3 slideUpFade\"\n                            style={{animationDelay: animationBase+1*animationIncrement}}\n                            lg={5}\n                        >\n                            <div\n                                style={{\n                                    height:\"34px\",\n                                    width:\"100%\",\n                                    padding:\"7px\",\n                                    backgroundColor:\"rgb(238, 238, 238)\",\n                                    borderRadius:\"5px 5px 0 0\",\n                                    display:\"flex\",\n                                    justifyContent:\"flex-end\"\n                                }}\n                            >\n                                <div\n                                    style={{\n                                        height:\"20px\",\n                                        width:\"20px\",\n                                        backgroundColor:\"rgb(163, 190, 140)\",\n                                        borderRadius:\"50%\"\n                                    }}\n                                ></div>\n                                <div\n                                    style={{\n                                        height:\"20px\",\n                                        width:\"20px\",\n                                        marginLeft:\"4px\",\n                                        backgroundColor:\"rgb(235, 203, 139)\",\n                                        borderRadius:\"50%\"\n                                    }}\n                                ></div>\n                                <div\n                                    style={{\n                                        height:\"20px\",\n                                        width:\"20px\",\n                                        marginLeft:\"4px\",\n                                        backgroundColor:\"rgb(191, 97, 106)\",\n                                        borderRadius:\"50%\"\n                                    }}\n                                ></div>\n                            </div>\n                            <ReactTerminal\n                                emulatorState={terminalstate}\n                                clickToFocus={true}\n                                autoFocus={true}\n                                theme={{\n                                    height:\"320px\",\n                                    width:\"100%\",\n                                    fontFamily:\"monospace\",\n                                    fontSize:\"1em\",\n                                    promptSymbolColor:\"rgb(0, 255, 0)\",\n                                    commandColor:\"#fcfcfc\",\n                                    outputColor:\"#fcfcfc\",\n                                    errorOutputColor:\"#fcfcfc\",\n                                    background:\"#222222\",\n                                }}\n                                promptSymbol=\"nei@nei-os $\"\n                            />\n                        </Col>\n                    </Row>\n                </Col>\n            </div>\n\n            {\n                banner && \n                <Col xs={11} sm={10} className=\"mx-auto col-xxl-9 my-3\">\n                    <a href={banner.bannerUrl} target=\"_blank\">\n                        <img \n                            src={process.env.REACT_APP_STATIC + banner.bannerImage}\n                            className=\"w-100\"\n                        />\n                        <p className=\"mb-0 text-primary text-center small\">O NEI é apoiado pela {banner.company}</p>\n                    </a>\n                </Col>\n            }\n\n            <div className=\"section-dark\">\n                <Col xs={11} sm={10} className=\"d-flex flex-column flex-wrap mx-auto col-xxl-9 text-center\">\n                    <h2 className=\"header-dark mb-4\">Notícias</h2>\n                    {\n                        isLoading \n                        ?\n                        <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n                        :\n                        <NewsList news={news}></NewsList>\n                    }\n                    <Button\n                        variant=\"outline-dark\"\n                        className=\"rounded-pill mx-auto\"\n                        size=\"lg\"\n                        href=\"/noticias\"\n                        >Ver Todas\n                    </Button>\n                </Col>\n            </div>\n\n            <div className=\"section\">\n                <Col xs={11} sm={10} className=\"mx-auto col-xxl-9 text-center\">\n                    <h2 className=\"mb-3\">NEI</h2>\n                    <h4 className=\"text-secondary px-lg-5 mb-5\">\n                        Criado a 24 de janeiro de 2013, o Núcleo de Estudantes de Informática da Associação Académica da Universidade de Aveiro (NEI-AAUAv), surgiu com o intuito de ajudar, incentivar e apoiar em diversas áreas os alunos do curso de Engenharia Informática, que havia sido recentemente criado. Desde então, têm sido inúmeras as atividades proporcionadas por este, envolvendo não só os alunos do respetivo curso, mas também toda a comunidade académica, contribuindo, desta forma, para uma melhor formação e desenvolvimento pessoal dos seus estudantes.\n                    </h4>\n\n                    <Row>\n                        <Col xs=\"12\" sm=\"6\" lg=\"3\" className=\"home-info-col mb-5\">\n                            <FontAwesomeIcon icon={ faHistory } size=\"4x\" className=\"text-primary mb-4\" />\n                            <h3>História do NEI</h3>\n                            <p className=\"text-secondary flex-grow-1\">\n                                Apesar de ser relativamente recente o NEI já conta com alguns feitos de relevância que vão desde bons resultados na Taça UA nas diversas modalidades que participou como a participação e candidaturas ao ENEI.\n                            </p>\n                            <a className=\"font-weight-bold\" href=\"/historia\">Ver história</a>\n                        </Col>\n                        <Col xs=\"12\" sm=\"6\" lg=\"3\" className=\"home-info-col mb-5\">\n                            <FontAwesomeIcon icon={ faUsers } size=\"4x\" className=\"text-primary mb-4\" />\n                            <h3>Comissões de Faina</h3>\n                            <p className=\"text-secondary flex-grow-1\">\n                                Responsáveis por guiar a Faina do nosso curso, uma importante faceta do percurso académico com o intuito de dinamizar e integrar os novos estudantes. Encarregam-se também de organizar certos eventos lúdicos como Jantares e Festas de Curso.\n                            </p>\n                            <a className=\"font-weight-bold\" href=\"/faina\">Ver comissões</a>\n                        </Col>\n                        <Col xs=\"12\" sm=\"6\" lg=\"3\" className=\"home-info-col mb-5\">\n                            <FontAwesomeIcon icon={ faLightbulb } size=\"4x\" className=\"text-primary mb-4\" />\n                            <h3>Novos Alunos</h3>\n                            <p className=\"text-secondary flex-grow-1\">\n                                Estás interessado no curso? Precisas de ajuda? Temos aqui tudo o que tu precisas, todas as informações do curso. Se tiveres dúvidas, podes entrar em contacto connosco via facebook ou email!\n                            </p>\n                            <a className=\"font-weight-bold\" href=\"http://deti-cdn.clients.ua.pt/lei/\">Mais informações</a>\n                        </Col>\n                        <Col xs=\"12\" sm=\"6\" lg=\"3\" className=\"home-info-col mb-5\">\n                            <FontAwesomeIcon icon={ faFutbol } size=\"4x\" className=\"text-primary mb-4\" />\n                            <h3>Taça UA</h3>\n                            <p className=\"text-secondary flex-grow-1\">\n                                Sabemos que por vezes é dificil acompanhar a Taça UA sem te perderes, como não queremos que estejas fora do acontecimento, temos uma nova plataforma para acompanhares tudo o que se passa!\n                            </p>\n                            <p className=\"font-weight-bold text-secondary mb-0\">Brevemente disponível</p>\n                        </Col>\n                    </Row>\n                </Col>\n            </div>\n        </div>\n    );\n}\n\nexport default Homepage;","/home/joao/Documents/Website/src/Pages/Faina/index.js",["289"],"import React, { useState, useEffect } from 'react'\nimport { Row, Spinner } from 'react-bootstrap';\nimport Image from 'react-bootstrap/Image';\n\nimport Tabs from \"../../Components/Tabs/index.js\";\n\nimport TextList from \"../../Components/TextList\"\nimport Typist from 'react-typist';\n\n\n// Animation\nconst animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\nconst animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n\nconst Faina = () => {\n\n    const [people, setPeople] = useState([]);\n    const [selectedYear, setSelectedYear] = useState();\n    const [anos, setAnos] = useState([]);\n    const [img, setImg] = useState(null);\n\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        // pegar o número de anos\n        fetch(process.env.REACT_APP_API + \"/faina/mandates/\")\n            .then((response) => response.json())\n            .then((response) => {\n                var anos = response.data.map((curso) => curso.mandato).sort((a, b) => parseInt(b.split('/')[0]) - parseInt(a.split('/')[0]));\n                if (anos.length > 0) {\n                    setSelectedYear(anos[0])\n                    setAnos(<Tabs tabs={anos} _default={anos[0]} onChange={setSelectedYear} />)\n                }\n                else\n                    setAnos(\"\");\n            })\n\n    }, [])\n\n    useEffect(() => {\n        setLoading(true);\n        if (selectedYear == undefined) return;\n\n        fetch(process.env.REACT_APP_API + \"/faina/?mandate=\" + selectedYear)\n            .then((response) => response.json())\n            .then((response) => {\n                setPeople(response.data.members.map(\n                    (person, i) =>\n                        <TextList\n                            colSize={12}\n                            text={person.role + \" \" + person.name}\n                            className=\"slideUpFade\"\n                            style={{\n                                animationDelay: animationBase + animationIncrement * (i + 1) + \"s\",\n                            }}\n                        />\n                ))\n                if (response.data.imagem) {\n                    setImg(<Image\n                        src={process.env.REACT_APP_STATIC + response.data.imagem} rounded fluid\n                        className=\"slideUpFade\"\n                        style={{\n                            animationDelay: animationBase + animationIncrement * 0 + \"s\",\n                            \"marginBottom\": 50\n                        }}\n                    />);\n                } else {\n                    setImg(null);\n                }\n                setLoading(false);\n            })\n    }, [selectedYear])\n\n\n\n    return (\n        <div className=\"d-flex flex-column flex-wrap\">\n            <h2 className=\"mb-5 text-center\"><Typist>Comissão de Faina</Typist></h2>\n\n            {anos}\n\n            {\n                loading\n                    ?\n                    <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n                    :\n                    <>\n                        <Row>\n                            {img}\n                        </Row>\n\n                        <Row>\n                            {people}\n                        </Row>\n                    </>\n            }\n\n\n\n        </div>\n    )\n}\n\nexport default Faina;","/home/joao/Documents/Website/src/Pages/History/index.js",[],"/home/joao/Documents/Website/src/Pages/Partners/index.js",["290","291"],"import React, { useEffect, useState } from \"react\";\nimport ImageCard from \"../../Components/ImageCard\"\nimport { Col, Row } from \"react-bootstrap\";\nimport Typist from 'react-typist';\n\nconst Partners = () => {\n\n    const [partners, setPartners] = useState([]);\n    const [banner, setBanner] = useState(undefined);\n\n    // Get API data when component renders\n    useEffect(() => {\n        fetch(process.env.REACT_APP_API + \"/partners/\")\n            .then(response => response.json())\n            .then((response) => {\n                if('data' in response) {\n                    setPartners(response['data']);\n                }\n            });\n        // Get partner banner\n        fetch(process.env.REACT_APP_API + \"/partners/banner/\")\n            .then(response => response.json())\n            .then((response) => {\n                if('data' in response && response.data.length) {\n                    setBanner(response['data'][0]);\n                }\n            });\n    }, []);\n\n    return (\n        <div>\n            <h2 className=\"text-center mb-4\"><Typist>Parceiros</Typist></h2>\n\n            {\n                banner && \n                <Col xs={12} className=\"my-3 p-0\">\n                    <a href={banner.bannerUrl} target=\"_blank\">\n                        <img \n                            src={process.env.REACT_APP_STATIC + banner.bannerImage}\n                            className=\"w-100\"\n                        />\n                        <p className=\"mb-0 text-primary text-center small\">O NEI é apoiado pela {banner.company}</p>\n                    </a>\n                </Col>\n            }\n            \n            <Row>\n                {partners.map( partner => {\n                    return(\n                        <Col md={6}>\n                            <ImageCard\n                                image={partner.header && process.env.REACT_APP_STATIC + partner.header}\n                                title={partner.company}\n                                text={partner.description}\n                                anchor={partner.link}\n                                darkMode=\"on\"\n                            ></ImageCard>\n                        </Col>\n                    );\n                })}\n            </Row>\n        </div>\n    );\n}\n\nexport default Partners;","/home/joao/Documents/Website/src/Pages/Calendar/index.js",["292"],"import React, {useEffect, useState} from \"react\";\nimport NEICalendar from \"./NEICalendar\";\nimport Filters from \"../../Components/Filters\";\nimport Typist from 'react-typist';\n\nconst Calendar = () => {\n\n    // Animation\n    const animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\n    const animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n\n    const [filters, setFilters] = useState([]);\n    const [selection, setSelection] = useState([]);    \n\n    return (\n        <div>\n            <h2 className=\"text-center\">\n                <Typist>Calendário</Typist>\n            </h2>\n\n            <div className=\"col-12 d-flex flex-row flex-wrap my-5\">\n                <div \n                    className=\"mb-2 col-12 col-md-4 d-flex\"\n                    style={{\n                        animationDelay: animationBase + animationIncrement*0 + \"s\",\n                    }}\n                >\n                    <p className=\"slideUpFade col-12 text-primary mb-3 my-md-auto ml-auto pr-3 text-center text-md-right\">Categorias</p>\n                </div>\n                <Filters \n                    filterList={filters}\n                    activeFilters={selection}\n                    setActiveFilters={setSelection}\n                    className=\"slideUpFade mr-auto col-12 col-md-8 d-flex flex-row flex-wrap\"\n                    btnClass=\"mx-auto mr-md-2 ml-md-0 mb-2\"\n                    style={{\n                        animationDelay: animationBase + animationIncrement*1 + \"s\",\n                    }}\n                />\n            </div>\n\n            <NEICalendar \n                selection={selection}\n                setInitialCategories={(fs) => {\n                    setFilters(fs);\n                    setSelection(fs.map(f => f['filter']));\n                }}\n                className=\"slideUpFade\"\n                style={{\n                    animationDelay: animationBase + animationIncrement*2 + \"s\",\n                }}\n            />\n        </div>\n    );\n}\n\nexport default Calendar;","/home/joao/Documents/Website/src/Pages/RGM/index.js",["293","294","295","296","297","298"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n    Row, Spinner\n} from \"react-bootstrap\";\nimport Document from \"../../Components/Document\";\nimport Tabs from \"../../Components/Tabs\";\n\nconst validCategories = {\n    'PAO': {\n        'singular': 'Plano de Atividades e Orçamento',\n        'plural': 'Planos de Atividades e Orçamento'\n    },\n    'RAC': {\n        'singular': 'Relatório de Atividades e Contas',\n        'plural': 'Relatórios de Atividades e Contas'\n    },\n    'ATAS': {\n        'singular': 'Ata da RGM',\n        'plural': 'Atas da RGM'\n    }\n};\n\n// Animation\nconst animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\nconst animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n\n\n/**\n * This component renders RGM page for a given document category\n * The category is passed on the URL (/rgm/<category>) and the valid options are summed up on variable validCategories\n */\n\nconst RGM = () => {\n    // Document category is passed as parameter in URL\n    let { id } = useParams();\n\n    // Component state\n    const [title, setTitle] = useState(\"\");\n    const [docs, setDocs] = useState([]);\n    const [tab, setTab] = useState(0);\n    const [loading, setLoading] = useState(true);\n\n    // On component render...\n    useEffect(() => {\n        setLoading(true);\n\n        // Validate document category\n        if (Object.keys(validCategories).findIndex(item => id.toLowerCase() === item.toLowerCase()) < 0) {\n            window.location.href = \"/404\";\n        }\n        id = id.toUpperCase();\n        setTitle(validCategories[id]['plural']);\n        // Fetch API if valid\n        fetch(process.env.REACT_APP_API + \"/rgm/?category=\" + id)\n            .then(res => res.json())\n            .then(json => {\n                if ('data' in json) {\n                    setDocs(json['data']);\n                    // Set tab to maximum year\n                    json['data'].forEach(doc => setTab(oldTab => oldTab < doc['mandato'] ? doc['mandato'] : oldTab));\n                } else {\n                    window.location.href = \"/404\";\n                }\n                setLoading(false);\n            }).catch((error) => {\n                window.location.href = \"/404\";\n            });\n    }, []);\n\n    const changeTab = (t) => {\n        // Change tab and simulate loading from API\n        setLoading(true);\n        setTab(t);\n        setTimeout(function () {\n            setLoading(false);\n        }, 300);\n    }\n\n    return (\n        <div className=\"d-flex flex-column flex-wrap\">\n            <h2 className=\"text-center mb-5\">{title}</h2>\n            {\n                // Only show tabs to ATAS category\n                id.toUpperCase() == \"ATAS\" &&\n                <Tabs\n                    tabs={[...new Set(docs.map(doc => doc.mandato))]}\n                    _default={tab}\n                    onChange={changeTab}\n                >\n                </Tabs>\n            }\n            {\n                loading &&\n                <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n            }\n            {\n                !loading &&\n                <Row>\n                    {\n                        // On ATAS category, show only those which mandato match tab\n                        docs.filter(doc => id.toUpperCase() != \"ATAS\" || doc.mandato == tab).map(\n                            (doc, index, arr) =>\n                                <Document\n                                    name={\n                                        id.toUpperCase() != \"ATAS\"\n                                            ?\n                                            id.toUpperCase() + ' ' + doc.mandato\n                                            :\n                                            \"ATA\" + ' ' + (arr.length - index) + ' '\n                                    }\n                                    description={validCategories[id.toUpperCase()]['singular'] + ' de ' + doc.mandato}\n                                    link={process.env.REACT_APP_STATIC + doc.file}\n                                    blank={true}\n                                    className=\"col-lg-6 col-xl-3 slideUpFade\"\n                                    style={{\n                                        animationDelay: animationBase + animationIncrement * index + \"s\",\n                                    }}\n                                />\n                        )\n                    }\n                </Row>\n            }\n        </div>\n    );\n}\n\nexport default RGM;","/home/joao/Documents/Website/src/Pages/Merchandising/index.js",["299","300","301","302","303","304","305","306"],"import React, { useEffect, useState } from \"react\";\nimport { fs } from \"fs\";\nimport { Button, Row, Col, Container } from \"react-bootstrap\";\nimport Image from 'react-bootstrap/Image';\nimport \"./index.css\";\nimport Typist from 'react-typist';\n\n\n// Animation\nconst animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\nconst animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n\n\nconst Merchandising = () => {\n\n    const [imgs, setImgs] = useState([]);\n\n    useEffect(() => {\n        fetch(process.env.REACT_APP_API + \"/merch/\")\n            .then(response => response.json())\n            .then((response) => {\n\n                if ('data' in response) {\n                    setImgs(response.data.map((img, idx) =>\n                        <div\n                            className={\n                                idx % 2 == 0 \n                                ? \"impar text-center slideUpFade\"\n                                : \"par2 text-center slideUpFade\"\n                            }\n                            style={{\n                                animationDelay: animationBase + animationIncrement * idx + \"s\",\n                            }}\n                        >\n                            <Row className=\"mx-0\">\n                                <Col lg={idx % 2 == 0 ? 4 : 8} md={6} sm={12} className={idx % 2 == 0 ? \"order-0 d-flex\" : \"order-1 d-flex\"}>\n                                    {\n                                        img.image \n                                        ? <Image className=\"img my-auto mx-auto\" src={process.env.REACT_APP_STATIC + img.image} style={{ width: 200 }} />\n                                        : <p className=\"text-center mx-auto my-auto small\">Imagem disponível em breve.</p>\n                                    }\n                                </Col>\n                                <Col lg={idx % 2 == 0 ? 8 : 4} md={6} sm={12} className={idx % 2 == 0 ? \"order-1\" : \"order-0\"}>\n                                    <h2>{img.name}</h2>\n                                    <h5>Preço: {img.price}€</h5>\n                                </Col>\n                            </Row>\n\n                        </div>\n                    ));\n                }\n            })\n\n\n\n\n    }, [])\n\nreturn (\n    <div className=\"py-5\">\n        <h2 style={{ position: \"relative\" }} className=\"mb-5 text-center\">\n            <Typist>Merchandising</Typist>\n        </h2>\n\n        {imgs}\n\n        <Row className=\"text-center mx-0\" style={{ position: \"relative\" }}>\n            <a\n                href=\"https://aauav.pt/nucleos/\"\n                target=\"_blank\"\n                className=\"mx-auto\"\n            >\n                <Button style={{ color: 'black' }}\n                    variant=\"outline-primary\"\n                    className=\"rounded-pill btn-outline-primary-force\"\n                    size=\"lg\"\n                >Comprar\n                    </Button>\n            </a>\n        </Row>\n\n\n    </div>\n);\n}\n\nexport default Merchandising;","/home/joao/Documents/Website/src/Pages/Videos/index.js",["307","308","309","310"],"import React, { useEffect, useState } from \"react\";\nimport Typist from 'react-typist';\n\nimport Filters from '../../Components/Filters';\nimport Document from '../../Components/Document';\nimport PageNav from '../../Components/PageNav';\n\nimport { faPlayCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport {\n    Row, Spinner\n} from \"react-bootstrap\";\n\nconst Videos = () => {\n\n    // Animation\n    const animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\n    const animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n\n    // Filters\n    const [categories, setCategories] = useState([]);\n    const [filters, setFilters] = useState([]);\n    const [selection, setSelection] = useState([]);\n    const [loadingCategories, setLoadingCategories] = useState(true);\n\n    // Get categories from API\n    useEffect(() => {\n        fetch(process.env.REACT_APP_API + \"/videos/categories/\")\n            .then(response => response.json())\n            .then((response) => {\n                if ('data' in response) {\n                    setCategories(response['data']);\n                    var cats = [];\n                    var catsObjs = [];\n                    response['data'].forEach(c => {\n                        cats.push(c.name);\n                        catsObjs.push({ filter: c.name, color: c.color });\n                    });\n                    setSelection(cats);\n                    setFilters(catsObjs);\n                    setLoadingCategories(false);\n                }\n            });\n    }, []);\n\n    // Videos\n    const [videos, setVideos] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    // Pagination\n    const [pages, setPages] = useState(1);\n    const [selPage, setSelPage] = useState(1);\n\n    // When categories selected change, update videos list (get from API)\n    useEffect(() => {\n        setLoading(true);\n        if (selection.length) {\n            // Compute url with categories ids selected\n            let url = process.env.REACT_APP_API + \"/videos/?\";\n            selection.forEach(s => {\n                const candidates = categories.filter(c => c.name == s);\n                if (candidates.length > 0) {\n                    url += 'category[]= ' + candidates[0].id + '&';\n                }\n            });\n            url += 'page=' + selPage;\n            // Get data from API\n            fetch(url)\n                .then(response => response.json())\n                .then((response) => {\n                    if ('data' in response) {\n                        setVideos(response['data']);\n                        setPages(response['page']['pagesNumber']);\n                        setSelPage(response['page']['currentPage']);\n                    } else {\n                        setLoading(false);\n                        setPages(1);\n                        setSelPage(1);\n                    }\n                    setLoading(false)\n                }).catch((error) => {\n                    console.error(\"Erro getting videos from API!\", error);\n                    setLoading(false);\n                    setPages(1);\n                    setSelPage(1);\n                });\n        } else {\n            setLoading(false);\n            setVideos([]);\n            setPages(1);\n            setSelPage(1);\n        }\n    }, [selection, selPage])\n\n    return (\n        <div>\n            <h2 className=\"text-center\">\n                <Typist>Vídeos</Typist>\n            </h2>\n\n            {\n                // Filter by category\n            }\n            {\n                !loadingCategories &&\n                <div className=\"col-12 d-flex flex-row flex-wrap my-5\">\n                    <div\n                        className=\"mb-2 col-12 col-md-4 d-flex\"\n                        style={{\n                            animationDelay: animationBase + animationIncrement * 0 + \"s\",\n                        }}\n                    >\n                        <p className=\"slideUpFade col-12 text-primary mb-3 my-md-auto ml-auto pr-3 text-center text-md-right\">Categorias</p>\n                    </div>\n                    <Filters\n                        filterList={filters}\n                        activeFilters={selection}\n                        setActiveFilters={setSelection}\n                        className=\"slideUpFade mr-auto col-12 col-md-8 d-flex flex-row flex-wrap\"\n                        btnClass=\"mx-auto mr-md-2 ml-md-0 mb-2\"\n                        style={{\n                            animationDelay: animationBase + animationIncrement * 1 + \"s\",\n                        }}\n                    />\n                </div>\n            }\n\n            {\n                // Videos list\n            }\n            <Row>\n\n                {\n                    (loading || loadingCategories) &&\n                    <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n                }\n\n                {\n                    !loading && videos.map(video => {\n\n                        const candidates = categories.filter(c => c.id == video.tag);\n                        let tag = [];\n                        if (candidates.length > 0) {\n                            tag = {\n                                name: candidates[0].name,\n                                color: candidates[0].color,\n                                className: \"\"\n                            }\n                        }\n\n                        return (<Document\n                            name={video.title}\n                            description={video.subtitle}\n                            link={'/videos/' + video.id}\n                            blank={false}\n                            icon={faPlayCircle}\n                            image={process.env.REACT_APP_STATIC + video.image}\n                            className=\"col-lg-6 col-xl-4 slideUpFade p-2\"\n                            tags={tag ? [tag] : []}\n                        />)\n                    })\n                }\n            </Row>\n\n            {\n                // Pagination\n            }\n            <Row>\n                {\n                    pages > 1 &&\n                    <PageNav\n                        page={selPage}\n                        total={pages}\n                        handler={setSelPage}\n                        className=\"mx-auto mt-3\"\n                    ></PageNav>\n                }\n            </Row>\n\n\n\n            {\n                // Error\n                !loading && !loadingCategories && videos.length == 0 &&\n                <div>\n                    <h3 className=\"text-center mt-3\">Nenhum vídeo encontrado</h3>\n                    <h4 className=\"text-center\">Tenta definir filtros menos restritivos</h4>\n                </div>\n            }\n\n\n\n        </div>\n    );\n}\n\nexport default Videos;","/home/joao/Documents/Website/src/Pages/NewsArticle/index.js",["311","312"],"import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Row, Col, Image } from \"react-bootstrap\";\nimport \"./index.css\";\n\nconst NewsArticle = () => {\n\n    let { id } = useParams();\n\n    const [isLoading, setIsLoading] = useState(true);\n    const [article, setArticle] = useState([]);\n\n    // fetch article from API\n    useEffect(() => {\n        if (!id.match(\"[0-9]+\"))\n            window.location.href = \"/404\";\n\n        fetch(process.env.REACT_APP_API + \"/news/?article=\" + id)\n            .then(response => response.json())\n            .then((response) => {\n                if('data' in response) {\n                    setArticle(response[\"data\"]);\n                }\n                setIsLoading(false);\n            });\n    }, []);\n\n    return(\n        !isLoading && article != undefined &&\n        <div id=\"article-body\">\n            <Row className=\"text-left small text-primary mb-3\">\n                <a className=\"\" href=\"/noticias\">&#10094; Voltar às notícias</a>\n            </Row>\n            \n            <Row>\n                <Image src={process.env.REACT_APP_STATIC + article.header} alt=\"header\" className=\"w-100\" rounded />\n            </Row>\n\n            <Row className=\"mt-5\">\n                <h2 className=\"text-center w-100\">{article.title}</h2>\n                <h4 className=\"text-center w-100 text-secondary\">{article.category}</h4>\n            </Row>\n\n            <Row className=\"text-center justify-content-center mt-3\">\n                <Col md={4} sm={12}>\n                    <h5>\n                        <b>Autor: </b> \n                        <a href={\"/noticias?author=\" + article.authorId} title=\"Mais deste autor\">\n                            {article.author}\n                        </a>\n                    </h5>\n                </Col>\n                <Col md={4} sm={12}>\n                    <h5><b>Criado em:</b> {article.created_at}</h5>\n                </Col>\n                {article.last_change_at != null &&\n                <Col md={4} sm={12}>\n                    <h5><b>Modificado em:</b> {article.last_change_at}</h5>\n                </Col>\n                }\n            </Row>\n\n            <Row className=\"mt-4 text-justify\">\n                { /* this seems bad, maybe use this instead: https://github.com/remarkablemark/html-react-parser */ }\n                <p dangerouslySetInnerHTML={{__html: article.content}}></p>\n            </Row>\n\n            { /* idea: a button to go back to news page, with previous filters? */ }\n            \n        </div>\n    );\n}\n\nexport default NewsArticle;","/home/joao/Documents/Website/src/Pages/Team/index.js",["313"],"import React, { useEffect, useState } from \"react\";\n\n\nimport Person from \"./Components/Person.js\";\nimport Tabs from \"../../Components/Tabs/index.js\"\nimport TextList from \"../../Components/TextList/index.js\"\nimport { Container, Row, Spinner } from 'react-bootstrap';\nimport Typist from 'react-typist';\n\n\n// Animation\nconst animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\nconst animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n\n\nconst Team = () => {\n    const [years, setYears] = useState([]);\n\n    const [selectedYear, setSelectedYear] = useState(null);\n\n    const [people, setPeople] = useState();\n    const [colaborators, setColaborators] = useState();\n\n    const yearsC = years.map((el, index) => <Tabs year={years[index]} func={setSelectedYear} />)\n\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch(process.env.REACT_APP_API + \"/team/mandates/\")\n            .then(response => response.json())\n            .then((response) => {\n                var anos = response.data.map(year =>\n                    year.mandato\n                ).sort((a, b) => b - a);\n                setYears(anos)\n                setSelectedYear(anos[0])\n            })\n\n    }, [])\n\n\n    useEffect(() => {\n        setLoading(true);\n        \n        if (selectedYear != null) {\n            fetch(process.env.REACT_APP_API + \"/team/?mandate=\" + selectedYear)\n                .then(response => response.json())\n                .then(\n                    (response) => {\n                        var resp = response.data\n\n                        setPeople(resp.team.map((person, i) =>\n                            <Person\n                                img={process.env.REACT_APP_STATIC + person.header}\n                                name={person.name}\n                                description={person.role} linke={person.linkedIn}\n                                className=\"slideUpFade\"\n                                style={{\n                                    animationDelay: animationBase + animationIncrement * i + \"s\",\n                                }}\n                            />\n                        ))\n\n                        setColaborators(resp.colaborators.map(colab =>\n                            <TextList colSize={4} text={colab.name} />\n                        ));\n\n                        setLoading(false);\n                    })\n        }\n    }, [selectedYear])\n\n\n\n\n\n    return (\n        <div className=\"d-flex flex-column flex-wrap\">\n            <h2 className=\"mb-5 text-center\"><Typist>Equipa do NEI</Typist></h2>\n\n            <Tabs tabs={years} _default={selectedYear} onChange={setSelectedYear} />\n\n\n            {\n                loading\n                    ?\n                    <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n                    :\n                    <>\n                        <Row xs={1} lg={3}>\n                            {people}\n                        </Row>\n\n                        {\n                            colaborators != null && colaborators.length > 0 &&\n                            <Row className=\"justify-content-center\">\n                                <h2>Colaboradores</h2>\n                            </Row>\n\n                        }\n\n                        <Container>\n                            <Row xs={1} lg={3}>\n                                {colaborators}\n                            </Row>\n                        </Container>\n                    </>\n            }\n\n\n\n        </div>\n    );\n}\n\nexport default Team;","/home/joao/Documents/Website/src/Pages/Apontamentos/index.js",["314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352"],"import React, { useState, useEffect } from 'react';\nimport { Row, Col, Tab, Nav, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTh, faThList, faTimes, faShareAlt } from '@fortawesome/free-solid-svg-icons';\nimport ListView from './ListView';\nimport GridView from './GridView';\nimport \"./index.css\";\nimport PageNav from '../../Components/PageNav';\nimport Filters from \"../../Components/Filters\";\nimport Alert from '../../Components/Alert';\nimport Details from \"./Details\";\nimport Select from \"react-select\";\nimport Typist from 'react-typist';\nimport categoryFilters from './filters';\n\nconst Apontamentos = () => {\n\n    // Grid view selected note\n    const [selectedNote, setSelectedNote] = useState(null);\n\n\n    // useStates and other variables\n    const [data, setData] = useState([]);\n    const [filters, setFilters] = useState([]);\n    const [activeFilters, setActiveFilters] = useState([]);\n    const [selection, setSelection] = useState([]);\n\n    const [subjects, setSubjects] = useState([]); // todos os subjects\n    const [selectedSubject, setSelectedSubject] = useState(\"\");\n    const [subjectName, setSubjectName] = useState(\"\");\n    const [years, setYears] = useState(\"\");\n    const [selYear, setSelYear] = useState(\"\");\n    //const [selSemester, setSelSemester] = useState(\"\"); // Will we use this? --> no :P\n    const [student, setStudents] = useState(\"\");\n    const [selStudent, setSelStudent] = useState(\"\");\n    const [teachers, setTeachers] = useState(\"\");\n    const [selTeacher, setSelTeacher] = useState(\"\");\n    const [pageNumber, setPageNumber] = useState(1);\n    const [selPage, setSelPage] = useState(1);\n\n\n    const [shownYear, setShownYear] = useState();\n    const [shownSubj, setShownSubj] = useState();\n    const [shownAuth, setShownAuth] = useState();\n    const [shownTeacher, setShownTeacher] = useState();\n\n    const [thanks, setThanks] = useState([]);\n\n    const [loading, setLoading] = useState(true);\n\n    const [alert, setAlert] = useState({\n        'type': null,\n        'text': \"\"\n    })\n\n\n    const fetchPage = (p_num) => {\n        console.log(\"currPage: \" + selPage + \", new_page: \" + p_num);\n\n        setSelPage(p_num);\n    }\n\n    // When page loads\n    useEffect(() => {\n        // 1. Load category filters (static)\n        setFilters(categoryFilters);\n        setActiveFilters(categoryFilters.map(content => content.filter));\n        // 2. Check if there are filtering parameters on URL\n        // Get parameters and apply to filters\n        const urlParams = new URLSearchParams(window.location.search);\n        if(urlParams.get('year'))\n            setSelYear(urlParams.get('year'));\n        if(urlParams.get('subject'))\n            setSelectedSubject(urlParams.get('subject'));\n        if(urlParams.get('author'))\n            setSelStudent(urlParams.get('author'));\n        if(urlParams.get('teacher'))\n            setSelTeacher(urlParams.get('teacher'));\n        let active = [];\n        urlParams.getAll('category').forEach((categoryParam) => {\n            let find = categoryFilters.find(f => f.db==categoryParam);\n            if (find) \n                active.push(find.filter);\n        });\n        if (active.length>0) {\n            setActiveFilters(active);\n        }\n        // Remove data from URL\n        var url = document.location.href;\n        window.history.pushState({}, \"\", url.split(\"?\")[0]);\n        // Load thanks\n        fetch(process.env.REACT_APP_API + \"/notes/thanks/\")\n            .then((response) => {\n                if (!response.ok) {throw new Error(response.status)}\n                return response.json()\n            })\n            .then((response) => {\n                if ('data' in response) {\n                    setThanks(response['data']);\n                }\n            })\n            .catch((error) => {\n                console.log(\"Error getting thanks\", error);\n            });\n    }, []);\n\n    useEffect(() => {\n\n        setLoading(true);\n\n        // Every time a new call is made to the API, close details\n        setSelectedNote(null);\n\n\n        // extraVarName --> base used to concatenate and compare the optionals of every fetch\n        var extraYear = selYear == \"\" ? \"\" : \"schoolYear=\" + selYear + \"&\";\n        var extraSubj = selectedSubject == \"\" ? \"\" : \"subject=\" + selectedSubject + \"&\";\n        var extraStud = selStudent == \"\" ? \"\" : \"student=\" + selStudent + \"&\";\n        var extraTeacher = selTeacher == \"\" ? \"\" : \"teacher=\" + selTeacher + \"&\";\n        var extraCategory = \"\";\n\n        for (var i = 0; i < activeFilters.length; i++) {\n            extraCategory += \"category[]=\" + filters.filter(f => f['filter'] == activeFilters[i])[0]['db'] + \"&\";\n        }\n\n        if (activeFilters.length == 0) {\n            setData([]);\n            setSelPage(1);\n            setPageNumber(1);\n            setLoading(false);\n            return;\n        }\n\n\n        // fullVarName --> sum of optionals of every fetch\n        var fullTeacher = \"\";\n\n        if (extraYear != \"\" || extraSubj != \"\" || extraStud != \"\") {\n            fullTeacher = \"?\";\n            fullTeacher += extraYear;\n            fullTeacher += extraSubj;\n            fullTeacher += extraStud;\n            fullTeacher = fullTeacher.substring(0, fullTeacher.length - 1); // ignore the last '&'\n        }\n\n        var fullYear = \"\";\n\n        if (extraTeacher != \"\" || extraSubj != \"\" || extraStud != \"\") {\n            fullYear = \"?\";\n            fullYear += extraTeacher;\n            fullYear += extraSubj;\n            fullYear += extraStud;\n            fullYear = fullYear.substring(0, fullYear.length - 1); // ignore the last '&'\n        }\n\n        var fullSubj = \"\";\n\n        if (extraTeacher != \"\" || extraYear != \"\" || extraStud != \"\") {\n            fullSubj = \"?\";\n            fullSubj += extraYear;\n            fullSubj += extraStud;\n            fullSubj += extraTeacher;\n            fullSubj = fullSubj.substring(0, fullSubj.length - 1); // ignore the last '&'\n        }\n\n        var fullStud = \"\";\n\n        if (extraTeacher != \"\" || extraSubj != \"\" || extraYear != \"\") {\n            fullStud = \"?\";\n            fullStud += extraTeacher;\n            fullStud += extraSubj;\n            fullStud += extraYear;\n            fullStud = fullStud.substring(0, fullStud.length - 1); // ignore the last '&'\n        }\n\n        if (extraCategory.length == 0) {\n            setData([]);\n        }\n        else {\n            var fullNotes = \"?page=\" + selPage + \"&\";\n\n            fullNotes += extraTeacher;\n            fullNotes += extraSubj;\n            fullNotes += extraStud;\n            fullNotes += extraCategory;\n            fullNotes += extraYear;\n            fullNotes = fullNotes.substring(0, fullNotes.length - 1); // ignore the last '&'\n\n            fetch(process.env.REACT_APP_API + \"/notes/\" + fullNotes)\n                .then((response) => {\n                    if (!response.ok) {throw new Error(response.status)}\n                    return response.json()\n                })\n                .then((response) => {\n                    if ('data' in response) {\n                        setData(response.data)\n                        setPageNumber(response.page.pagesNumber);\n                    } else {\n                        setData([]);\n                        setPageNumber(1);\n                    }\n                    setLoading(false);\n                })\n                .catch((error) => {\n                    console.log(\"Error getting notes!\");\n                    setAlert({\n                        'type': 'alert',\n                        'text': 'Ocorreu um erro ao processar o teu pedido. Por favor recarrega a página.'\n                    });\n                });\n        }\n\n        fetch(process.env.REACT_APP_API + \"/notes/years/\" + fullYear)\n            .then((response) => {\n                if (!response.ok) {throw new Error(response.status)}\n                return response.json()\n            })\n            .then((response) => {\n                /*setYears(response.data.map( (year) => \n                    <option value={year.id} selected={year.id == selYear}>{year.yearBegin + \"-\" + year.yearEnd}</option>\n                ))\n                */\n                if ('data' in response) {\n                    var arr = response.data.map(year => {\n\n                        const x = { value: year.id, label: year.yearBegin + \"-\" + year.yearEnd };\n                        if (x.value == selYear)\n                            setShownYear(x)\n                        return x;\n                    })\n\n                    setYears(arr)\n                }\n            })\n            .catch((error) => {\n                console.log(\"Invalid parameters (no \\\"years\\\" matching)!\");\n                resetFilters();\n                setAlert({\n                    'type': 'alert',\n                    'text': 'Ocorreu um erro ao processar os teus filtros. Os seus valores foram reinicializados, por favor tenta novamente.'\n                });\n            });\n\n        fetch(process.env.REACT_APP_API + \"/notes/subjects/\" + fullSubj)\n            .then((response) => {\n                if (!response.ok) {throw new Error(response.status)}\n                return response.json()\n            })\n            .then((response) => {\n\n                if ('data' in response) {\n\n\n                    var arr = response.data.map(subj => {\n\n                        const x = { value: subj.paco_code, label: subj.short };\n                        if (x.value == selectedSubject)\n                            setShownSubj(x)\n                        return x;\n                    })\n\n                    setSubjects(arr)\n                }\n            })\n            .catch((error) => {\n                console.log(\"Invalid parameters (no \\\"subjects\\\" matching)!\");\n                resetFilters();\n                setAlert({\n                    'type': 'alert',\n                    'text': 'Ocorreu um erro ao processar os teus filtros. Os seus valores foram reinicializados, por favor tenta novamente.'\n                });\n            });\n\n        fetch(process.env.REACT_APP_API + \"/notes/students/\" + fullStud)\n            .then((response) => {\n                if (!response.ok) {throw new Error(response.status)}\n                return response.json()\n            })\n            .then((response) => {\n\n                if ('data' in response) {\n                    var arr = response.data.map(t => {\n                        const x = { value: t.id, label: t.name };\n                        if (x.value == selStudent)\n                            setShownAuth(x)\n\n                        return x;\n                    })\n\n                    setStudents(arr)\n                }\n            })\n            .catch((error) => {\n                console.log(\"Invalid parameters (no \\\"students\\\" matching)!\");\n                resetFilters();\n                setAlert({\n                    'type': 'alert',\n                    'text': 'Ocorreu um erro ao processar os teus filtros. Os seus valores foram reinicializados, por favor tenta novamente.'\n                });\n            });\n\n\n        fetch(process.env.REACT_APP_API + \"/notes/teachers/\" + fullTeacher)\n            .then((response) => {\n                if (!response.ok) {throw new Error(response.status)}\n                return response.json()\n            })\n            .then((response) => {\n                if ('data' in response) {\n                    var arr = response.data.map(t => {\n                        const x = { value: t.id, label: t.name };\n                        if (x.value == selTeacher)\n                            setShownTeacher(x)\n\n                        return x;\n                    })\n\n                    setTeachers(arr)\n                }\n            })\n            .catch((error) => {\n                console.log(\"Invalid parameters (no \\\"teachers\\\" matching)!\");\n                resetFilters();\n                setAlert({\n                    'type': 'alert',\n                    'text': 'Ocorreu um erro ao processar os teus filtros. Os seus valores foram reinicializados, por favor tenta novamente.'\n                });\n            });\n\n    }, [activeFilters, selectedSubject, selStudent, selYear, selPage, selTeacher]);\n\n    useEffect(() => {\n        setSelPage(1);\n    }, [activeFilters, selectedSubject, selStudent, selYear, selTeacher])\n\n    // This method allows user to share the filtering parameters through a parameterized URL\n    let linkShare = () => {\n        // Build URL\n        let url = window.location.origin + window.location.pathname + '?';\n        if (selYear!=\"\")\n            url += `year=${selYear}&`;\n        if (selectedSubject!=\"\")\n            url += `subject=${selectedSubject}&`;\n        if (selStudent!=\"\")\n            url += `author=${selStudent}&`;\n        if (selTeacher!=\"\")\n            url += `teacher=${selTeacher}&`;\n        // Only include filters tags if not all selected (because if missing from url, all will be selected by default)\n        if (activeFilters.length !== filters.length) {\n            for (var i = 0; i < activeFilters.length; i++) {\n                url += \"category=\" + filters.filter(f => f['filter'] == activeFilters[i])[0]['db'] + \"&\";\n            }\n        }\n        // Copy to user's clipboard\n        navigator.clipboard.writeText(url.slice(0, -1)); // Remove last char (? if no filters or extra &)\n        setAlert({\n            'type': 'info',\n            'text': \"O URL foi copiado para a área de transferência! :)\"\n        });\n    }\n\n    let resetFilters = () => {\n        setSelectedSubject(\"\");\n        setSelStudent(\"\");\n        setSelTeacher(\"\");\n        setSelYear(\"\");\n        setShownYear(\"\");\n        setShownSubj(\"\");\n        setShownAuth(\"\");\n        setShownTeacher(\"\");\n    }\n\n    return (\n        <div id=\"apontamentosPage\">\n            <div class=\"d-flex flex-column mb-5\">\n                <h2 className=\"text-center mb-2\">\n                    <Typist>Apontamentos</Typist>\n                </h2>\n                <Alert \n                    alert={alert}\n                    setAlert={setAlert}\n                />\n            </div>\n\n            <Row className=\"mt-4\">\n                <Col className=\"d-flex flex-column\" lg=\"4\" xl=\"3\">\n                    {\n                        selectedNote && selectedNote.id &&\n                        <Details\n                            className=\"order-2 order-lg-0\"\n                            note_id={selectedNote.id}\n                            close={() => setSelectedNote(null)}\n                            setSelYear={setSelYear}\n                            setSelectedSubject={setSelectedSubject}\n                            setSelStudent={setSelStudent}\n                            setSelTeacher={setSelTeacher}\n                            setSelPage={setSelPage}\n                            setAlert={setAlert}\n                        />\n                    }\n\n                    <div className=\"filtros order-0 order-lg-1\">\n\n                        <h4>Filtros</h4>\n                        {\n                            (selectedSubject || selStudent || selTeacher || selYear) &&\n                                <div className=\"d-flex flex-row flex-wrap mb-2\">\n                                    <button \n                                        className=\"rounded-pill btn btn-outline-primary btn-sm pill animation mr-2\"\n                                        onClick={() => linkShare()}    \n                                        title=\"Copiar link com filtros\"\n                                    >\n                                        <span className=\"mr-1\">Partilhar</span>\n                                        <FontAwesomeIcon\n                                            className=\"my-auto link\"\n                                            icon={faShareAlt}\n                                        />\n                                    </button>\n                                    <button \n                                        className=\"rounded-pill btn btn-outline-primary btn-sm pill animation mr-2\"\n                                        onClick={() => resetFilters()}    \n                                        title=\"Remover filtros\"\n                                    >\n                                        <span className=\"mr-1\">Limpar</span>\n                                        <FontAwesomeIcon \n                                            className=\"my-auto link\" \n                                            icon={faTimes} \n                                        />\n                                    </button>\n                                </div>\n                        }\n\n                        <Select\n                            id=\"teste\"\n                            className=\"react-select\"\n                            options={years}\n                            onChange={(e) => { if (e == null) { setSelYear(\"\"); setShownYear(\"\") } else setSelYear(e.value); }}\n                            placeholder=\"Ano Letivo...\"\n                            isClearable={true}\n                            value={shownYear}\n\n                        />\n\n                        <Select\n                            className=\"react-select\"\n                            options={subjects}\n                            onChange={(e) => { if (e == null) { setSelectedSubject(\"\"); setShownSubj(\"\") } else setSelectedSubject(e.value) }}\n                            placeholder=\"Cadeira...\"\n                            isClearable={true}\n                            value={shownSubj}\n                        />\n\n                        <Select\n                            className=\"react-select\"\n                            options={student}\n                            onChange={(e) => { if (e == null) { setSelStudent(\"\"); setShownAuth(\"\") } else setSelStudent(e.value) }}\n                            placeholder=\"Autor...\"\n                            isClearable={true}\n                            value={shownAuth}\n                        />\n\n                        <Select\n                            className=\"react-select\"\n                            options={teachers}\n                            onChange={(e) => { if (e == null) { setSelTeacher(\"\"); setShownTeacher(\"\") } else setSelTeacher(e.value) }}\n                            placeholder=\"Professor...\"\n                            isClearable={true}\n                            value={shownTeacher}\n                        />\n                    </div>\n\n                    <div className=\"order-1 order-lg-3\">\n                        <h4 className=\"mt-3\">Categorias</h4>\n                        <Filters\n                            accordion={true}\n                            filterList={filters}\n                            activeFilters={activeFilters}\n                            setActiveFilters={setActiveFilters}\n                            className=\"mb-5\"\n                            btnClass=\"btn-sm\"\n                            listClass=\"d-flex flex-column\"\n                            allBtnClass=\"mb-2 p-0 col-12\"\n                        />\n                    </div>\n                </Col>\n\n                {/* The two views are controlled by a bootstrap tabs component,\n                 ** using a custom layout. The Nav element contains the buttons that switch\n                 ** the views, which are specified in each Tab.Pane element.\n                */}\n                <Col lg=\"8\" xl=\"9\">\n\n                    <Tab.Container defaultActiveKey={window.innerWidth>=992 ? \"grid\" : \"list\"}>\n                        <div>\n                            <Nav onSelect={() => setSelectedNote(null)}>\n                                <Nav.Item className=\"mx-auto mx-lg-0 ml-lg-0 d-none d-lg-block\"><Nav.Link eventKey=\"grid\" className=\"h5\">\n                                    <FontAwesomeIcon icon={faTh} />\n                                    <span className=\"ml-3\">Grid</span>\n                                </Nav.Link></Nav.Item>\n                                <Nav.Item className=\"mx-auto mx-lg-0 mr-lg-auto d-none d-lg-block\"><Nav.Link eventKey=\"list\" className=\"h5\">\n                                    <FontAwesomeIcon icon={faThList} />\n                                    <span className=\"ml-3\">List</span>\n                                </Nav.Link></Nav.Item>\n                                <PageNav\n                                    page={selPage}\n                                    total={pageNumber}\n                                    handler={fetchPage}\n                                    className=\"mx-auto mx-lg-0 ml-lg-auto\"\n                                ></PageNav>\n                            </Nav>\n                        </div>\n\n                        <Tab.Content>\n                            <Tab.Pane eventKey=\"grid\">\n                                <div className=\"d-flex\">\n                                    {\n                                        loading ?\n                                            <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mt-3\" title=\"A carregar...\" />\n                                            :\n                                            data.length == 0 ?\n                                                <Col sm={12}>\n                                                    <h3 className=\"text-center mt-3\">Nenhum apontamento encontrado</h3>\n                                                    <h4 className=\"text-center\">Tente definir filtros menos restritivos</h4>\n                                                </Col>\n                                                :\n                                                <GridView\n                                                    data={data}\n                                                    setSelected={setSelectedNote}\n                                                ></GridView>\n                                    }\n                                </div>\n                            </Tab.Pane>\n                            <Tab.Pane eventKey=\"list\" >\n                                <div className=\"d-flex flex-column\">\n                                    {\n                                        loading ?\n                                            <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mt-3\" title=\"A carregar...\" />\n                                            :\n                                            data.length == 0 ?\n                                                <Col sm={12}>\n                                                    <h3 className=\"text-center mt-3\">Nenhum apontamento encontrado</h3>\n                                                    <h4 className=\"text-center\">Tente definir filtros menos restritivos</h4>\n                                                </Col>\n                                                :\n                                                <ListView\n                                                    data={data}\n                                                    setSelYear={setSelYear}\n                                                    setSelectedSubject={setSelectedSubject}\n                                                    setSelStudent={setSelStudent}\n                                                    setSelTeacher={setSelTeacher}\n                                                ></ListView>\n                                    }\n                                </div>\n                            </Tab.Pane>\n                        </Tab.Content>\n                    </Tab.Container>\n\n                    {\n                        !loading &&\n                        <PageNav\n                            page={selPage}\n                            total={pageNumber}\n                            handler={fetchPage}\n                            className=\"mx-auto d-lg-none mt-3\"\n                        ></PageNav>\n                    }\n\n                </Col>\n            </Row>\n\n            <div className=\"text-center mt-5\">\n                <h3>Foi graças a pessoas como tu que esta página se tornou possível!</h3>\n                {\n                    thanks.length &&\n                    <div>\n                        <p className=\"m-0\">O nosso agradecimento aos que mais contribuiram.</p>\n\n                        <Row>\n                            {\n                                thanks.map(t => \n                                    <div className=\"mx-auto my-3\">\n                                        <h4 className=\"\">{t.author}</h4>\n                                        <div className=\"small\">\n                                            <a href={'/apontamentos?author=' + t.authorId}>Os seus apontamentos no site do NEI</a>\n                                            <br/>\n                                            {\n                                                t.personalPage && <a href={t.personalPage} target=\"_blank\">Website de apontamentos</a>\n                                            }\n                                        </div>\n                                    </div>\n                                )\n                            }\n                        </Row>\n                    </div>\n                }\n                <p>\n                    Junta-te a elas e ajuda-nos a manter este repositório atualizado com os conteúdos mais recentes. Partilha connosco os teus através do email <a href=\"mailto:nei@aauav.pt\">nei@aauav.pt</a>. Contamos com o teu apoio!\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default Apontamentos;","/home/joao/Documents/Website/src/Pages/Video/index.js",["353","354","355","356"],"import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router';\nimport Typist from 'react-typist';\nimport {\n    Row, Spinner\n} from \"react-bootstrap\";\nimport YoutubeEmbed from '../../Components/YoutubeEmbed';\nimport Alert from '../../Components/Alert';\nimport { faList } from '@fortawesome/free-solid-svg-icons';\n\n\nconst Video = () => {\n\n    // get course from URL parameters\n    let {id} = useParams();\n\n    const [video, setVideo] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    // On load, get video from API\n    useEffect(() => {\n        setLoading(true);\n\n        fetch(process.env.REACT_APP_API + \"/videos/?video=\" + id)\n            .then((response) => response.json())\n            .then((response) => {\n                console.log(\"GOT RESPONSE\", response);\n                if ('data' in response) {\n                    setVideo(response['data']);\n                } else {\n                    window.location.href = \"/404\";\n                }\n                setLoading(false);\n            }).catch((error) => {\n                window.location.href = \"/404\";\n            });\n    }, []);\n    \n    return (\n        <div>\n            {\n                !loading && video &&\n                <div className=\"d-flex flex-column\">\n                    <p className=\"col-12 m-0 p-0 text-left small text-primary mb-3\">\n                        <a className=\"\" href=\"/videos\">&#10094; Voltar aos vídeos</a>\n                    </p>\n\n                    <h2 className=\"text-center\">\n                        {video.title}\n                    </h2>\n                    <h4 className=\"text-center w-100 text-secondary\">\n                        {video.subtitle}\n                    </h4>\n                    <p className=\"text-secondary w-100 text-center small\">\n                        Atualizado a {new Date(video.created.replace(/-/g, \"/\")).toLocaleDateString('pt-PT', {day: 'numeric', month: 'long', year: 'numeric'})}\n                    </p>\n\n                    <YoutubeEmbed \n                        embedId={video.ytId} \n                        playlist={video.playlist===\"1\"}\n                        className=\"my-4 slideUpFade\"\n                    />\n\n                    {\n                        video.playlist==\"1\" &&\n                        <Alert \n                            alert={{\n                                type: 'info',\n                                text: 'Este tópico é uma lista de reprodução. Para navegares entre os vídeos utiliza o ícone no canto superior direito do reprodutor.' \n                            }}\n                            setAlert={null}\n                        />\n                    }\n\n                </div>\n            }\n\n            <Row>\n                {\n                    loading &&\n                    <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mb-3\" title=\"A carregar...\" />\n                }\n            </Row>\n        </div>\n    );\n}\n\nexport default Video;","/home/joao/Documents/Website/src/Pages/Internship/index.js",[],"/home/joao/Documents/Website/src/Pages/Forms/FeedbackForm/index.js",["357"],"import React, { useState } from \"react\";\nimport Typist from 'react-typist';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\n\nconst FeedbackForm = () => {\n\n    const [form, setForm] = useState({\n        'email': '',\n        'name': '',\n        'message': ''\n    });\n    const [sent, setSent] = useState(false);\n    const [error, setError] = useState(null);\n\n    const formUpdated = (event) => {\n        setForm(prev => {\n            return {\n                ...prev,\n                [event.target.name]: event.target.value\n            }\n        });\n    }\n\n    const formSubmitted = (event) => {\n        event.preventDefault();\n\n        // POST form\n        return fetch(process.env.REACT_APP_APIPOST + '/forms/feedback', {\n            method: 'POST',\n            body: JSON.stringify(form),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }).then(response => {\n            if (response.status == 200) {\n                setSent(true);\n            } else if ('error' in response) {\n                setError(response['error']);\n            } else {\n                setError(\"Tenta novamente.\");\n            }\n        }).catch(err => {\n            setError(\"Estamos a ter dificuldades em submetê-lo. Por favor tenta novamente e se o problema persistir contacta-nos por um meio alternativo.\");\n        });\n    }\n\n\n    if (sent) {\n        return (\n            <div className=\"d-flex flex-column\">\n                <h2 className=\"text-center\">\n                    Obrigado pela tua mensagem!\n                </h2>\n                <p className=\"text-center mb-0\">\n                    Vamos analisá-la e entraremos em contacto em breve!\n                </p>\n                <button\n                    className=\"btn btn-outline-primary mx-auto mt-5\"\n                    onClick={() => window.history.back()}\n                >\n                    Voltar\n                </button>\n            </div>\n        )\n    }\n\n\n    return (\n        <div>\n            <h2 className=\"text-center\">\n                <Typist>Dá-nos o teu feedback!</Typist>\n            </h2>\n            <p className=\"text-center mb-0\">\n                Utiliza este formulário para nos fazeres chegar as tuas sugestões acerca do website.\n            </p>\n            <p className=\"text-center\">\n                Estamos ansiosos por ler o que nos tens a dizer! :)\n            </p>\n\n            {\n                error &&\n                <Alert variant=\"danger\" className=\"small\">\n                    Ocorreu um erro na submissão do formulário: {error}\n                </Alert>\n            }\n\n            <Form\n                onSubmit={formSubmitted}\n            >\n                <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                    <Form.Label>Nome</Form.Label>\n                    <Form.Control\n                        type=\"tetxt\"\n                        placeholder=\"Qual o teu nome?\"\n                        required=\"true\"\n                        value={form.name}\n                        onChange={formUpdated}\n                        name=\"name\"\n                    />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"Qual o teu email?\"\n                        required=\"true\"\n                        value={form.email}\n                        onChange={formUpdated}\n                        name=\"email\"\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>A tua mensagem</Form.Label>\n                    <Form.Control\n                        as=\"textarea\"\n                        rows={7}\n                        required=\"true\"\n                        value={form.message}\n                        onChange={formUpdated}\n                        name=\"message\"\n                    />\n                </Form.Group>\n\n\n\n                <Button variant=\"outline-primary\" type=\"submit\" className=\"col-12\">\n                    Submeter\n                </Button>\n            </Form>\n        </div>\n    );\n}\n\nexport default FeedbackForm;","/home/joao/Documents/Website/src/Pages/FainaTree/index.js",["358","359","360","361","362","363","364"],"// example from https://bl.ocks.org/mbostock/3885705\n\nimport React, { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCompress, faExpand,\n  faSitemap, faGripHorizontal,\n  faChevronDown, faChevronUp,\n  faArrowUp, faArrowDown,\n  faAngleLeft, faAngleRight\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport * as d3 from 'd3';\nimport classNames from \"classname\";\n\nimport data from \"Assets/db.json\";\nimport femalePic from \"Assets/default_profile/female.svg\";\nimport malePic from \"Assets/default_profile/male.svg\";\nimport nei from \"Assets/icons/nei.svg\";\nimport aettua from \"Assets/icons/aettua.svg\";\nimport anzol from \"Assets/icons/anzol.svg\";\nimport sal from \"Assets/icons/sal.svg\";\nimport rol from \"Assets/icons/rol.svg\";\nimport lenco from \"Assets/icons/lenco.svg\";\nimport pa from \"Assets/icons/pa.svg\";\n\nimport './index.css';\n\n\nconst MIN_YEAR = 10, MAX_YEAR = 21;\n\nconst organizations = {\n  nei: {\n    name: \"NEI\",\n    insignia: nei,\n  },\n  aettua: {\n    name: \"AETTUA\",\n    insignia: aettua,\n  },\n  cf: {\n    name: \"Comissão de Faina\",\n    insignia: anzol,\n  },\n  cs: {\n    name: \"Conselho do Salgado\",\n    insignia: sal,\n  },\n  escrivao: {\n    name: \"Mestre Escrivão\",\n    insignia: rol,\n  },\n  pescador: {\n    name: \"Mestre Pescador\",\n    insignia: lenco,\n  },\n  salgado: {\n    name: \"Mestre do Salgado\",\n    insignia: pa,\n  },\n}\n\nconst Modes = {\n  TREE: 1,\n  YEAR: 2\n}\n\n\n// threshold to show photos\nconst zoomThreshold = 1;\nlet lastTransform = d3.zoomIdentity.scale(0.5);\nlet svg, zoom, groups, labels, fainaLabels;\n\n\nfunction separateName(name) {\n  const maxChars = 15,\n    middleIndex = Math.ceil(name.length / 2);\n\n  let name1 = name.slice(0, middleIndex).split(\" \"),\n    name2 = name.slice(middleIndex).split(\" \"),\n    nameMid = name1.slice(-1)[0] + name2.slice(0, 1)[0];\n\n  name1 = name1.slice(0, -1).join(\" \");\n  name2 = name2.slice(1).join(\" \");\n\n  if (name1.length >= name2.length) {\n    name2 = (nameMid + \" \" + name2).trim();\n  } else {\n    name1 = (name1 + \" \" + nameMid).trim();\n  }\n\n  let isTruncated = false,\n    tname1 = name1,\n    tname2 = name2;\n\n  if (name1.length > maxChars) {\n    isTruncated = true;\n    tname1 = name1.slice(0, maxChars - 3) + \"...\";\n  }\n  if (name2.length > maxChars) {\n    isTruncated = true;\n    tname2 = name2.slice(0, maxChars - 3) + \"...\";\n  }\n\n  return { name1, name2, isTruncated, tname1, tname2 };\n}\n\n\nfunction getFainaHierarchy({ sex, start_year, organizations }, end_year) {\n  if (organizations)\n  for (const o of organizations) {\n    if (o.name === \"cf\" && o.year === end_year && o.role) return o.role;\n    if (o.name === \"st\" && o.year === end_year) return o.role;\n  }\n\n  const maleHierarchies = [\"Junco\", \"Moço\", \"Marnoto\", \"Mestre\"];\n  const femaleHierarchies = [\"Caniça\", \"Moça\", \"Salineira\", \"Mestre\"];\n\n  const index = Math.min(end_year - start_year - 1, 3);\n  return (sex === \"M\") ? maleHierarchies[index] : femaleHierarchies[index];\n}\n\n\nfunction showLabelFaina({ fainaNames, start_year }, end_year) {\n  if (fainaNames && start_year + 1 <= end_year) {\n    return true;\n  }\n  return false;\n}\n\n\nfunction labelFamilies(node) {\n  if (node.parent) {\n    if (node.parent.id === \"000\") {\n      node.family = node.id;      // head of the family\n    } else {\n      node.family = node.parent.family;\n    }\n  }\n\n  if (node.children) {\n    node.family_depth = 0;\n    node.family_count = 0;\n    for (const n of node.children) {\n      labelFamilies(n);\n      node.family_depth = Math.max(node.family_depth, n.family_depth);\n      node.family_count += n.family_count;\n    }\n  } else {\n    node.family_depth = node.depth;\n    node.family_count = 1;\n  }\n}\n\n\nfunction buildTree() {\n  const assignInsignias = () => {\n    const insignias = [\"nei\", \"aettua\"];\n    const i = Math.floor(Math.random() * insignias.length * 2);\n    return insignias.slice(i);\n  }\n\n  for (const elem of data.users) {\n    elem.names = separateName(elem.name);\n    if (elem.faina) {\n      elem.fainaNames = separateName(\n        getFainaHierarchy(elem, MAX_YEAR) + \" \" + elem.faina?.[0].name);\n    }\n    elem.insignias = elem.organizations?.map(o => {\n      if (o.name !== \"st\")\n        return o.name;\n      return {\n        \"Mestre Escrivão\": \"escrivao\",\n        \"Mestre Pescador\": \"pescador\",\n        \"Mestre do Salgado\": \"salgado\"\n      }[o.role];\n    }).filter((v, i, a) => a.indexOf(v) === i) || [];\n  }\n\n  const dataStructure = d3.stratify()\n    .id(d => d.id)\n    .parentId(d => d.parent)\n    (data.users);\n\n  // label all nodes with their family id and depth\n  labelFamilies(dataStructure);\n\n  // sort head families according to the family depth\n  // sort like a normal distribution\n  dataStructure.children = dataStructure.children.slice()\n    .sort((a, b) => a.family_depth - b.family_depth || a.family_count - b.family_count)\n    .reduceRight((acc, val, i) => {\n      return i % 2 === 0 ? [...acc, val] : [val, ...acc];\n    }, []);\n\n  const treeStructure = d3.tree()\n    // .size(view)\n    .nodeSize([100, 150])\n    .separation(function (a, b) {\n      return a.family != b.family ? 4 : a.parent != b.parent ? 1.25 : 1;\n    });\n\n  const root = treeStructure(dataStructure);\n\n  // clean svg\n  d3.select(\"svg.treeei\")\n    .selectAll(\"*:not(defs, defs *)\")\n    .remove();\n\n  zoom = d3.zoom()\n    .scaleExtent([0.2, 2])\n    .on(\"zoom\", ({ transform }) => zoomed(transform));\n\n  svg = d3.select(\"svg.treeei\")\n    .call(zoom)\n    .append(\"g\")\n\n  function zoomed(transform) {\n    const n = transform.k > zoomThreshold;\n    const o = lastTransform.k > zoomThreshold;\n    if (n !== o) {\n      updateNodes(n);\n    }\n    svg.attr(\"transform\", transform);\n    lastTransform = transform;\n  }\n\n  groups = svg\n    .append(\"g\")\n    .attr(\"class\", \"nodes\")\n    .selectAll(\"g\")\n    .data(root.descendants().slice(1))\n    .enter()\n    .append(\"g\");\n\n  // links\n  groups\n    .filter(d => d.parent != root)\n    .append(\"path\")\n    .style(\"stroke\", \"silver\")\n    .attr('marker-start', 'url(#dot)')\n    .attr(\"d\", function (d) {\n      const sx = d.parent.x,\n        sy = d.parent.y + 68,\n        tx = d.x,\n        ty = d.y,\n        hy = 0.5 * (ty - sy),\n        off = 5;\n\n      let dir = sx - tx > 0 ? -1 : sx - tx < 0 ? 1 : 0;\n\n      const p = (\"M\" + sx + \",\" + (sy)\n        + \"v\" + (hy - off - 10)\n        + \"c\" + 0 + \",\" + off\n        + \" \" + 0 + \",\" + off\n        + \" \" + (off * dir) + \",\" + off\n        + \"h\" + (tx - sx - 3 * off * dir)\n        + \"c\" + (2 * off * dir) + \",\" + 0\n        + \" \" + (2 * off * dir) + \",\" + 0\n        + \" \" + (2 * off * dir) + \",\" + 2 * off\n        + \"L\" + tx + \",\" + ty\n      );\n      return p;\n    })\n    .attr(\"stroke-dasharray\", function () {\n      let length = d3.select(this).node().getTotalLength();\n      return length + \" \" + length;\n    })\n    .attr(\"stroke-dashoffset\", function () {\n      return d3.select(this).node().getTotalLength();\n    })\n    .transition()\n    .duration(3000)\n    .ease(d3.easeLinear)\n    .attr(\"stroke-dashoffset\", 0);\n\n  const nodes = groups\n    .append(\"g\")\n    .attr(\"class\", \"node\")\n    .attr(\"transform\", d => `translate(${d.x},${d.y})`);\n\n  // node images\n  d3.select(\"defs\")\n    .selectAll(\"pattern.image\")\n    .data(root.descendants().slice(1))\n    .enter()\n    .append(\"pattern\")\n    .attr(\"id\", d => d.data.id)\n    .attr(\"class\", \"image\")\n    .attr('width', 1)\n    .attr('height', 1)\n    .attr('patternContentUnits', 'objectBoundingBox')\n    .append(\"image\")\n    .attr(\"xlink:xlink:href\", function (d) {\n      return d.data.image ? d.data.image :\n        d.data.sex === \"M\" ? malePic : femalePic;\n    })\n    .attr(\"height\", 1)\n    .attr(\"width\", 1)\n    .attr(\"preserveAspectRatio\", \"xMinYMin slice\");\n\n  // circle with the person image\n  const nodesProfilePic = nodes\n    .append(\"circle\")\n    .attr(\"class\", \"profile-pic\")\n    .attr(\"cx\", 0)\n    .attr(\"cy\", 0)\n    .attr(\"r\", 10)\n    .style(\"fill\", d => `url(#${d.data.id})`);\n\n  nodes\n    .insert(\"g\", \"circle.profile-pic\")\n    .attr(\"class\", \"insignias\")\n    .selectAll(\"rect\")\n    .data(d => d.data.insignias)\n    .enter().append(\"rect\")\n    .attr(\"class\", d => `insignia ${d}`)\n    .attr(\"x\", -5)\n    .attr(\"y\", -5)\n    .style(\"opacity\", 0)\n    .attr(\"width\", 10)\n    .attr(\"height\", 10)\n    .style(\"fill\", d => `url(#${d})`);\n\n  // circle with the gradient year color\n  const nodesProfileGrad = nodes\n    .append(\"circle\")\n    .attr(\"class\", \"profile-grad\")\n    .attr(\"cx\", 0)\n    .attr(\"cy\", 0)\n    .attr(\"r\", 10)\n    .attr(\"opacity\", 1)\n    .style(\"cursor\", d => d.data.insignias?.length > 0 ? \"pointer\" : \"default\")\n    .style(\"fill\", d => d3.schemeTableau10[(d.data.start_year + 6) % 10])\n    .on(\"click\", function (event) {\n      let parent = this.parentElement;\n      let active = parent.classList.contains(\"active\");\n      let x, y, o;\n\n      if (active) {\n        parent.classList.remove(\"active\");\n        x = y = (_) => -5;\n        o = 0;\n      } else {\n        parent.classList.add(\"active\");\n        x = (i) => Math.cos((-i + 1) / 5 * Math.PI) * 30 - 5;\n        y = (i) => Math.sin((-i + 1) / 5 * Math.PI) * 30 - 5;\n        o = 1;\n      }\n\n      d3.select(parent)\n        .select(\"g.insignias\")\n        .selectAll(\"rect.insignia\")\n        .transition()\n        .attr(\"x\", (d, i) => x(i))\n        .attr(\"y\", (d, i) => y(i))\n        .style(\"opacity\", o)\n        .ease(d3.easeBackOut.overshoot(2))\n    })\n\n  // border with the year color \n  const nodesProfileBorder = nodes\n    .insert(\"circle\", \"circle\")\n    .attr(\"class\", \"profile-border\")\n    .attr(\"cx\", 0)\n    .attr(\"cy\", 0)\n    .attr(\"r\", 12)\n    .style(\"fill\", \"white\")\n    .style(\"stroke\", \"silver\")\n    .style(\"stroke-width\", 1.5)\n\n  labels = groups\n    .append(\"g\")\n    .attr(\"class\", \"label\")\n    .attr(\"transform\", d => `translate(${d.x},${d.y + 18})`);\n\n  fainaLabels = labels\n    .filter(d => d.data.fainaNames)\n    .classed(\"label-faina\", true)\n\n  // nodes' names\n  labels\n    .append(\"text\")\n    .attr(\"x\", 0)\n    .attr(\"y\", 0)\n    .attr(\"text-anchor\", \"middle\")\n    .append(\"tspan\")\n    .attr('x', 0)\n    .attr('dy', '1.2em')\n    .text(d => d.data.names.tname1)\n    .append(\"tspan\")\n    .attr('x', 0)\n    .attr('dy', '1.2em')\n    .text(d => d.data.names.tname2);\n\n  // nodes' faina names\n  fainaLabels\n    .append(\"text\")\n    .classed(\"text-faina\", true)\n    .attr(\"x\", 0)\n    .attr(\"y\", 0)\n    .attr(\"text-anchor\", \"middle\")\n    .append(\"tspan\")\n    .attr('x', 0)\n    .attr('dy', '1.2em')\n    .text(d => d.data.fainaNames.tname1)\n    .append(\"tspan\")\n    .attr('x', 0)\n    .attr('dy', '1.2em')\n    .text(d => d.data.fainaNames.tname2);\n\n  const labelsTooltips = groups\n    .filter(d => d.data.names.isTruncated)\n    .append(\"g\")\n    .attr(\"class\", \"label label-tooltip\")\n    .attr(\"transform\", d => `translate(${d.x},${d.y + 18})`)\n    .attr(\"opacity\", \"0\")\n    .on('mouseover', function () {\n      d3.select(this).transition()\n        .duration(200)\n        .attr('opacity', 1);\n    })\n    .on('mouseout', function () {\n      d3.select(this).transition()\n        .delay(200)\n        .duration(400)\n        .attr('opacity', 0);\n    });\n\n  labelsTooltips\n    .append(\"text\")\n    .attr(\"x\", 0)\n    .attr(\"y\", 0)\n    .attr(\"text-anchor\", \"middle\")\n    .append(\"tspan\")\n    .attr('x', 0)\n    .attr('dy', '1.2em')\n    .text(d => d.data.names.name1)\n    .append(\"tspan\")\n    .attr('x', 0)\n    .attr('dy', '1.2em')\n    .text(d => d.data.names.name2);\n\n  labelsTooltips\n    .insert(\"rect\", \"text\")\n    .attr(\"fill\", \"white\")\n    .attr(\"width\", function () {\n      return this.nextSibling.getBBox().width + 10;\n    })\n    .attr(\"height\", function () {\n      return this.nextSibling.getBBox().height;\n    })\n    .attr(\"x\", function () {\n      return this.nextSibling.getBBox().x - 5;\n    })\n    .attr(\"y\", function () {\n      return this.nextSibling.getBBox().y;\n    });\n\n  function updateNodes(close) {\n    nodesProfilePic\n      .style(\"fill\", d => close ? `url(#${d.data.id})` : \"none\")\n      .transition().duration(300)\n      .attr(\"r\", close ? 18 : 10);\n\n    nodesProfileGrad\n      .attr(\"opacity\", d => close ? (d.data.image ? 0 : 0.3) : 1)\n      .transition().duration(300)\n      .attr(\"r\", close ? 18 : 10);\n\n    nodesProfileBorder\n      .style(\"stroke\", close ? d => d3.schemeTableau10[(d.data.start_year + 6) % 10] : \"silver\")\n      .transition().duration(300)\n      .attr(\"r\", close ? 20 : 12);\n\n    labels\n      .classed('label-small', close)\n      .transition().duration(300)\n      .attr(\"transform\", d => `translate(${d.x},${d.y + (close ? 26 : 18)})`);\n\n    labelsTooltips\n      .classed('label-small', close)\n      .transition().duration(300)\n      .attr(\"transform\", d => `translate(${d.x},${d.y + (close ? 26 : 18)})`);\n  }\n\n  updateNodes(false);\n\n  // constrain tree\n  const { width, height, x, y } = svg.node().getBBox();\n\n  const padY = 256,\n    padX = 768,\n    x0 = x - 1.5*padX,\n    y0 = y - padY,\n    x1 = x + width + padX,\n    y1 = y + height + padY;\n\n  zoom.translateExtent([[x0, y0], [x1, y1]]);\n}\n\n\nfunction centerTree() {\n  const rect = d3.select(\"svg.treeei\").node().getBoundingClientRect();\n  const { x, y, width, height } = svg.node().getBBox();\n\n  let offsetY = (rect.height - height * lastTransform.k) / 2 - y * lastTransform.k;\n  let offsetX = (rect.width - width * lastTransform.k) / 2 - x * lastTransform.k;\n\n  d3.select(\"svg.treeei\").call(zoom.transform, d3.zoomIdentity.translate(offsetX, offsetY).scale(0.5));\n}\n\n\nfunction filterTree(names, end_year) {\n  groups\n    .attr(\"opacity\", d => {\n      if (d.data.start_year > end_year)\n        return 0.2;\n      if (names.length === 0)\n        return 1;\n      if (d.data.insignias.some(n => names.includes(n)))\n        return 1;\n      return 0.2;\n    });\n\n  fainaLabels\n    .filter(function (d) {\n      const n = d3.select(this);\n      if (showLabelFaina(d.data, end_year)) {\n        const hierarchy = getFainaHierarchy(d.data, end_year);\n        d.data.fainaNames = separateName(\n          hierarchy + \" \" + d.data.faina?.[0].name)\n        n.classed(\"label-faina\", true);\n        return true;\n      }\n      n.classed(\"label-faina\", false);\n      return false;\n    })\n    .select('text.text-faina')\n    .select(\"tspan\")\n    .text(d => d.data.fainaNames.tname1)\n    .append(\"tspan\")\n    .attr('x', 0)\n    .attr('dy', '1.2em')\n    .text(d => d.data.fainaNames.tname2);\n}\n\n\n\nfunction changeLabels(showFainaNames) {\n  fainaLabels\n    .classed(\"show\", showFainaNames);\n}\n\n\nfunction FainaTree() {\n  const [showInfo, setShowInfo] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n  const [mode, setMode] = useState(Modes.TREE);\n  const [endYear, setEndYear] = useState(MAX_YEAR);\n  const [insignias, setInsignias] = useState([]);\n  const [year, setYear] = useState(MAX_YEAR);\n  const [fainaNames, setFainaNames] = useState(false);\n\n  const toggleShowInfo = () => {\n    setShowInfo(!showInfo);\n  }\n\n  const toggleExpand = () => {\n    setExpanded(!expanded);\n  }\n\n  const toggleMode = () => {\n    setMode(mode === Modes.TREE ? Modes.FAINA : Modes.TREE);\n  }\n\n  const toggeFainaNames = () => {\n    changeLabels(!fainaNames);\n    setFainaNames(!fainaNames);\n  }\n\n  const toggleInsignias = (name) => {\n    const i = insignias.indexOf(name);\n\n    if (i !== -1)\n      insignias.splice(i, 1);\n    else\n      insignias.push(name);\n\n    setInsignias([...insignias]);\n  }\n\n  useEffect(() => {\n    buildTree();\n    centerTree();\n  }, [])\n\n  useEffect(() => {\n    filterTree(insignias, year);\n  }, [insignias, year])\n\n  return (\n    <div id=\"treeei\" className={classNames(\"d-flex flex-grow-1\", { \"expand\": expanded })}>\n      <div className='side-bar'>\n        <button className='side-bar-button' onClick={toggleShowInfo}>\n          <span>\n            <FontAwesomeIcon\n              icon={showInfo ? faAngleLeft : faAngleRight}\n              size={\"sm\"} />\n          </span>\n        </button>\n        <div className={classNames(\"side-bar-body\", { \"hide\": !showInfo })}>\n          <div className='side-bar-content'>\n            <div className='mb-3'>\n              <div className=\"d-flex align-items-center justify-content-around\" style={{ minHeight: 32 }}>\n                <FontAwesomeIcon\n                  onClick={toggleExpand}\n                  className=\"menu-icon\"\n                  icon={expanded ? faCompress : faExpand}\n                  size=\"lg\" />\n                <FontAwesomeIcon\n                  style={{ cursor: \"not-allowed\", opacity: 0.25 }}\n                  onClick={toggleMode}\n                  className=\"menu-icon\"\n                  icon={mode === Modes.TREE ? faGripHorizontal : faSitemap}\n                  size={mode === Modes.TREE ? \"2x\" : \"lg\"} />\n              </div>\n            </div>\n            <h4>Matrículas</h4>\n            <div className='d-flex justify-content-between my-3'>\n              <div className='mr-3'>\n                <div style={{ marginBottom: \"0.2em\" }}>\n                  <FontAwesomeIcon\n                    onClick={() => setEndYear((endYear) => Math.max(--endYear, MIN_YEAR + 9))}\n                    style={endYear === MIN_YEAR + 9 ? { opacity: 0.5 } : { cursor: \"pointer\" }}\n                    icon={faArrowUp}\n                    size=\"sm\" />\n                </div>\n                {\n                  [...Array(5).keys()].map(i => endYear - 9 + i).map(i => (\n                    <div key={i} className={classNames(\"color-legend\", { \"inactive\": i > year })}\n                      onClick={() => setYear(i)}\n                    >\n                      <div className=\"color-bullet\"\n                        style={{ backgroundColor: d3.schemeTableau10[(i + 6) % 10] }}></div>\n                      {2000 + i}\n                    </div>\n                  ))\n                }\n              </div>\n              <div className='mr-3'>\n                {\n                  [...Array(5).keys()].map(i => endYear - 4 + i).map(i => (\n                    <div key={i} className={classNames(\"color-legend\", { \"inactive\": i > year })}\n                      onClick={() => setYear(i)}\n                    >\n                      <div className=\"color-bullet\"\n                        style={{ backgroundColor: d3.schemeTableau10[(i + 6) % 10] }}></div>\n                      {2000 + i}\n                    </div>\n                  ))\n                }\n                <div style={{ marginBottom: \"0.2em\" }}>\n                  <FontAwesomeIcon\n                    onClick={() => setEndYear((endYear) => Math.min(++endYear, MAX_YEAR))}\n                    style={endYear === MAX_YEAR ? { opacity: 0.5 } : { cursor: \"pointer\" }}\n                    icon={faArrowDown}\n                    size=\"sm\" />\n                </div>\n              </div>\n\n            </div>\n            <h4>Insígnias</h4>\n            <div className=\"mr-auto mt-3\">\n              {\n                Object.entries(organizations).map(([key, org]) => (\n                  <div key={key} className={classNames(\"insignia\", { \"inactive\": insignias.length !== 0 && !insignias.includes(key) })}\n                    onClick={() => toggleInsignias(key)}>\n                    <img src={org.insignia} />\n                    <div>{org.name}</div>\n                  </div>\n                ))\n              }\n            </div>\n            <h4>Nomes</h4>\n            <div className=\"mt-3\">\n              <div className=\"mb-2\"\n                style={{ fontWeight: 300, opacity: 0.7, textDecoration: \"line-through\", cursor: \"default\" }}\n              >\n                Mostrar apelidos\n              </div>\n              <div className=\"mb-2\"\n                style={{ fontWeight: fainaNames ? 400 : 300, opacity: fainaNames ? 1 : 0.7, cursor: \"pointer\" }}\n                onClick={toggeFainaNames}\n              >\n                Mostrar nomes de faina\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <svg className=\"treeei\">\n        <defs>\n          <marker id=\"dot\" viewBox=\"0,0,20,20\" refX=\"10\" refY=\"10\" markerWidth=\"10\" markerHeight=\"10\">\n            <circle cx=\"10\" cy=\"10\" r=\"4\" fill=\"silver\"></circle>\n          </marker>\n          <filter id=\"drop-shadow2\" height=\"130%\">\n            <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"5\" result=\"blur\"></feGaussianBlur>\n            <feOffset in=\"blur\" dx=\"5\" dy=\"5\" result=\"offsetBlur\"></feOffset>\n            <feMerge>\n              <feMergeNode in=\"offsetBlur\"></feMergeNode>\n              <feMergeNode in=\"SourceGraphic\"></feMergeNode>\n            </feMerge>\n          </filter>\n          <filter id=\"drop-shadow\" filterUnits=\"userSpaceOnUse\" width=\"250%\" height=\"250%\">\n            <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"2\" result=\"blur-out\"></feGaussianBlur>\n            {/* <feColorMatrix in=\"blur-out\" type=\"hueRotate\" values=\"180\" result=\"color-out\"></feColorMatrix> */}\n            <feOffset in=\"color-out\" dx=\"1\" dy=\"1\" result=\"the-shadow\"></feOffset>\n            <feOffset in=\"color-out\" dx=\"-1\" dy=\"-1\" result=\"the-shadow\"></feOffset>\n            <feBlend in=\"SourceGraphic\" in2=\"the-shadow\" mode=\"normal\"></feBlend>\n          </filter>\n          <pattern id=\"default_male\" width=\"1\" height=\"1\" patternContentUnits=\"objectBoundingBox\">\n            <image xlinkHref={malePic} height=\"1\" width=\"1\" preserveAspectRatio=\"xMinYMin slice\"></image>\n          </pattern>\n          <pattern id=\"default_female\" width=\"1\" height=\"1\" patternContentUnits=\"objectBoundingBox\">\n            <image xlinkHref={femalePic} height=\"1\" width=\"1\" preserveAspectRatio=\"xMinYMin slice\"></image>\n          </pattern>\n          <pattern id=\"nei\" width=\"1\" height=\"1\" patternContentUnits=\"objectBoundingBox\">\n            <image xlinkHref={nei} height=\"1\" width=\"1\" preserveAspectRatio=\"xMinYMin slice\"></image>\n          </pattern>\n          <pattern id=\"aettua\" width=\"1\" height=\"1\" patternContentUnits=\"objectBoundingBox\">\n            <image xlinkHref={aettua} height=\"1\" width=\"1\" preserveAspectRatio=\"xMinYMin slice\"></image>\n          </pattern>\n          <pattern id=\"cf\" width=\"1\" height=\"1\" patternContentUnits=\"objectBoundingBox\">\n            <image xlinkHref={anzol} height=\"1\" width=\"1\" preserveAspectRatio=\"xMinYMin slice\"></image>\n          </pattern>\n          <pattern id=\"cs\" width=\"1\" height=\"1\" patternContentUnits=\"objectBoundingBox\">\n            <image xlinkHref={sal} height=\"1\" width=\"1\" preserveAspectRatio=\"xMinYMin slice\"></image>\n          </pattern>\n          <pattern id=\"escrivao\" width=\"1\" height=\"1\" patternContentUnits=\"objectBoundingBox\">\n            <image xlinkHref={rol} height=\"1\" width=\"1\" preserveAspectRatio=\"xMinYMin slice\"></image>\n          </pattern>\n          <pattern id=\"pescador\" width=\"1\" height=\"1\" patternContentUnits=\"objectBoundingBox\">\n            <image xlinkHref={lenco} height=\"1\" width=\"1\" preserveAspectRatio=\"xMinYMin slice\"></image>\n          </pattern>\n          <pattern id=\"salgado\" width=\"1\" height=\"1\" patternContentUnits=\"objectBoundingBox\">\n            <image xlinkHref={pa} height=\"1\" width=\"1\" preserveAspectRatio=\"xMinYMin slice\"></image>\n          </pattern>\n        </defs>\n      </svg>\n    </div>\n  )\n}\n\nexport default FainaTree;\n","/home/joao/Documents/Website/src/Components/Tabs/index.js",["365","366"],"import React, { useEffect, useState } from \"react\";\nimport {Button} from 'react-bootstrap'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Tab from './Tab/index.js'\n\nimport \"./index.css\"\n\n/*\nTabs é um componente em que é um \"pseudo navbar\" para acessar um conjunto de valores, dado em um array.\n\nProps:\ntabs -> array que contém os valores das quais queres navegar.\n_default -> valor que começa selecionado.\nonChange -> função setState que altera o valor de um state.\n\n*/\n\nconst Tabs = ({tabs, _default, onChange}) => {\n\n    const [selectedElement, setSelectedElement] = useState(null);\n\n    const tab = tabs.map(tab => <Tab func={onChange} val={tab} \n        selectedElement={selectedElement} update={setSelectedElement}/>)\n    \n    useEffect(() => {\n        setSelectedElement(_default)\n    }, [_default])\n    \n\n    return (\n        <Container className=\"tab-container\">\n            <Row className=\"justify-content-center\">\n                {tab}\n            </Row>\n        </Container>\n    )\n}\n\nexport default Tabs;","/home/joao/Documents/Website/src/Components/TextList/index.js",["367","368"],"import React from \"react\"\nimport { Container, Row, Col } from 'react-bootstrap';\nimport \"./index.css\"\n\n/*\nTextList: literalmente um prop para facilitar impressões de uma lista de nomes :)\nÉ suposto ser utilizado dentro de um map para cada nome, para assim ficar na formatação igual ao do site.\n\nProps:\ntext -> nome\n\n*/\n\nconst TextList = ({colSize,text}) => {\n    return (\n        <Col lg={colSize} className=\"text-center\" style={{textAlign: \"center\"}}>\n            <div className=\"colName\">\n                {text.toUpperCase()}\n            </div>\n        </Col>\n    )\n}\n\nexport default TextList","/home/joao/Documents/Website/src/Pages/Team/Components/Person.js",["369","370"],"import React from 'react';\n\n\nimport Image from 'react-bootstrap/Image';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport \"./Person.css\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons'\n\n\nconst Logo = process.env.PUBLIC_URL + \"/linkedingLogo.png\";\n\n\nconst Person = ({img,name,description,linke, className, style}) => {\n    return (\n        <div>\n            { \n            <Container className={className} style={style}>\n                <Col className=\"mx-auto\" style={{textAlign: \"center\", marginBottom: 40}}>\n                    <Image src={img} roundedCircle style={{width: 200, marginBottom: 20}}/>\n                    <h3>{name}</h3>\n                    <p>{description.toUpperCase()}</p>\n                    {\n                    linke && \n                    <a id=\"linke\" href={linke} target=\"_blank\" rel=\"noreferrer\">\n                        <FontAwesomeIcon id=\"linke\" icon={ faLinkedin } size=\"2x\"/>\n                    </a>\n                    }\n                </Col>\n            </Container>\n            }\n        </div>\n    )\n}\n\nexport default Person;","/home/joao/Documents/Website/src/Layouts/backgroundconfig.js",[],"/home/joao/Documents/Website/src/Pages/Homepage/terminalconf.js",["371","372"],"import { CommandMapping, EmulatorState, FileSystem, OutputFactory, defaultCommandMapping, Outputs, hasFile } from \"javascript-terminal\";\n\n// TODO: update prompt with current working directory,\n//       more easter eggs\n\n\nconst defaultState = EmulatorState.createEmpty();\n    const defaultOutputs = defaultState.getOutputs();\n\n    const newOutputs = Outputs.addRecord(\n      defaultOutputs, OutputFactory.makeTextOutput(\n        \"Welcome to the hacker zone! \"\n      )\n    );\n\n\nconst terminalstate = EmulatorState.create(\n    {\n        'commandMapping': CommandMapping.create(\n            {\n                \"tester\": {\n                    'function': (state, inpt) => {\n                        localStorage.setItem(\"tester\", 1);\n                        return {\n                            output: OutputFactory.makeTextOutput(\"refresh the page and check the new features\")\n                        };\n                    },\n                    'optDef': {}\n                },\n                \"ls\": defaultCommandMapping.ls,\n                \"cd\": defaultCommandMapping.cd,\n                \"cat\": defaultCommandMapping.cat,\n                \"mkdir\": defaultCommandMapping.mkdir,\n                \"rmdir\": defaultCommandMapping.rmdir,\n                \"echo\": defaultCommandMapping.echo,\n                \"pwd\": defaultCommandMapping.pwd,\n                \"clear\": defaultCommandMapping.clear,\n                \"touch\": defaultCommandMapping.touch,\n                \"cp\": defaultCommandMapping.cp,\n                \"whoami\": {\n                    'function': (state, inpt) => {\n                        return {\n                            output: OutputFactory.makeTextOutput(\"nei-os\")\n                        };\n                    },\n                    'optDef': {}\n                },\n                \"rm\": {\n                    'function': (state, inpt) => {\n                        if (inpt.length == 2 && inpt.includes(\"-r\") && inpt.includes(\"/\")) {\n\n                            var root = document.getElementById(\"root\");\n                            root.innerHTML = \"Uh oh!<br/>What have you done!?\";\n                            root.style.height = \"100vw\";\n                            root.style.backgroundColor = \"black\";\n                            root.style.color = \"white\";\n                            root.style.fontFamily = \"monospace\";\n\n                            return {\n                                output: OutputFactory.makeTextOutput(\"oops, site is dead (TODO)\")\n                            };\n                        }\n                        else\n                            return defaultCommandMapping.rm.function(state, inpt);\n                    },\n                    'optDef': defaultCommandMapping.rm.optDef\n                },\n                \"./pimpneiwebsite.bin\": {\n                    'function': (state, inpt) => {\n                        \n                        // TODO: check if working directory is '/public/programs'\n                        // TODO: mudar partículas do fundo para something silly tipo ඞ\n\n                        /* //a minha tentativa de verificar o working directory,\n                           //por alguma razão retorna no terminal o erro \"emulator: Unhandled command error\"\n                        console.log(state.getFileSystem())\n                        let out = \"\";\n\n                        if (hasFile(state.getFileSystem(), \"./pimpneiwebsite.bin\")) {\n                            var root = document.getElementById(\"root\");\n                            root.style.fontFamily = \"'Comic Sans MS', fantasy\";\n                            root.style.color = \"deeppink\";\n                            out =\"cool mode activated B)\";\n                        }\n                        else {\n                            out = \"File not found\";\n                        }\n\n                        return {\n                            output: OutputFactory.makeTextOutput(out)\n                        };\n                        */\n\n                        var root = document.getElementById(\"root\");\n                        root.style.fontFamily = \"'Comic Sans MS', fantasy\";\n                        root.style.color = \"deeppink\";\n\n                        return {\n                            output: OutputFactory.makeTextOutput(\"cool mode activated B)\")\n                        };\n                    },\n                    'optDef': {\n                        '-t, --test': \"\",\n                        '-l': \"\"\n                    }\n                }\n            }\n        ),\n\n        'fs': FileSystem.create(\n            {\n                '/': {},\n                '/README.md': {content: \"Welcome to the NEI website!\\nCheck back in the future for some hidden secrets!\"},\n                '/public/file1': {content: \"easter egg\"},\n                '/public/file2': {content: \"christmas egg\"},\n                '/public/important': {content: \"01010010 01101001 01100011 01101011\\n00100000 01010010 01101111 01101100\\n01101100 00111010 00100000 01101000\\n01110100 01110100 01110000 01110011\\n00111010 00101111 00101111 01110111\\n01110111 01110111 00101110 01111001\\n01101111 01110101 01110100 01110101\\n01100010 01100101 00101110 01100011\\n01101111 01101101 00101111 01110111\\n01100001 01110100 01100011 01101000\\n00111111 01110110 00111101 01111001\\n01010000 01011001 01011010 01110000\\n01110111 01010011 01110000 01001011\\n01101101 01000001\"},\n                '/public/pimpneiwebsite.bin': {content: \"Cannot read file\"},\n                '/.hidden/.secrets': {content: \"Excel is a database\"},\n                '/.hidden/.confidential': {content: \"Access Denied\\nThe authorities have been notified.\"}\n            }\n        ),\n\n        'outputs': newOutputs\n    }\n)\n\nexport default terminalstate;","/home/joao/Documents/Website/src/Pages/Apontamentos/filters.js",[],"/home/joao/Documents/Website/src/Components/Tabs/Tab/index.js",["373","374","375","376"],"import React from 'react';\nimport {Button} from 'react-bootstrap'\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport \"./index.css\"\n\n/*\nTab é um componente em que é um \"pseudo navbar\" para acessar um conjunto de valores, dado em um array.\n\n\n*/\n\n\nconst Tab = ({val, func, selectedElement, update}) => {\n    //console.log(\"selEl = \"+selectedElement);\n    //console.log(\"val = \"+val);\n    return (\n            <div className={val == selectedElement ? \"selected\" : \"\"}>\n                <Col xs={12} lg={12} className=\"tabDiv\">\n                    <p className=\"tabItem\" \n                    onClick={(el) =>{ func(val); update(val)}}>{val}</p>\n                </Col>\n            </div>\n    )\n}\n\nexport default Tab;","/home/joao/Documents/Website/src/Components/Footer/index.js",["377","378","379"],"import React from \"react\";\n\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faFacebookSquare, faInstagram, faYoutube } from '@fortawesome/free-brands-svg-icons';\n\nimport \"./index.css\";\n\nconst Footer = () => {\n    return (\n        <div id=\"footer\" className=\"d-flex flew-row col-11 col-sm-10 col-xxl-9 mx-auto text-secondary\">\n            <div className=\"footer-links\">\n                <a href=\"https://www.facebook.com/nei.aauav\" target=\"_blank\" className=\"text-secondary\">\n                    <FontAwesomeIcon icon={ faFacebookSquare } size=\"lg\"/>\n                </a>\n                <a href=\"https://www.instagram.com/nei.aauav/\" target=\"_blank\" className=\"text-secondary\">\n                    <FontAwesomeIcon icon={ faInstagram } size=\"lg\"/>\n                </a>\n                <a href=\"https://www.youtube.com/channel/UCfvCzdDn0o-avwBSayqrQog/featured\" target=\"_blank\" className=\"text-secondary\">\n                    <FontAwesomeIcon icon={ faYoutube } size=\"lg\"/>\n                </a>\n            </div>\n            <div className=\"footer-copyright\">\n                &copy; 2021, NEI-AAUAV\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","/home/joao/Documents/Website/src/Pages/News/NewsList/index.js",["380"],"import React from \"react\";\nimport ImageCard from \"../../../Components/ImageCard\"\nimport { Col, Row } from \"react-bootstrap\"\n\n/* Show list of news in cards\n**\n** Props:\n** - news: the news list\n** - loading: is the page still loading\n*/\nconst NewsList = (props) => {\n    var key = 1;\n    var animKey = 0;\n\n    return (\n        <Row>\n            {\n                props.news.length == 0 &&\n                <Col sm={12}>\n                    <h3 className=\"text-center mt-3\">Nenhuma notícia encontrada</h3>\n                    <h4 className=\"text-center\">Tenta definir filtros menos restritivos</h4>\n                </Col>\n            }\n            {\n                props.news.map(article => {\n                    return (\n                        <Col lg={4} md={6} sm={12} key={key++}>\n                            <ImageCard\n                                image={process.env.REACT_APP_STATIC + article.header}\n                                title={article.title}\n                                preTitle={article.category}\n                                text={article.created_at}\n                                anchor={\"/noticia/\" + article.id}\n                                animKey={animKey++}\n                            ></ImageCard>\n                        </Col>\n                    );\n                })}\n        </Row>\n    );\n}\n\nexport default NewsList;","/home/joao/Documents/Website/src/Components/PageNav/index.js",["381","382","383","384","385","386","387","388","389"],"import React,  {useState, useEffect} from \"react\";\nimport { Pagination, Nav } from \"react-bootstrap\";\nimport \"./index.css\";\n\n/* A pagination bar, as seen in https://react-bootstrap.github.io/components/pagination/\n** \n** ATTENTION! This component is 1-based index (first index is 1)!\n**\n** Props:\n** - page: current active page\n** - total: total number of pages\n** - handler: function to call with onClick, argument given is new page number\n*/\nconst PageNav = ({className, ...props}) => {\n\n    // pass correct number to handler function\n    const handlePage = (e) => {\n        if (e.target.attributes.value == undefined)\n            var val = e.target.parentElement.attributes.value.value;\n        else\n            var val = e.target.attributes.value.value;\n\n        if (val == \"prev\")\n            props.handler(props.page-1);\n        else if (val == \"next\")\n            props.handler(props.page/1 +1);\n        else\n            props.handler(val);\n    }\n\n    // create each numbered page button\n    const [pages, setPages] = useState([]);\n\n    useEffect(() => {\n        const pagesArray = [];\n        if (props.total<5) {\n            for (let i = 1; i <= props.total; i++) {\n                pagesArray.push(i);\n            }\n        } else {\n            // 1 2 3 ...  X\n            if (props.page<=2) {\n                for (let i=1; i<=3; i++) {\n                    pagesArray.push(i);\n                }\n                pagesArray.push(-1);\n                pagesArray.push(props.total);\n            // 1 ...  X-2 X-1 X\n            } else if (props.page>=props.total-1) {\n                pagesArray.push(1);\n                pagesArray.push(-1);\n                for (let i=props.total-2; i<=props.total; i++) {\n                    pagesArray.push(i);\n                }\n            // ... X-1 X X+1 ...\n            } else {\n                let currentpage = parseInt(props.page);\n                pagesArray.push(-1);\n                pagesArray.push(currentpage-1);\n                pagesArray.push(currentpage);\n                pagesArray.push(currentpage+1);\n                pagesArray.push(-1);\n            }\n        }\n        setPages(pagesArray);\n    }, [props.total, props.page]);\n    \n    return(\n        <Nav className={className}>\n            <Pagination className=\"mx-auto mx-lg-0 ml-lg-auto mr-0\">\n                <Pagination.First onClick={handlePage} value={1} disabled={props.page == 1} />\n                <Pagination.Prev  onClick={handlePage} value=\"prev\" disabled={props.page == 1} />\n\n                {\n                // Not sure how to render this yet, so keeping the condition false for now\n                false &&\n                <Pagination.Ellipsis />\n                }\n                \n                {\n                    pages.map(\n                        page =>\n                        page>=1 \n                        ?\n                        <Pagination.Item onClick={handlePage} active={page == props.page} value={page} key={page}>\n                            {page}\n                        </Pagination.Item>\n                        :\n                        <Pagination.Ellipsis />\n                    )\n                }\n\n                {\n                // Not sure how to render this yet, so keeping the condition false for now\n                false &&\n                <Pagination.Ellipsis />\n                }\n\n                <Pagination.Next onClick={handlePage} value=\"next\" disabled={props.page == props.total}/>\n                <Pagination.Last onClick={handlePage} value={props.total} disabled={props.page == props.total}/>\n            </Pagination>\n        </Nav>\n    );\n};\n\nexport default PageNav;","/home/joao/Documents/Website/src/Components/Navbar/index.js",["390"],"import React, { useState, useEffect } from \"react\";\n\nimport {\n    Navbar as BNavbar,\n    Nav,\n    NavDropdown\n} from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nimport data from \"./data\";\nimport logo from './logo.png';\nimport \"./index.css\";\n\nconst Navbar = () => {\n\n    const [transparent, setTransparent] = useState(true);\n    const [collapsed, setCollapsed] = useState(false);\n\n    // On scrool, make bg white\n    useEffect(() => {\n        window.addEventListener('scroll', (event) => {\n            // Get scroll position\n            if (window.pageYOffset > 20) {\n                setTransparent(false);\n            } else {\n                setTransparent(true);\n            }\n        });\n    }, []);\n\n    return (\n        <div className={transparent ? \"navbardiv col-12 p-0 position-fixed bg-transparent\" : \"navbardiv col-12 p-0 position-fixed bg-white\"}>\n            <BNavbar\n                bg=\"transparent\"\n                expand=\"lg\"\n                className=\"px-0 col-11 col-sm-10 col-xxl-9 mx-auto\"\n                onToggle={(col) => setCollapsed(col)}\n            >\n                <BNavbar.Brand href=\"/\">\n                    <img\n                        src={logo}\n                        width=\"75\"\n                        height=\"75\"\n                        className=\"d-inline-block align-top mr-5\"\n                        alt=\"NEI\"\n                    />\n                </BNavbar.Brand>\n                <BNavbar.Toggle aria-controls=\"basic-BNavbar-nav\">\n                    <div\n                        className={collapsed ? \"hamburguer open\" : \"hamburguer\"}\n                    >\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                        <span></span>\n                    </div>\n                </BNavbar.Toggle>\n                <BNavbar.Collapse id=\"basic-BNavbar-nav\" className=\"bg-white small font-weight-bold\">\n                    <Nav className=\"mr-auto\">\n                        {\n                            data.filter(d => d).map(\n                                navEl =>\n                                    !navEl.dropdown\n                                        ?\n                                        <Nav.Link\n                                            as={Link}\n                                            to={navEl.link}\n                                            className={\n                                                window.location.pathname == navEl.link ? \"active\" : \"\"\n                                            }\n                                            target={navEl.external && \"_blank\"}\n                                            rel={navEl.external && \"noreferrer\"}\n                                        >\n                                            {navEl.name}\n                                        </Nav.Link>\n                                        :\n                                        <NavDropdown title={navEl.name} id={\"dropdown-\" + navEl.name.replace(\" \", \"\")}>\n                                            {\n                                                navEl.dropdown.filter(d => d).map(\n                                                    dropdown =>\n                                                        <NavDropdown.Item\n                                                            {...(dropdown.external ? { href: dropdown.link } : { as: Link, to: dropdown.link })}\n                                                            target={dropdown.external && \"_blank\"}\n                                                            rel={dropdown.external && \"noreferrer\"}\n                                                        >{dropdown.name}\n                                                        </NavDropdown.Item>\n                                                )\n                                            }\n                                        </NavDropdown>\n                            )\n                        }\n                    </Nav>\n                </BNavbar.Collapse>\n            </BNavbar>\n        </div>\n    );\n\n}\n\nexport default Navbar;","/home/joao/Documents/Website/src/Pages/History/Timeline/index.js",[],"/home/joao/Documents/Website/src/Pages/Seniors/SeniorsCard/index.js",[],"/home/joao/Documents/Website/src/Components/Document/index.js",["391","392","393"],"import React from \"react\";\n\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faFilePdf } from '@fortawesome/free-solid-svg-icons';\n\nimport \"./index.css\";\n\n/**\n * Component for document\n * \n * Arguments\n *  name            File name\n *  description     File description\n *  link            Link for file (without base URL)\n *  blank           Open link in new tab?\n *  className       Extra classes                   (Optional)\n *  icon            Icon component                  (Optional, default PDF)\n * iconColor        Icon color                      (Optional, default .text-primary)\n *  size            Icon size                       (Optional, default 3x)\n *  onClick         on click event handler          (Optional)\n *  title           title attribute                 (Optional)\n *  tags            pills {name: str, color: str, className: str} (Optional)\n *  image           A banner                        (Optional)\n *                  NOTE: Make sure all images have the same dimensions, otherwise the cards won't be aligned!\n *  style (Optional)\n */\nconst Document = ({name, description, link, blank, className, icon, size, onClick, title, tags, style, image, iconColor}) => {\n    \n    \n\n    return (\n        <a \n            href={link && link} \n            target={blank ? \"_blank\" : \"_self\"}\n            rel={blank ? \"noreferrer\" : \"\"}\n            title=\"Descarregar ficheiro\"\n            onClick={onClick}\n            title={title ? title : \"\"}\n            style={style}\n            className={\"m-0 p-0 document-container \" + className}\n        >\n            <div className=\"document\">\n                {\n                    image &&\n                    <img src={image} className=\"w-100\"/>\n                }\n                <div\n                    className={\"d-flex text-left p-3 \"}\n                >\n                    <FontAwesomeIcon \n                        className={iconColor ? \"mr-3\" : \"text-primary mr-3\"} \n                        icon={ icon ? icon : faFilePdf } \n                        size={size ? size : \"3x\"}\n                        style={iconColor ? {color: iconColor} : {}}\n                    />\n                    <div>\n                        <h4 className=\"mb-0 text-dark break-all\">{name}</h4>\n                        <p className=\"small text-secondary mb-0\" dangerouslySetInnerHTML={{__html: description}}></p>\n                        <div className=\"row mx-0 mt-1\">\n                            {\n                                tags && tags.map(\n                                    tag =>\n                                    <span \n                                        className={\"ml-0 mb-1 mr-1 badge badge-pill \" + tag.className}\n                                        style={tag.color ? {backgroundColor: tag.color} : {}}\n                                    >{tag.name}</span>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </a>\n    );\n}\n\nexport default Document;","/home/joao/Documents/Website/src/Components/ImageCard/index.js",["394"],"import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport './index.css';\n\nconst ImageCard = (props) => {\n    /* Prop list:\n    **  preTitle (optional): plain text on top\n    **  title: large colored anchor text in middle\n    **  text: plain text on bottom\n    **  image: card image\n    **  anchor: link associated with image and title\n    **  darkMode (optional): set to a non-false value (e.g. \"on\" or True) to use a dark color scheme\n    **  animKey (optional): integer that increases delay on entrance animation\n    */\n\n    var color_class = \"\";\n    if (props.darkMode) {\n        color_class = \" dark\"\n    }\n\n    return(\n        <Card\n            className={\"text-center mb-5 image-card animation\" + color_class}\n            style={{animationDelay: props.animKey ? props.animKey*0.2+\"s\" : \"0\"}}\n        >\n            {\n                props.image &&\n                <a href={props.anchor}>\n                    <Card.Img variant=\"top img-fluid\" src={props.image} />\n                </a>\n            }\n\n            <div className={\"plus-button\" + color_class}>\n                <span><a href={props.anchor} target=\"_blank\">+</a></span>\n            </div>\n\n            <Card.Body className={color_class}>\n                {props.preTitle && <p className=\"mb-4\">{props.preTitle}</p> }\n                <Card.Title><a href={props.anchor}>{props.title}</a></Card.Title>\n                <Card.Text><small>{props.text}</small></Card.Text>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default ImageCard;","/home/joao/Documents/Website/src/Components/Filters/index.js",["395","396","397"],"import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport FilterButton from \"./FilterButton\";\n\n/**\n * Filter pills\n * \n * Parameters:\n * - filterList                 obj[]   List of available filters\n *                              { 'filter': key:str, 'color': colorCodeDefault:str, 'hover': colorCodeHover:str }\n *                                          filter: Filter name (required)\n *                                          color: Normal color (optional, if missing .primary will be applied)\n * - className                  str     class text for parent element\n * - style                      obj     styles for parent element\n * - activeFilters                      see FilterButton doc \n * - setActiveFilters                   see FilterButton doc\n */\nconst Filters = ({activeFilters, setActiveFilters, filterList, className, btnClass, allBtnClass, style}) => {\n\n    const [toggleText, setToggleText] = useState(\"Nenhum\");\n\n    // update toggle button text\n    useEffect( () => {\n        if (activeFilters.length == filterList.length)\n            setToggleText(\"Nenhumas\");\n        else\n            setToggleText(\"Todas\");\n    }, [activeFilters]);\n\n    // unselect all filters if all are selected, otherwise select all of them\n    const toggleAll = () => {\n        if (activeFilters.length == filterList.length)\n            setActiveFilters([]);\n        else\n            setActiveFilters(filterList.map(f => f['filter']));\n    };\n\n    return (\n        <div \n            className={className}\n            style={style}\n        >\n            {\n                filterList.length > 1 &&\n                <Button variant={\"outline-primary \" + btnClass} className={allBtnClass + \" p-2\"} onClick={toggleAll}>\n                    {toggleText}\n                </Button>\n            }\n\n            {\n                filterList.map( f => \n                    <FilterButton\n                        filter={f} \n                        setActiveFilters={setActiveFilters}\n                        activeFilters={activeFilters}\n                        btnClass={btnClass + \" \" + allBtnClass}\n                    />\n                )\n            }\n        </div>\n    );\n}\n\nexport default Filters;","/home/joao/Documents/Website/src/Pages/Calendar/NEICalendar/index.js",["398","399","400","401","402","403","404","405","406"],"import React, {useState, useEffect} from \"react\";\nimport {\n    Calendar as ReactCalendar,\n    momentLocalizer\n} from 'react-big-calendar';\nimport moment from 'moment';\nimport NEIAgenda from \"./NEIAgenda\";\nimport {eventStyleGetter, tooltipAcessor, zeroPad, dayString, months, categories as categoriesTypes} from \"./helpers\";\nimport \"./index.css\";\n\nrequire('moment/locale/pt.js');\n\n// COMPONENT\nconst NEICalendar = ({style, className, selection, setInitialCategories}) => {\n    \n    // State\n    const [events, setEvents] = useState([]);\n    const [calendarSince, setCalendarSince] = useState(null);\n    const [calendarTo, setCalendarTo] = useState(null);\n\n    // On render, initialize calendarSince and calendarTo based on current moment\n    // Also initialize categories\n    useEffect(() => {\n        timespanChanged(new Date());\n        setInitialCategories(Object.entries(categoriesTypes).map(([key, val]) => {\n            return {\n                'filter': key,\n                'color': val['color'],\n                'hover': val['hover']\n            }\n        }));\n    }, []);\n\n    // Get events from API on render (and every time selection or time span changes)\n    useEffect(() => {\n        if(calendarSince!=null && calendarTo!=null) {\n            const tmin = `${calendarSince.getFullYear()}-${calendarSince.getMonth()+1}-${calendarSince.getDate()}T00%3A00%3A00%2B01%3A00`;\n            const tmax = `${calendarTo.getFullYear()}-${calendarTo.getMonth()+1}-${calendarTo.getDate()}T00%3A00%3A00%2B01%3A00`;\n            fetch(`https://www.googleapis.com/calendar/v3/calendars/7m2mlm7k1huomjeaa45gbhog0k%40group.calendar.google.com/events?key=AIzaSyDnT8fO6ARjx3OxMJCimhenNDLTkGuOmjE&timeMin=${tmin}&timeMax=${tmax}&singleEvents=true&maxResults=9999`)\n                .then(res => res.json())\n                .then(json => {\n                    let apiEvents = [];\n                    json['items'].forEach(e => {\n                        // Check that event matches selection\n                        let matchAny = false;\n                        let matchSelected = false;\n                        Object.entries(categoriesTypes).forEach(([key, c]) => {\n                            c['filters'].forEach(f => {\n                                if(e['summary'].toLowerCase().indexOf(f.toLowerCase())>=0) {\n                                    matchAny=true;\n                                    matchSelected = selection.indexOf(key)>=0;\n                                }\n                            });\n                        });\n                        // It must match any filter, if not, is considered NEI event (default) and to be showed NEI must be in selection\n                        if(matchSelected==false && (matchAny && selection.indexOf('NEI')>=0 || selection.indexOf('NEI')<0)) {\n                            return;\n                        }\n                        // If so, compute object to add to events list\n                        const start = 'date' in e['start'] ? e['start']['date'] : e['start']['dateTime'];\n                        let end = 'date' in e['end'] ? e['end']['date'] : e['end']['dateTime'];\n                        if ('date' in e['end']) {\n                            let endDate = new Date(end);\n                            endDate = endDate.setDate(endDate.getDate()-1);\n                            end = endDate;\n                        }\n                        apiEvents.push({\n                            'id': e['id'],\n                            'title': e['summary'],\n                            'start': new Date(start),\n                            'end': new Date(end),\n                            'allDay': 'date' in e['start']\n                        });\n                    });\n                    setEvents(apiEvents);\n                });\n        }\n    }, [selection, calendarSince, calendarTo]);\n\n    // On navigate, update next and prev moments and recall API\n    const timespanChanged = (date) => {\n        let next = new Date(date);\n        let prev = new Date(date);\n\n        if (date.getMonth()==11) {\n            next.setMonth(0);\n            next.setYear(date.getFullYear()+1);\n            prev.setMonth(date.getMonth()-1);\n        } else if (date.getMonth()==0) {\n            next.setMonth(date.getMonth()+1);\n            prev.setMonth(11);\n            prev.setYear(date.getFullYear()-1);\n        } else {\n            next.setMonth(date.getMonth()+1);\n            prev.setMonth(date.getMonth()-1);\n        }\n\n        setCalendarSince(prev);\n        setCalendarTo(next);\n    }\n\n    return (\n        <ReactCalendar\n            popup\n            className={\"col-12 vh-100 \" + className}\n            events={events}\n            views={['month', 'agenda']}\n            step={60}\n            showMultiDayTimes\n            defaultDate={new Date()}\n            eventPropGetter={eventStyleGetter}\n            localizer={momentLocalizer(moment)}\n            onNavigate={(date) => timespanChanged(date)}\n            tooltipAccessor={(event) => tooltipAcessor(event)}\n            components={{\n                agenda: {\n                    event: NEIAgenda\n                }\n            }}\n            messages={{\n                next: \"Próximo\",\n                previous: \"Anterior\",\n                today: \"Hoje\",\n                month: \"Mês\",\n                week: \"Semana\",\n                day: \"Dia\",\n                allDay: \"Todo o dia\"\n            }}\n            style={style}\n        />\n    );\n}\n\nexport default NEICalendar;","/home/joao/Documents/Website/src/Components/Filters/FilterSelect/index.js",["407","408","409","410"],"import React, { useEffect, useState } from \"react\";\nimport { Accordion, Button, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport Filters from \"../\";\n\n/**\n * An accordion for selecting filters\n * \n * Parameters:\n * - filterList                 str[]   List of available filters\n * - children                           components to render in accordion header\n * - activeFilters                      see FilterButton doc \n * - setActiveFilters                   see FilterButton doc\n */\n\nconst FilterSelect = ({children, activeFilters, setActiveFilters, filterList, className, btnClass, listClass, allBtnClass}) => {\n\n    return(\n        <Accordion className={className}>\n            { /* Accordion header,with the toggler button. Can display props.children on the right side. */ }\n            <div className=\"d-flex flex-row justify-content-between flex-wrap mt-4\">\n                <Accordion.Toggle as={Button} variant=\"primary\" className=\"col-12 col-lg-3 col-xl-2 mr-auto mb-3\" eventKey=\"filters\">\n                    Filtros\n                </Accordion.Toggle>\n\n                {children}\n            </div>\n\n            { /* Accordion body, contains list of filter buttons. Starts collapsed. */ }\n            <Accordion.Collapse eventKey=\"filters\">\n                <Filters \n                    activeFilters={activeFilters}\n                    setActiveFilters={setActiveFilters}\n                    filterList={filterList}\n                    btnClass={btnClass}\n                    className={listClass}\n                    allBtnClass={allBtnClass}\n                />\n            </Accordion.Collapse>\n        </Accordion>\n    )\n}\n\nexport default FilterSelect;","/home/joao/Documents/Website/src/Pages/Apontamentos/GridView/index.js",["411","412","413","414","415","416","417","418"],"import React from 'react';\nimport Document from \"../../../Components/Document\";\n\nimport { \n    faFilePdf,\n    faFolder\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {authorNameProcessing, monthsPassed} from '../utils';\n\nconst getIcon = (url) => {\n    if (url.indexOf(\".zip\")>=0) {\n        return faFolder;\n    }\n    return faFilePdf;\n}\n\n// Animation\nconst animationBase = parseFloat(process.env.REACT_APP_ANIMATION_BASE);\nconst animationIncrement = parseFloat(process.env.REACT_APP_ANIMATION_INCREMENT);\n\nconst GridView = ({data, setSelected}) => {\n    \n    return(\n        <div className=\"d-flex flex-row flex-wrap col-12 mx-0 p-0\">\n            {\n                data.map(\n                    (apontamento, i) => \n                    <Document\n                        name={apontamento.name}\n                        description={\n                            apontamento.authorName \n                                ? \n                                apontamento.subjectName + \"<br/>por \" + authorNameProcessing(apontamento.authorName)\n                                : \n                                apontamento.subjectName\n                        }\n                        className=\"col-xl-4 link slideUpFade\"\n                        style={{animationDelay: (animationBase + (i*animationIncrement)) + \"s\"}}\n                        size=\"2x\"\n                        icon={apontamento.type_icon_display.split(\" \")}\n                        onClick={() => setSelected(apontamento)}\n                        title=\"Detalhes\"\n                        tags={(() => {\n                            var tags = [];\n                            monthsPassed(new Date(apontamento.createdAt)) < 3 && tags.push({\"name\": \"Novo!\", \"className\": \"tag-new\"});\n                            apontamento.summary==\"1\" && tags.push({\"name\": \"Resumos\", \"className\": \"tag-summary\"});\n                            apontamento.tests==\"1\" && tags.push({\"name\": \"Testes e exames\", \"className\": \"tag-tests\"});\n                            apontamento.bibliography==\"1\" && tags.push({\"name\": \"Bibliografia\", \"className\": \"tag-biblio\"});\n                            apontamento.slides==\"1\" && tags.push({\"name\": \"Slides\", \"className\": \"tag-slides\"});\n                            apontamento.exercises==\"1\" && tags.push({\"name\": \"Exercícios\", \"className\": \"tag-exercises\"});\n                            apontamento.projects==\"1\" && tags.push({\"name\": \"Projetos\", \"className\": \"tag-projects\"});\n                            apontamento.notebook==\"1\" && tags.push({\"name\": \"Caderno\", \"className\": \"tag-notebook\"});\n                            return tags;\n                        })()}\n                    />\n                )\n            }\n        </div>\n    );\n}\n\nexport default GridView;","/home/joao/Documents/Website/src/Components/YoutubeEmbed/index.js",[],"/home/joao/Documents/Website/src/Pages/Apontamentos/Details/index.js",["419","420","421","422","423","424","425","426","427"],"import React, {useState, useEffect} from \"react\";\nimport { Spinner, Nav, Tab } from \"react-bootstrap\";\nimport './index.css';\n\nimport parse from 'html-react-parser';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle, faFilter, faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons';\n\nfunction titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        // You do not need to check if i is larger than splitStr length, as your for does that for you\n        // Assign it back to the array\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    // Directly return the joined string\n    return splitStr.join(' ');\n}\n\nconst Details = ({ note_id, close, setSelectedSubject, setSelYear, setSelStudent, setSelTeacher, setSelPage, className, setAlert }) => {\n\n    const [loading, setLoading] = useState(true);\n    const [note, setNote] = useState(null);\n    const [tags, setTags] = useState([]);\n\n    useEffect(() => {\n        setLoading(true);\n\n        // Get note data from API when component loads\n        fetch(process.env.REACT_APP_API + \"/notes/?note=\" + note_id)\n                .then((response) => {\n                    if (!response.ok) {throw new Error(response.status)}\n                    return response.json();\n                })\n                .then((response) => {\n                    if ('data' in response && response['data']) {\n                        setNote(response.data);\n                    } else {\n                        throw new Error('Note not found!');\n                    }\n                })\n                .catch((error) => {\n                    console.log(\"Error getting note:\", note_id, error);\n                    setAlert({\n                        'type': 'alert',\n                        'text': 'Ocorreu um erro ao obter os dados do apontamento que selecionaste. Por favor tenta novamente.'\n                    });\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n    }, [note_id]);\n\n    useEffect(() => {\n        var note_tags = [];\n        if (note) {\n            note.summary == \"1\" && note_tags.push({ \"name\": \"Resumos\", \"className\": \"tag-summary\" });\n            note.tests == \"1\" && note_tags.push({ \"name\": \"Testes e exames\", \"className\": \"tag-tests\" });\n            note.bibliography == \"1\" && note_tags.push({ \"name\": \"Bibliografia\", \"className\": \"tag-biblio\" });\n            note.slides == \"1\" && note_tags.push({ \"name\": \"Slides\", \"className\": \"tag-slides\" });\n            note.exercises == \"1\" && note_tags.push({ \"name\": \"Exercícios\", \"className\": \"tag-exercises\" });\n            note.projects == \"1\" && note_tags.push({ \"name\": \"Projetos\", \"className\": \"tag-projects\" });\n            note.notebook == \"1\" && note_tags.push({ \"name\": \"Caderno\", \"className\": \"tag-notebook\" });\n        }\n        setTags(note_tags);\n\n        // Scroll to element\n        if(document.getElementById(\"apontamentosPage\")!=null) {\n            document.getElementById(\"apontamentosPage\").scrollIntoView({behavior: 'smooth'});\n        }\n    }, [note]);\n\n    return (\n        <div className={\"notesDetails bg-white p-3 mb-4 animation d-flex flex-column \" + className}>\n            {\n                loading\n                ? <Spinner animation=\"grow\" variant=\"primary\" className=\"mx-auto mt-3\" title=\"A carregar...\" />\n                : \n                <>\n                    <div className=\"d-flex flex-row\">\n                        <h4 className=\"break-all mr-auto\">{note.name}</h4>\n                        <button\n                            type=\"button\"\n                            className=\"close mb-auto ml-auto\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Close\"\n                            onClick={close}\n                        >\n                            <span aria-hidden=\"true\">×</span>\n                        </button>\n                    </div>\n                    <div className=\"row mx-0 my-3\">\n                        {\n                            tags.map(\n                                tag =>\n                                    <span\n                                        className={\"ml-0 mb-1 mr-1 badge badge-pill \" + tag.className}\n                                    >{tag.name}</span>\n                            )\n                        }\n                    </div>\n                    <a \n                        href={parseInt(note.type_external) ? note.location : process.env.REACT_APP_STATIC + note.location} \n                        target=\"_blank\" rel=\"noreferrer\"\n                        >\n                        <button className=\"btn btn-sm btn-outline-primary mb-3 ml-0\">\n                            <FontAwesomeIcon\n                                icon={note.type_icon_download.split(\" \")}\n                                size={\"1x\"}\n                            />\n                            <span className=\"ml-1\">{note.type_download_caption}</span>\n                        </button>\n                    </a>\n\n                    {\n                        false &&\n                        <Tab.Container defaultActiveKey=\"first\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n                            {\n                                note.content &&\n                                <Nav variant=\"pills\" className=\"flex-row\">\n                                    <Nav.Item>\n                                        <Nav.Link eventKey=\"first\">Detalhes</Nav.Link>\n                                    </Nav.Item>\n                                    <Nav.Item>\n                                        <Nav.Link eventKey=\"second\">Conteúdo</Nav.Link>\n                                    </Nav.Item>\n                                </Nav>\n                            }\n                            <Tab.Content>\n                                <Tab.Pane eventKey=\"first\">\n                                    <h1>Tab1</h1>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey=\"second\">\n                                    <h1>Tab2</h1>\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Tab.Container>\n                    }\n\n                    <div>\n                        <dl>\n                            {\n                                note.yearBegin && note.yearEnd &&\n                                <>\n                                    <dt className=\"small font-weight-bold\">\n                                        <span className=\"mr-1\">Ano letivo</span>\n                                        <FontAwesomeIcon\n                                            className=\"text-primary mr-1 link\"\n                                            icon={faFilter}\n                                            size={\"1x\"}\n                                            title=\"Filtrar por ano letivo\"\n                                            onClick={() => { setSelYear(note.yearId); setSelPage(1) }}\n                                        />\n                                    </dt>\n                                    <dd>{note.yearBegin}/{note.yearEnd}</dd>\n                                </>\n                            }\n                            {\n                                note.subjectName &&\n                                <>\n                                    <dt className=\"small font-weight-bold\">\n                                        <span className=\"mr-1\">Cadeira</span>\n                                        <FontAwesomeIcon\n                                            className=\"text-primary mr-1 link\"\n                                            icon={faFilter}\n                                            size={\"1x\"}\n                                            title=\"Filtrar por cadeira\"\n                                            onClick={() => { setSelectedSubject(note.subjectId); setSelPage(1) }}\n                                        />\n                                    </dt>\n                                    <dd>{note.subjectName}</dd>\n                                </>\n                            }\n                            {\n                                note.authorName &&\n                                <>\n                                    <dt className=\"small font-weight-bold\">\n                                        <span className=\"mr-1\">Autor</span>\n                                        <FontAwesomeIcon\n                                            className=\"text-primary mr-1 link\"\n                                            icon={faFilter}\n                                            size={\"1x\"}\n                                            title=\"Filtrar por autor\"\n                                            onClick={() => { setSelStudent(note.authorId); setSelPage(1) }}\n                                        />\n                                    </dt>\n                                    <dd>{titleCase(note.authorName)}</dd>\n                                </>\n                            }\n                            {\n                                note.teacherName &&\n                                <>\n                                    <dt className=\"small font-weight-bold\">\n                                        <span className=\"mr-1\">\n                                            <span className=\"mr-1\">Docente</span>\n                                            <FontAwesomeIcon\n                                                className=\"text-primary mr-1 link\"\n                                                icon={faFilter}\n                                                size={\"1x\"}\n                                                title=\"Filtrar por docente\"\n                                                onClick={() => { setSelTeacher(note.teacherId); setSelPage(1) }}\n                                            />\n                                        </span>\n                                        {\n                                            note.teacherPage &&\n                                            <a\n                                                title=\"Perfil do docente ua.pt\"\n                                                href={note.teacherPage}\n                                                target=\"_blank\"\n                                                rel=\"noreferrer\"\n                                            >\n\n                                                <FontAwesomeIcon\n                                                    className=\"text-primary mr-3\"\n                                                    icon={faInfoCircle}\n                                                    size={\"1x\"}\n                                                />\n                                            </a>\n                                        }\n                                    </dt>\n                                    <dd>{note.teacherName}</dd>\n                                </>\n                            }\n                            {\n                                (note.content || note.size) &&\n                                <div class=\"file-content\">\n                                    <dt className=\"small font-weight-bold\">\n                                        Conteúdo\n                                        {note.size && <small className=\"ml-1\">({note.size} MB)</small>}\n                                    </dt>\n                                    {\n                                        note.content &&\n                                        <dd>{parse(`${note.content.replace('\\n', '<br/>')}`)}</dd>\n                                    }\n                                </div>\n                            }\n                        </dl>\n                    </div>\n                </>\n            }\n        </div>\n    );\n}\n\nexport default Details;","/home/joao/Documents/Website/src/Pages/Apontamentos/ListView/index.js",["428"],"import React from 'react';\nimport { Row, Col, Accordion, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle, faFilter, faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons';\nimport \"./index.css\";\n\nimport {authorNameProcessing, monthsPassed} from '../utils';\n\nfunction titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        // You do not need to check if i is larger than splitStr length, as your for does that for you\n        // Assign it back to the array\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    // Directly return the joined string\n    return splitStr.join(' ');\n}\n\n/** Takes a single prop: data, a list of objects containing the following properties:\n *  - id\n    - name: the name of the file\n    - subjectShort: abbreviation of subject name (e.g. \"FP\")\n    - subjectName: full subject name\n    - summary, tests, bibliography, slides, exercises, projects, notebook:\n        The string \"0\" or \"1\", representing if the notes belong in the category \n */\nconst ListView = (props) => {\n    \n    var animKey = 0;\n\n    return(\n        <div className=\"mx-3\">\n            <Row className=\"list-view-header\">\n                <Col md=\"4\" className=\"list-view-name\">\n                    Ficheiro\n                </Col>\n                <Col md=\"4\" className=\"list-view-subject-name\">\n                    Cadeira\n                </Col>\n                <Col md=\"1\" className=\"list-view-subject-short\">\n                    Sigla\n                </Col>\n                <Col md=\"3\" className=\"list-view-subject-name\">\n                    Autor\n                </Col>\n            </Row>\n\n            <Accordion>\n            {\n            props.data.map( item => {\n                return(\n                    <Card\n                        className=\"list-view-item mx-n3 px-3 slideUpFade\"\n                        style={{animationDelay: animKey++*0.1+\"s\"}}\n                    >\n                        <Accordion.Toggle as={Card.Header} eventKey={item.id}>\n                            <Row>\n                                <Col md=\"4\" className=\"list-view-name\">\n                                    {item.name}\n                                </Col>\n                                <Col md=\"4\" className=\"list-view-subject-name\">\n                                    {item.subjectName}\n                                </Col>\n                                <Col md=\"1\" className=\"list-view-subject-short\">\n                                    {item.subjectShort}\n                                </Col>\n                                <Col md=\"3\" className=\"list-view-subject-name\">\n                                    {authorNameProcessing(item.authorName)}\n                                </Col>\n                            </Row>\n                            <Row className=\"pl-2 mt-1\">\n                                {monthsPassed(new Date(item.createdAt)) < 3 && <span className=\"badge mr-0 ml-1 badge-pill tag-new\"  >Novo!</span>}\n                                {item.summary     ===\"1\" && <span className=\"badge mr-0 ml-1 badge-pill tag-summary\"  >Resumos</span>}\n                                {item.tests       ===\"1\" && <span className=\"badge mr-0 ml-1 badge-pill tag-tests\"    >Testes e exames</span>}\n                                {item.bibliography===\"1\" && <span className=\"badge mr-0 ml-1 badge-pill tag-biblio\"   >Bibliografia</span>}\n                                {item.slides      ===\"1\" && <span className=\"badge mr-0 ml-1 badge-pill tag-slides\"   >Slides</span>}\n                                {item.exercises   ===\"1\" && <span className=\"badge mr-0 ml-1 badge-pill tag-exercises\">Exercícios</span>}\n                                {item.projects    ===\"1\" && <span className=\"badge mr-0 ml-1 badge-pill tag-projects\" >Projetos</span>}\n                                {item.notebook    ===\"1\" && <span className=\"badge mr-0 ml-1 badge-pill tag-notebook\" >Caderno</span>}\n                            </Row>\n                        </Accordion.Toggle>\n\n                        <Accordion.Collapse eventKey={item.id}>\n                            <Card.Body>\n                                <Row>\n                                    <Col sm=\"12\" lg=\"8\">\n                                        <dl className=\"mb-2\">\n                                            {\n                                            item.yearBegin && item.yearEnd &&\n                                            <>\n                                                <dt className=\"small font-weight-bold\">\n                                                    <span className=\"mr-1\">Ano letivo</span>\n                                                    <FontAwesomeIcon\n                                                        className=\"text-primary mr-1 link\"\n                                                        icon={faFilter}\n                                                        size={\"1x\"}\n                                                        title=\"Filtrar por ano letivo\"\n                                                        onClick={() => props.setSelYear(item.yearId)}\n                                                    />\n                                                </dt>\n                                                <dd>{item.yearBegin}/{item.yearEnd}</dd>\n                                            </>\n                                            }\n                                            {\n                                            item.authorName &&\n                                            <>\n                                                <dt className=\"small font-weight-bold\">\n                                                    <span className=\"mr-1\">Autor</span>\n                                                    <FontAwesomeIcon\n                                                        className=\"text-primary mr-1 link\"\n                                                        icon={faFilter}\n                                                        size={\"1x\"}\n                                                        title=\"Filtrar por autor\"\n                                                        onClick={() => props.setSelStudent(item.authorId)}\n                                                    />\n                                                </dt>\n                                                <dd>{titleCase(item.authorName)}</dd>\n                                            </>\n                                            }\n                                            {\n                                            item.teacherName &&\n                                            <>\n                                                <dt className=\"small font-weight-bold\">\n                                                    <span className=\"mr-1\">\n                                                        <span className=\"mr-1\">Docente</span>\n                                                        <FontAwesomeIcon\n                                                            className=\"text-primary mr-1 link\"\n                                                            icon={faFilter}\n                                                            size={\"1x\"}\n                                                            title=\"Filtrar por docente\"\n                                                            onClick={() => props.setSelTeacher(item.teacherId)}\n                                                        />\n                                                    </span>\n                                                    {\n                                                    item.teacherPage &&\n                                                    <a\n                                                        title=\"Perfil do docente ua.pt\"\n                                                        href={item.teacherPage}\n                                                        target=\"_blank\"\n                                                        rel=\"noreferrer\"\n                                                    >\n\n                                                        <FontAwesomeIcon\n                                                            className=\"text-primary mr-3\"\n                                                            icon={faInfoCircle}\n                                                            size={\"1x\"}\n                                                        />\n                                                    </a>\n                                                    }\n                                                </dt>\n                                                <dd>{item.teacherName}</dd>\n                                            </>\n                                        }\n                                        </dl>\n                                    </Col>\n                                    <Col sm=\"12\" lg=\"4\">\n                                        <a \n                                            href={parseInt(item.type_external) ? item.location : process.env.REACT_APP_STATIC + item.location} \n                                            target=\"_blank\" rel=\"noreferrer\"\n                                        >\n                                            <button className=\"btn btn-sm btn-outline-primary mb-3 ml-0\">\n                                                <FontAwesomeIcon icon={item.type_icon_download.split(\" \")} size={\"1x\"}/>\n                                                <span className=\"ml-1\">{item.type_download_caption}</span>\n                                            </button>\n                                        </a>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n            )})\n            }\n            </Accordion>\n        </div>\n    );\n}\n\nexport default ListView;","/home/joao/Documents/Website/src/Components/Alert/index.js",["429"],"import React, {useState, useEffect} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle, faExclamationCircle, faTimes } from '@fortawesome/free-solid-svg-icons';\n\n/**\n * alert    Object      {text: str, type:Enum(info, alert - Optional)}\n * setAlert Method      Sets alert to null when user clicks close button\n * @param {*} param0 \n * @returns \n */\nconst Alert = ({alert, setAlert}) => {\n    const [cssclass, setCssClass] = useState('primary');\n    const [icon, setIcon] = useState(faInfoCircle);\n\n    useEffect(() => {\n        switch(alert.type) {\n            case 'info':\n                setCssClass('primary');\n                setIcon(faInfoCircle);\n                break;\n            case 'alert':\n                setCssClass('danger');\n                setIcon(faExclamationCircle);\n        }\n    }, [alert.type]);\n\n    if (!alert.type) \n        return (<div></div>)\n\n    return (\n        <div class={`d-flex flex-row text-${cssclass} bg-outline-${cssclass} mx-auto p-2 font-weight-bold animation`}>\n            <FontAwesomeIcon icon={icon} className=\"mr-2 my-auto\"/>\n            <p class=\"col mb-0\">{alert.text}</p>\n            {\n                setAlert &&\n                <FontAwesomeIcon icon={faTimes} size=\"xs\" className=\"ml-3 link my-auto\" onClick={() => {setAlert({...alert, type:null})}}/>\n            }\n        </div>\n    );\n}\n\nexport default Alert;","/home/joao/Documents/Website/src/Pages/Internship/components/MediumInternshipCard/index.js",[],"/home/joao/Documents/Website/src/Pages/Internship/components/BigInternshipCard/index.js",[],"/home/joao/Documents/Website/src/Pages/Internship/components/MiniIntershipCard/index.js",[],"/home/joao/Documents/Website/src/Pages/Internship/components/SmallInternshipCard/index.js",[],"/home/joao/Documents/Website/src/Pages/Internship/components/InternshipCard/index.js",[],"/home/joao/Documents/Website/src/Components/Navbar/data.js",[],"/home/joao/Documents/Website/src/Pages/Calendar/NEICalendar/helpers.js",["430"],"\n// CONSTANTS\nconst months = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'];\n\nconst categories = {\n    '1A': {\n        'filters': ['[1A]'],\n        'color': 'rgb(1, 202, 228)'\n    },\n    '2A': {\n        'filters': ['[2A]'],\n        'color': 'rgb(1, 171, 192)'\n    },\n    '3A': {\n        'filters': ['[3A]'],\n        'color': 'rgb(1, 135, 152)'\n    },\n    'MEI': {\n        'filters': ['[MEI]'],\n        'color': 'rgb(1, 90, 101)'\n    },\n    'NEI': {\n        'filters': [\"*\"], // default\n        'color': 'rgb(20, 122, 38)'\n    },\n    'Taça UA': {\n        'filters': [\"[Taça UA]\"],\n        'color': 'rgb(211, 17, 21)'\n    },\n    'Calendário escolar': {\n        'filters': [\"FERIADO\", \"Época de\", \"Férias\", \"Último dia\", \"Primeiro dia\", \"Integração\"],\n        'color': 'rgb(255, 162, 0)'\n    },\n}\n\n// FUNCTIONS\n// Colorize events acoording to type\nconst eventStyleGetter = (event, start, end, isSelected) => {\n    let color = \"rgba(20, 122, 38\";\n\n    Object.entries(categories).forEach(([key, c]) => {\n        c['filters'].forEach(f => {\n            if(event['title'].toLowerCase().indexOf(f.toLowerCase())>=0) {\n                color = c['color'].replace('rgb(', 'rgba(').replace(')', '');\n            }\n        });\n    });\n\n    // Reduce opacity in past events\n    var yesterday = new Date((new Date()).valueOf() - 1000*60*60*24);\n    color += (event['end'] <= yesterday) ? \", 0.6)\" : \", 1)\";\n\n    return {\n        style: {\n            'backgroundColor': color\n        }\n    }\n}\n\n// Tooltip acessor\n// This method returns the text tooltip given an event \nconst tooltipAcessor = (e) => {\n    let message = e['title'] + '\\n___\\n';\n\n    if (e['allDay']) {\n        message += \"Todo o dia\";\n    }\n    // If not all day, compute text for time span\n    else if ((Math.abs(e['end']-e['start'])/(1000 * 60 * 60))<24) {\n        // Same day (less than 24 hours diff)\n        message += `Das ${zeroPad(e['start'].getHours()+1, 2)}:${zeroPad(e['start'].getMinutes(), 2)} às ${zeroPad(e['end'].getHours()+1, 2)}:${zeroPad(e['end'].getMinutes(), 2)}`;\n    // Else, different days\n    // On same month\n    } else if (e['start'].getMonth() == e['end'].getMonth()) {\n        message += `De dia ${e['start'].getDate()} às ${zeroPad(e['start'].getHours()+1, 2)}:${zeroPad(e['start'].getMinutes(), 2)} a dia ${e['end'].getDate()} às ${zeroPad(e['end'].getHours()+1, 2)}:${zeroPad(e['end'].getMinutes(), 2)}`;\n    // On different months\n    } else {\n        message += `De ${e['start'].getDate()} de ${months[e['start'].getMonth()]} às ${zeroPad(e['start'].getHours()+1, 2)}:${zeroPad(e['start'].getMinutes(), 2)} até ${e['end'].getDate()} de ${months[e['end'].getMonth()]} às ${zeroPad(e['end'].getHours()+1, 2)}:${zeroPad(e['end'].getMinutes(), 2)}`;\n    }\n\n    return message;\n}\n\n// Add leading zeros to numbers (Example: (3, 2) => 03)\nconst zeroPad = (num, places) => String(num).padStart(places, '0');\n \nexport {eventStyleGetter, tooltipAcessor, zeroPad, months, categories};","/home/joao/Documents/Website/src/Components/Filters/FilterButton.js",["431","432"],"import React, { useState, useEffect } from \"react\";\nimport { ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\n\n/**\n * This component renders a filter button\n * \n * Parameters:\n * - filter                 obj         {filter: str, color: str, hover: str}\n *                                          filter: Filter name (required)\n *                                          color: Normal color (optional, if missing .primary will be applied)\n * - activeFilters          str[]       List of active filters\n * - setActiveFilters       function    Function to change active filters list\n * - btnClass               str         Class for button\n */\nconst FilterButton = ({filter, setActiveFilters, activeFilters, btnClass}) => {\n\n    const [style, setStyle] = useState({});\n    const [hover, setHover] = useState(false);\n\n    // Change color on hover and activeFilters change\n    useEffect(() => {\n        // If filter does not have color, ignore (default .primary will be applied)\n        if (!('color' in filter)) {\n            return;\n        }\n        // If active or hover, fill\n        if (hover || activeFilters.includes(filter['filter'])) {\n            setStyle({\n                backgroundColor: filter['color'],\n                borderColor: filter['color'],\n                color: '#fff'\n            });\n        }\n        // Else, outline \n        else {\n            setStyle({\n                borderColor: filter['color'],\n                color: filter['color']\n            });\n        }\n    }, [activeFilters, hover]);\n\n    return (\n        filter &&\n        <ToggleButtonGroup \n            type=\"checkbox\" \n            value={activeFilters} \n            onChange={setActiveFilters} \n            className=\"mr-2\" \n            key={filter['filter']}\n            onMouseEnter={() => setHover(true)}\n            onMouseLeave={() => setHover(false)}\n            className={btnClass}\n        >\n            <ToggleButton \n                variant=\"outline-primary pill\" \n                className=\"rounded-pill\" \n                value={filter['filter']}\n                style={style}\n            >\n                {filter['filter']}\n            </ToggleButton>\n        </ToggleButtonGroup>\n    );\n}\n\nexport default FilterButton;","/home/joao/Documents/Website/src/Pages/Apontamentos/utils.js",["433"],"function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n}\n\n// Reduce number of names in big ones\nvar authorNameProcessing = (name) => {\n    if (!name)\n        return \"\"\n    let namesp = name.split(\" \");\n    // If only one name, return it\n    if (namesp.length==1)\n        return capitalizeFirstLetter(name);\n    // Otherwise, return first and last\n    return capitalizeFirstLetter(namesp[0]) + \" \" + capitalizeFirstLetter(namesp[namesp.length-1]);\n}\n\n// Difference between dates\nlet today = new Date();\n\nvar monthsPassed = (d) => {\n    let months = (today.getFullYear() - d.getFullYear()) * 12;\n    months -= d.getMonth();\n    months += today.getMonth();\n    return months;\n}\nexport {authorNameProcessing, monthsPassed};\n","/home/joao/Documents/Website/src/Pages/Calendar/NEICalendar/NEIAgenda/index.js",[],"/home/joao/Documents/Website/src/Pages/History/TimelineItem/index.js",["434"],"import React from \"react\";\nimport {Row, Col} from \"react-bootstrap\";\nimport \"./index.css\";\n\n/** Card-like block for use in timelines\n * \n *  Props:\n *   - moment: date of the event\n *   - title\n *   - body: event text\n *   - image: marker image src\n */\nconst TimelineItem = ({className, style, ...props}) => {\n\n    return(\n        <Row className={\"my-5 timeline-item \" + className} style={style}>\n            <Col xs=\"11\" lg=\"5\">\n                <span className=\"d-lg-none\" >{props.moment}</span>\n                <div className=\"timeline-card px-4 pt-4 pb-2 text-center bg-white\">\n                    <h3 className=\"mb-3\">{props.title}</h3>\n                    <p>{props.body}</p>\n                </div>\n            </Col>\n\n            <Col xs=\"1\" className=\"timeline-marker px-0 d-flex justify-content-center\">\n                <img src={process.env.REACT_APP_STATIC + props.image} />\n            </Col>\n\n            <Col lg=\"5\" className=\"timeline-date d-none d-lg-block\">\n                <span>{props.moment}</span>\n            </Col>\n        </Row>\n    )\n}\n\nexport default TimelineItem;",{"ruleId":"435","replacedBy":"436"},{"ruleId":"437","replacedBy":"438"},{"ruleId":"439","severity":1,"message":"440","line":24,"column":8,"nodeType":"441","endLine":24,"endColumn":64,"suggestions":"442"},{"ruleId":"443","severity":1,"message":"444","line":6,"column":5,"nodeType":"445","messageId":"446","endLine":6,"endColumn":8},{"ruleId":"439","severity":1,"message":"447","line":60,"column":8,"nodeType":"441","endLine":60,"endColumn":10,"suggestions":"448"},{"ruleId":"449","severity":1,"message":"450","line":63,"column":26,"nodeType":"451","messageId":"452","endLine":63,"endColumn":28},{"ruleId":"439","severity":1,"message":"447","line":88,"column":8,"nodeType":"441","endLine":88,"endColumn":22,"suggestions":"453"},{"ruleId":"439","severity":1,"message":"447","line":34,"column":8,"nodeType":"441","endLine":34,"endColumn":10,"suggestions":"454"},{"ruleId":"449","severity":1,"message":"450","line":22,"column":30,"nodeType":"451","messageId":"452","endLine":22,"endColumn":32},{"ruleId":"455","severity":1,"message":"456","line":31,"column":17,"nodeType":"445","messageId":"457","endLine":31,"endColumn":20},{"ruleId":"449","severity":1,"message":"458","line":33,"column":23,"nodeType":"451","messageId":"452","endLine":33,"endColumn":25},{"ruleId":"439","severity":1,"message":"459","line":55,"column":38,"nodeType":"441","endLine":55,"endColumn":49,"suggestions":"460"},{"ruleId":"461","severity":1,"message":"462","line":138,"column":21,"nodeType":"463","messageId":"464","endLine":138,"endColumn":64,"fix":"465"},{"ruleId":"466","severity":1,"message":"467","line":139,"column":25,"nodeType":"463","endLine":142,"endColumn":27},{"ruleId":"449","severity":1,"message":"450","line":42,"column":26,"nodeType":"451","messageId":"452","endLine":42,"endColumn":28},{"ruleId":"461","severity":1,"message":"462","line":37,"column":21,"nodeType":"463","messageId":"464","endLine":37,"endColumn":64,"fix":"468"},{"ruleId":"466","severity":1,"message":"467","line":38,"column":25,"nodeType":"463","endLine":41,"endColumn":27},{"ruleId":"443","severity":1,"message":"469","line":1,"column":16,"nodeType":"445","messageId":"446","endLine":1,"endColumn":25},{"ruleId":"439","severity":1,"message":"470","line":52,"column":14,"nodeType":"471","endLine":52,"endColumn":30},{"ruleId":"449","severity":1,"message":"450","line":85,"column":34,"nodeType":"451","messageId":"452","endLine":85,"endColumn":36},{"ruleId":"449","severity":1,"message":"458","line":102,"column":61,"nodeType":"451","messageId":"452","endLine":102,"endColumn":63},{"ruleId":"449","severity":1,"message":"450","line":102,"column":86,"nodeType":"451","messageId":"452","endLine":102,"endColumn":88},{"ruleId":"449","severity":1,"message":"458","line":106,"column":58,"nodeType":"451","messageId":"452","endLine":106,"endColumn":60},{"ruleId":"472","severity":1,"message":"473","line":110,"column":51,"nodeType":"451","messageId":"474","endLine":110,"endColumn":52},{"ruleId":"443","severity":1,"message":"475","line":2,"column":10,"nodeType":"445","messageId":"446","endLine":2,"endColumn":12},{"ruleId":"443","severity":1,"message":"476","line":3,"column":28,"nodeType":"445","messageId":"446","endLine":3,"endColumn":37},{"ruleId":"449","severity":1,"message":"450","line":27,"column":41,"nodeType":"451","messageId":"452","endLine":27,"endColumn":43},{"ruleId":"449","severity":1,"message":"450","line":36,"column":50,"nodeType":"451","messageId":"452","endLine":36,"endColumn":52},{"ruleId":"449","severity":1,"message":"450","line":36,"column":98,"nodeType":"451","messageId":"452","endLine":36,"endColumn":100},{"ruleId":"449","severity":1,"message":"450","line":43,"column":50,"nodeType":"451","messageId":"452","endLine":43,"endColumn":52},{"ruleId":"449","severity":1,"message":"450","line":43,"column":98,"nodeType":"451","messageId":"452","endLine":43,"endColumn":100},{"ruleId":"461","severity":1,"message":"462","line":68,"column":13,"nodeType":"463","messageId":"464","endLine":72,"endColumn":14,"fix":"477"},{"ruleId":"449","severity":1,"message":"450","line":61,"column":66,"nodeType":"451","messageId":"452","endLine":61,"endColumn":68},{"ruleId":"439","severity":1,"message":"478","line":93,"column":8,"nodeType":"441","endLine":93,"endColumn":28,"suggestions":"479"},{"ruleId":"449","severity":1,"message":"450","line":141,"column":72,"nodeType":"451","messageId":"452","endLine":141,"endColumn":74},{"ruleId":"449","severity":1,"message":"450","line":184,"column":65,"nodeType":"451","messageId":"452","endLine":184,"endColumn":67},{"ruleId":"439","severity":1,"message":"447","line":26,"column":8,"nodeType":"441","endLine":26,"endColumn":10,"suggestions":"480"},{"ruleId":"449","severity":1,"message":"458","line":29,"column":31,"nodeType":"451","messageId":"452","endLine":29,"endColumn":33},{"ruleId":"443","severity":1,"message":"481","line":24,"column":11,"nodeType":"445","messageId":"446","endLine":24,"endColumn":17},{"ruleId":"443","severity":1,"message":"482","line":26,"column":12,"nodeType":"445","messageId":"446","endLine":26,"endColumn":21},{"ruleId":"443","severity":1,"message":"483","line":26,"column":23,"nodeType":"445","messageId":"446","endLine":26,"endColumn":35},{"ruleId":"443","severity":1,"message":"484","line":30,"column":12,"nodeType":"445","messageId":"446","endLine":30,"endColumn":23},{"ruleId":"443","severity":1,"message":"485","line":30,"column":25,"nodeType":"445","messageId":"446","endLine":30,"endColumn":39},{"ruleId":"449","severity":1,"message":"450","line":81,"column":54,"nodeType":"451","messageId":"452","endLine":81,"endColumn":56},{"ruleId":"449","severity":1,"message":"450","line":116,"column":33,"nodeType":"451","messageId":"452","endLine":116,"endColumn":35},{"ruleId":"449","severity":1,"message":"450","line":117,"column":41,"nodeType":"451","messageId":"452","endLine":117,"endColumn":43},{"ruleId":"449","severity":1,"message":"450","line":118,"column":36,"nodeType":"451","messageId":"452","endLine":118,"endColumn":38},{"ruleId":"449","severity":1,"message":"450","line":119,"column":39,"nodeType":"451","messageId":"452","endLine":119,"endColumn":41},{"ruleId":"486","severity":1,"message":"487","line":123,"column":61,"nodeType":"488","messageId":"489","endLine":123,"endColumn":97},{"ruleId":"449","severity":1,"message":"450","line":123,"column":78,"nodeType":"451","messageId":"452","endLine":123,"endColumn":80},{"ruleId":"449","severity":1,"message":"450","line":126,"column":34,"nodeType":"451","messageId":"452","endLine":126,"endColumn":36},{"ruleId":"449","severity":1,"message":"458","line":138,"column":23,"nodeType":"451","messageId":"452","endLine":138,"endColumn":25},{"ruleId":"449","severity":1,"message":"458","line":138,"column":42,"nodeType":"451","messageId":"452","endLine":138,"endColumn":44},{"ruleId":"449","severity":1,"message":"458","line":138,"column":61,"nodeType":"451","messageId":"452","endLine":138,"endColumn":63},{"ruleId":"449","severity":1,"message":"458","line":148,"column":26,"nodeType":"451","messageId":"452","endLine":148,"endColumn":28},{"ruleId":"449","severity":1,"message":"458","line":148,"column":45,"nodeType":"451","messageId":"452","endLine":148,"endColumn":47},{"ruleId":"449","severity":1,"message":"458","line":148,"column":64,"nodeType":"451","messageId":"452","endLine":148,"endColumn":66},{"ruleId":"449","severity":1,"message":"458","line":158,"column":26,"nodeType":"451","messageId":"452","endLine":158,"endColumn":28},{"ruleId":"449","severity":1,"message":"458","line":158,"column":45,"nodeType":"451","messageId":"452","endLine":158,"endColumn":47},{"ruleId":"449","severity":1,"message":"458","line":158,"column":64,"nodeType":"451","messageId":"452","endLine":158,"endColumn":66},{"ruleId":"449","severity":1,"message":"458","line":168,"column":26,"nodeType":"451","messageId":"452","endLine":168,"endColumn":28},{"ruleId":"449","severity":1,"message":"458","line":168,"column":45,"nodeType":"451","messageId":"452","endLine":168,"endColumn":47},{"ruleId":"449","severity":1,"message":"458","line":168,"column":64,"nodeType":"451","messageId":"452","endLine":168,"endColumn":66},{"ruleId":"449","severity":1,"message":"450","line":176,"column":34,"nodeType":"451","messageId":"452","endLine":176,"endColumn":36},{"ruleId":"449","severity":1,"message":"450","line":227,"column":37,"nodeType":"451","messageId":"452","endLine":227,"endColumn":39},{"ruleId":"449","severity":1,"message":"450","line":257,"column":37,"nodeType":"451","messageId":"452","endLine":257,"endColumn":39},{"ruleId":"449","severity":1,"message":"450","line":284,"column":37,"nodeType":"451","messageId":"452","endLine":284,"endColumn":39},{"ruleId":"449","severity":1,"message":"450","line":312,"column":37,"nodeType":"451","messageId":"452","endLine":312,"endColumn":39},{"ruleId":"439","severity":1,"message":"490","line":330,"column":8,"nodeType":"441","endLine":330,"endColumn":82,"suggestions":"491"},{"ruleId":"449","severity":1,"message":"458","line":340,"column":20,"nodeType":"451","messageId":"452","endLine":340,"endColumn":22},{"ruleId":"449","severity":1,"message":"458","line":342,"column":28,"nodeType":"451","messageId":"452","endLine":342,"endColumn":30},{"ruleId":"449","severity":1,"message":"458","line":344,"column":23,"nodeType":"451","messageId":"452","endLine":344,"endColumn":25},{"ruleId":"449","severity":1,"message":"458","line":346,"column":23,"nodeType":"451","messageId":"452","endLine":346,"endColumn":25},{"ruleId":"486","severity":1,"message":"487","line":351,"column":53,"nodeType":"488","messageId":"489","endLine":351,"endColumn":89},{"ruleId":"449","severity":1,"message":"450","line":351,"column":70,"nodeType":"451","messageId":"452","endLine":351,"endColumn":72},{"ruleId":"449","severity":1,"message":"450","line":520,"column":57,"nodeType":"451","messageId":"452","endLine":520,"endColumn":59},{"ruleId":"449","severity":1,"message":"450","line":539,"column":57,"nodeType":"451","messageId":"452","endLine":539,"endColumn":59},{"ruleId":"461","severity":1,"message":"462","line":587,"column":67,"nodeType":"463","messageId":"464","endLine":587,"endColumn":108,"fix":"492"},{"ruleId":"443","severity":1,"message":"493","line":3,"column":8,"nodeType":"445","messageId":"446","endLine":3,"endColumn":14},{"ruleId":"443","severity":1,"message":"494","line":9,"column":10,"nodeType":"445","messageId":"446","endLine":9,"endColumn":16},{"ruleId":"439","severity":1,"message":"447","line":37,"column":8,"nodeType":"441","endLine":37,"endColumn":10,"suggestions":"495"},{"ruleId":"449","severity":1,"message":"450","line":65,"column":39,"nodeType":"451","messageId":"452","endLine":65,"endColumn":41},{"ruleId":"449","severity":1,"message":"450","line":36,"column":33,"nodeType":"451","messageId":"452","endLine":36,"endColumn":35},{"ruleId":"443","severity":1,"message":"496","line":8,"column":3,"nodeType":"445","messageId":"446","endLine":8,"endColumn":16},{"ruleId":"443","severity":1,"message":"497","line":8,"column":18,"nodeType":"445","messageId":"446","endLine":8,"endColumn":29},{"ruleId":"443","severity":1,"message":"498","line":157,"column":9,"nodeType":"445","messageId":"446","endLine":157,"endColumn":24},{"ruleId":"449","severity":1,"message":"458","line":200,"column":23,"nodeType":"451","messageId":"452","endLine":200,"endColumn":25},{"ruleId":"449","severity":1,"message":"458","line":200,"column":50,"nodeType":"451","messageId":"452","endLine":200,"endColumn":52},{"ruleId":"449","severity":1,"message":"458","line":238,"column":27,"nodeType":"451","messageId":"452","endLine":238,"endColumn":29},{"ruleId":"466","severity":1,"message":"467","line":679,"column":21,"nodeType":"463","endLine":679,"endColumn":47},{"ruleId":"443","severity":1,"message":"499","line":2,"column":9,"nodeType":"445","messageId":"446","endLine":2,"endColumn":15},{"ruleId":"443","severity":1,"message":"444","line":3,"column":26,"nodeType":"445","messageId":"446","endLine":3,"endColumn":29},{"ruleId":"443","severity":1,"message":"476","line":2,"column":10,"nodeType":"445","messageId":"446","endLine":2,"endColumn":19},{"ruleId":"443","severity":1,"message":"500","line":2,"column":21,"nodeType":"445","messageId":"446","endLine":2,"endColumn":24},{"ruleId":"443","severity":1,"message":"500","line":5,"column":21,"nodeType":"445","messageId":"446","endLine":5,"endColumn":24},{"ruleId":"443","severity":1,"message":"501","line":11,"column":7,"nodeType":"445","messageId":"446","endLine":11,"endColumn":11},{"ruleId":"443","severity":1,"message":"502","line":1,"column":100,"nodeType":"445","messageId":"446","endLine":1,"endColumn":107},{"ruleId":"449","severity":1,"message":"450","line":50,"column":41,"nodeType":"451","messageId":"452","endLine":50,"endColumn":43},{"ruleId":"443","severity":1,"message":"499","line":2,"column":9,"nodeType":"445","messageId":"446","endLine":2,"endColumn":15},{"ruleId":"443","severity":1,"message":"476","line":3,"column":10,"nodeType":"445","messageId":"446","endLine":3,"endColumn":19},{"ruleId":"443","severity":1,"message":"500","line":3,"column":21,"nodeType":"445","messageId":"446","endLine":3,"endColumn":24},{"ruleId":"449","severity":1,"message":"450","line":18,"column":33,"nodeType":"451","messageId":"452","endLine":18,"endColumn":35},{"ruleId":"461","severity":1,"message":"462","line":12,"column":17,"nodeType":"463","messageId":"464","endLine":12,"endColumn":105,"fix":"503"},{"ruleId":"461","severity":1,"message":"462","line":15,"column":17,"nodeType":"463","messageId":"464","endLine":15,"endColumn":107,"fix":"504"},{"ruleId":"461","severity":1,"message":"462","line":18,"column":17,"nodeType":"463","messageId":"464","endLine":18,"endColumn":136,"fix":"505"},{"ruleId":"449","severity":1,"message":"450","line":18,"column":35,"nodeType":"451","messageId":"452","endLine":18,"endColumn":37},{"ruleId":"449","severity":1,"message":"450","line":18,"column":39,"nodeType":"451","messageId":"452","endLine":18,"endColumn":41},{"ruleId":"455","severity":1,"message":"506","line":21,"column":17,"nodeType":"445","messageId":"457","endLine":21,"endColumn":20},{"ruleId":"449","severity":1,"message":"450","line":23,"column":17,"nodeType":"451","messageId":"452","endLine":23,"endColumn":19},{"ruleId":"449","severity":1,"message":"450","line":25,"column":22,"nodeType":"451","messageId":"452","endLine":25,"endColumn":24},{"ruleId":"449","severity":1,"message":"450","line":71,"column":87,"nodeType":"451","messageId":"452","endLine":71,"endColumn":89},{"ruleId":"449","severity":1,"message":"450","line":72,"column":90,"nodeType":"451","messageId":"452","endLine":72,"endColumn":92},{"ruleId":"449","severity":1,"message":"450","line":85,"column":76,"nodeType":"451","messageId":"452","endLine":85,"endColumn":78},{"ruleId":"449","severity":1,"message":"450","line":99,"column":89,"nodeType":"451","messageId":"452","endLine":99,"endColumn":91},{"ruleId":"449","severity":1,"message":"450","line":100,"column":96,"nodeType":"451","messageId":"452","endLine":100,"endColumn":98},{"ruleId":"449","severity":1,"message":"450","line":70,"column":74,"nodeType":"451","messageId":"452","endLine":70,"endColumn":76},{"ruleId":"461","severity":1,"message":"462","line":32,"column":9,"nodeType":"463","messageId":"464","endLine":41,"endColumn":10},{"ruleId":"507","severity":1,"message":"508","line":38,"column":13,"nodeType":"509","messageId":"510","endLine":38,"endColumn":39},{"ruleId":"466","severity":1,"message":"467","line":45,"column":21,"nodeType":"463","endLine":45,"endColumn":57},{"ruleId":"461","severity":1,"message":"462","line":34,"column":23,"nodeType":"463","messageId":"464","endLine":34,"endColumn":62,"fix":"511"},{"ruleId":"449","severity":1,"message":"450","line":24,"column":34,"nodeType":"451","messageId":"452","endLine":24,"endColumn":36},{"ruleId":"439","severity":1,"message":"512","line":28,"column":8,"nodeType":"441","endLine":28,"endColumn":23,"suggestions":"513"},{"ruleId":"449","severity":1,"message":"450","line":32,"column":34,"nodeType":"451","messageId":"452","endLine":32,"endColumn":36},{"ruleId":"443","severity":1,"message":"514","line":8,"column":43,"nodeType":"445","messageId":"446","endLine":8,"endColumn":50},{"ruleId":"443","severity":1,"message":"515","line":8,"column":52,"nodeType":"445","messageId":"446","endLine":8,"endColumn":61},{"ruleId":"443","severity":1,"message":"516","line":8,"column":63,"nodeType":"445","messageId":"446","endLine":8,"endColumn":69},{"ruleId":"439","severity":1,"message":"517","line":32,"column":8,"nodeType":"441","endLine":32,"endColumn":10,"suggestions":"518"},{"ruleId":"449","severity":1,"message":"450","line":56,"column":41,"nodeType":"451","messageId":"452","endLine":56,"endColumn":43},{"ruleId":"519","severity":1,"message":"520","line":56,"column":62,"nodeType":"521","messageId":"522","endLine":56,"endColumn":64},{"ruleId":"519","severity":1,"message":"520","line":56,"column":93,"nodeType":"521","messageId":"522","endLine":56,"endColumn":95},{"ruleId":"449","severity":1,"message":"450","line":85,"column":28,"nodeType":"451","messageId":"452","endLine":85,"endColumn":30},{"ruleId":"449","severity":1,"message":"450","line":89,"column":35,"nodeType":"451","messageId":"452","endLine":89,"endColumn":37},{"ruleId":"443","severity":1,"message":"469","line":1,"column":17,"nodeType":"445","messageId":"446","endLine":1,"endColumn":26},{"ruleId":"443","severity":1,"message":"523","line":1,"column":28,"nodeType":"445","messageId":"446","endLine":1,"endColumn":36},{"ruleId":"443","severity":1,"message":"524","line":2,"column":29,"nodeType":"445","messageId":"446","endLine":2,"endColumn":41},{"ruleId":"443","severity":1,"message":"525","line":2,"column":43,"nodeType":"445","messageId":"446","endLine":2,"endColumn":60},{"ruleId":"443","severity":1,"message":"526","line":11,"column":7,"nodeType":"445","messageId":"446","endLine":11,"endColumn":14},{"ruleId":"449","severity":1,"message":"450","line":47,"column":48,"nodeType":"451","messageId":"452","endLine":47,"endColumn":50},{"ruleId":"449","severity":1,"message":"450","line":48,"column":46,"nodeType":"451","messageId":"452","endLine":48,"endColumn":48},{"ruleId":"449","severity":1,"message":"450","line":49,"column":53,"nodeType":"451","messageId":"452","endLine":49,"endColumn":55},{"ruleId":"449","severity":1,"message":"450","line":50,"column":47,"nodeType":"451","messageId":"452","endLine":50,"endColumn":49},{"ruleId":"449","severity":1,"message":"450","line":51,"column":50,"nodeType":"451","messageId":"452","endLine":51,"endColumn":52},{"ruleId":"449","severity":1,"message":"450","line":52,"column":49,"nodeType":"451","messageId":"452","endLine":52,"endColumn":51},{"ruleId":"449","severity":1,"message":"450","line":53,"column":49,"nodeType":"451","messageId":"452","endLine":53,"endColumn":51},{"ruleId":"443","severity":1,"message":"527","line":8,"column":34,"nodeType":"445","messageId":"446","endLine":8,"endColumn":52},{"ruleId":"439","severity":1,"message":"528","line":53,"column":8,"nodeType":"441","endLine":53,"endColumn":17,"suggestions":"529"},{"ruleId":"449","severity":1,"message":"450","line":58,"column":26,"nodeType":"451","messageId":"452","endLine":58,"endColumn":28},{"ruleId":"449","severity":1,"message":"450","line":59,"column":24,"nodeType":"451","messageId":"452","endLine":59,"endColumn":26},{"ruleId":"449","severity":1,"message":"450","line":60,"column":31,"nodeType":"451","messageId":"452","endLine":60,"endColumn":33},{"ruleId":"449","severity":1,"message":"450","line":61,"column":25,"nodeType":"451","messageId":"452","endLine":61,"endColumn":27},{"ruleId":"449","severity":1,"message":"450","line":62,"column":28,"nodeType":"451","messageId":"452","endLine":62,"endColumn":30},{"ruleId":"449","severity":1,"message":"450","line":63,"column":27,"nodeType":"451","messageId":"452","endLine":63,"endColumn":29},{"ruleId":"449","severity":1,"message":"450","line":64,"column":27,"nodeType":"451","messageId":"452","endLine":64,"endColumn":29},{"ruleId":"443","severity":1,"message":"527","line":4,"column":34,"nodeType":"445","messageId":"446","endLine":4,"endColumn":52},{"ruleId":"530","severity":1,"message":"531","line":16,"column":9,"nodeType":"532","messageId":"533","endLine":24,"endColumn":10},{"ruleId":"449","severity":1,"message":"450","line":74,"column":38,"nodeType":"451","messageId":"452","endLine":74,"endColumn":40},{"ruleId":"439","severity":1,"message":"534","line":41,"column":8,"nodeType":"441","endLine":41,"endColumn":30,"suggestions":"535"},{"ruleId":"507","severity":1,"message":"508","line":53,"column":13,"nodeType":"509","messageId":"510","endLine":53,"endColumn":33},{"ruleId":"449","severity":1,"message":"450","line":11,"column":22,"nodeType":"451","messageId":"452","endLine":11,"endColumn":24},{"ruleId":"466","severity":1,"message":"467","line":26,"column":17,"nodeType":"463","endLine":26,"endColumn":73},"no-native-reassign",["536"],"no-negated-in-lhs",["537"],"react-hooks/exhaustive-deps","React Hook useEffect has unnecessary dependencies: 'document.documentElement.scrollTop' and 'window.pageYOffset'. Either exclude them or remove the dependency array. Outer scope values like 'document.documentElement.scrollTop' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["538"],"no-unused-vars","'Col' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["539"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["540"],["541"],"no-redeclare","'api' is already defined.","redeclared","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'fetchPage'. Either include it or remove the dependency array.",["542"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"543","text":"544"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"545","text":"544"},"'useEffect' is defined but never used.","Assignments to the 'id' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'fs' is defined but never used.","'Container' is defined but never used.",{"range":"546","text":"544"},"React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array.",["547"],["548"],"'yearsC' is assigned a value but never used.","'selection' is assigned a value but never used.","'setSelection' is assigned a value but never used.","'subjectName' is assigned a value but never used.","'setSubjectName' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'i'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has a missing dependency: 'filters'. Either include it or remove the dependency array.",["549"],{"range":"550","text":"544"},"'Typist' is defined but never used.","'faList' is defined but never used.",["551"],"'faChevronDown' is defined but never used.","'faChevronUp' is defined but never used.","'assignInsignias' is assigned a value but never used.","'Button' is defined but never used.","'Row' is defined but never used.","'Logo' is assigned a value but never used.","'hasFile' is defined but never used.",{"range":"552","text":"544"},{"range":"553","text":"544"},{"range":"554","text":"544"},"'val' is already defined.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",{"range":"555","text":"544"},"React Hook useEffect has a missing dependency: 'filterList.length'. Either include it or remove the dependency array.",["556"],"'zeroPad' is defined but never used.","'dayString' is defined but never used.","'months' is defined but never used.","React Hook useEffect has a missing dependency: 'setInitialCategories'. Either include it or remove the dependency array. If 'setInitialCategories' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["557"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'useState' is defined but never used.","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'getIcon' is assigned a value but never used.","'faCloudDownloadAlt' is defined but never used.","React Hook useEffect has a missing dependency: 'setAlert'. Either include it or remove the dependency array. If 'setAlert' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["558"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array. If 'setStyle' needs the current value of 'filter', you can also switch to useReducer instead of useState and read 'filter' in the reducer.",["559"],"no-global-assign","no-unsafe-negation",{"desc":"560","fix":"561"},{"desc":"562","fix":"563"},{"desc":"564","fix":"565"},{"desc":"562","fix":"566"},{"desc":"567","fix":"568"},[6154,6154]," rel=\"noreferrer\"",[1238,1238],[2666,2666],{"desc":"569","fix":"570"},{"desc":"562","fix":"571"},{"desc":"572","fix":"573"},[24909,24909],{"desc":"562","fix":"574"},[497,497],[700,700],[927,927],[1138,1138],{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},"Update the dependencies array to be: []",{"range":"583","text":"584"},"Update the dependencies array to be: [id]",{"range":"585","text":"586"},"Update the dependencies array to be: [id, selectedYear]",{"range":"587","text":"588"},{"range":"589","text":"586"},"Update the dependencies array to be: [fetchPage, whitelist]",{"range":"590","text":"591"},"Update the dependencies array to be: [selection, selPage, categories]",{"range":"592","text":"593"},{"range":"594","text":"586"},"Update the dependencies array to be: [activeFilters, selectedSubject, selStudent, selYear, selPage, selTeacher, filters]",{"range":"595","text":"596"},{"range":"597","text":"586"},"Update the dependencies array to be: [activeFilters, filterList.length]",{"range":"598","text":"599"},"Update the dependencies array to be: [setInitialCategories]",{"range":"600","text":"601"},"Update the dependencies array to be: [note_id, setAlert]",{"range":"602","text":"603"},"Update the dependencies array to be: [activeFilters, filter, hover]",{"range":"604","text":"605"},[893,949],"[]",[2129,2131],"[id]",[3229,3243],"[id, selectedYear]",[957,959],[2108,2119],"[fetchPage, whitelist]",[3298,3318],"[selection, selPage, categories]",[780,782],[12137,12211],"[activeFilters, selectedSubject, selStudent, selYear, selPage, selTeacher, filters]",[1142,1144],[1185,1200],"[activeFilters, filterList.length]",[1076,1078],"[setInitialCategories]",[2115,2124],"[note_id, setAlert]",[1510,1532],"[activeFilters, filter, hover]"]