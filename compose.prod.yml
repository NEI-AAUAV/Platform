version: "3.9"

services:
  db_pg:
    image: postgres:15-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes: 
      # - ./api-nei/app/db/setup.sql:/docker-entrypoint-initdb.d/nei-0001.sql
      # - ./api-rally/app/db/setup.sql:/docker-entrypoint-initdb.d/rally-0001.sql
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend
    restart: always

  db_mongo:
    image: mongo:6.0.5-jammy
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_DATABASE: mongo_test
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    networks:
      - backend
    restart: always

  api_nei:
    image: neiaauav/api-nei:${TAG:-latest}
    build:
      context: api-nei
      dockerfile: Dockerfile.prod
    ports:
      - 8000:8000
      - 587:587
    environment:
      ENV: production
      RECAPTCHA_ENABLED: "True"
      EMAIL_ENABLED: "True"
      POSTGRES_SERVER: db_pg
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET_KEY_PATH: /jwt.key
      JWT_PUBLIC_KEY_PATH: /jwt.key.pub
      EMAIL_SENDER_ADDRESS: ${EMAIL_SENDER_ADDRESS}
      EMAIL_SMTP_HOST: ${EMAIL_SMTP_HOST}
      EMAIL_SMTP_PASSWORD: ${EMAIL_SMTP_PASSWORD}
      EMAIL_SMTP_USER: ${EMAIL_SMTP_USER}
      IDP_SECRET_KEY: ${IDP_SECRET_KEY}
      RECAPTCHA_SECRET_KEY: ${RECAPTCHA_SECRET_KEY}
    volumes: 
      - /deploy/api-nei/static:/api_nei/static
      - /deploy/keys/jwt.key:/jwt.key:ro
      - /deploy/keys/jwt.key.pub:/jwt.key.pub:ro
    depends_on:
      db_pg:
        condition: service_healthy
    networks:
      - backend
    restart: always

  api_tacaua:
    image: neiaauav/api-tacaua:${TAG:-latest}
    build:
      context: api-tacaua
      dockerfile: Dockerfile.prod
    ports:
      - 8001:8001
    environment:
      ENV: production
      API_NEI_SERVER: api_nei
      POSTGRES_SERVER: db_pg
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PUBLIC_KEY: /jwt.key.pub
    volumes: 
      - /deploy/api-tacaua/static:/api_tacaua/static
      - /deploy/keys/jwt.key.pub:/jwt.key.pub:ro
    depends_on:
      db_pg:
        condition: service_healthy
    networks:
      - backend
    restart: always
    profiles:
      - disabled

  api_family:
    image: neiaauav/api-family:${TAG:-latest}
    build:
      context: api-family
      dockerfile: Dockerfile.prod
    ports:
      - 8002:8002
    environment:
      MONGO_SERVER: db_mongo
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      PUBLIC_KEY: /jwt.key.pub
    volumes:
      - /deploy/api-family/static:/api_family/static
      - /deploy/keys/jwt.key.pub:/jwt.key.pub:ro
    depends_on:
      db_mongo:
        condition: service_healthy
    networks:
      - backend
    restart: always
    profiles:
      - disabled

  web_nei:
    image: neiaauav/web-nei:${TAG:-latest}
    build:
      context: web-nei
      dockerfile: Dockerfile.prod
    ports:
      - 3000:3000
    networks:
      - frontend
    restart: always

  proxy:
    image: nginx:1.20-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - /deploy/proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - /deploy/proxy/locations.conf:/etc/nginx/conf.d/locations.conf:ro
      - /deploy/proxy/nei.web.ua.pt/default.prod.conf:/etc/nginx/conf.d/default.conf
      - /deploy/proxy/nei.web.ua.pt/ssl:/etc/ssl/private:ro
    depends_on:
      - web_nei
      - api_nei
      # - api_tacaua
      # - api_family
    networks:
      - backend
      - frontend
    restart: always

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  pg_data:
    driver: local
  mongo_data:
    driver: local
